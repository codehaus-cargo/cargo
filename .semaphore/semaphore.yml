version: v1.0
name: Codehaus Cargo Java build on Ubuntu
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu2004
execution_time_limit:
  hours: 12
global_job_config:
  prologue:
    commands:
      - echo 'echo "127.0.0.1 codehaus-cargo-ci" >> /etc/hosts' | sudo bash
      - sudo hostname codehaus-cargo-ci
      - pushd ~/
      - cache restore "codehaus-cargo-cache-tgz"
      - popd
      - checkout
      - export ORIGINAL_PWD=$PWD
      - mkdir -p /tmp/cargo
      - mkdir -p ~/.m2
      - mkdir -p ~/.m2/cargo-installs
      - mkdir -p ~/.m2/semaphore-ci-binaries
      - 'find ~/.m2/semaphore-ci-binaries -type f -name apache-maven-3.5.4-bin.tar.gz -size -5M -print -exec rm {} +'
      - ls -al ~/.m2/cargo-installs
      - ln -s ~/.m2/cargo-installs $ORIGINAL_PWD/core/samples/java/installs
      - ls -al ~/.m2/semaphore-ci-binaries
      - cd ~/.m2/semaphore-ci-binaries
      - 'wget -N --continue https://archive.apache.org/dist/maven/maven-3/3.5.4/binaries/apache-maven-3.5.4-bin.tar.gz ; RM=0'
      - tar -xvzf apache-maven-3.5.4-bin.tar.gz -C /tmp/cargo
      - cd $ORIGINAL_PWD
      - export MAVEN_HOME=/tmp/cargo/apache-maven-3.5.4
      - export MAVEN_OPTS="-Xmx768m"
      - 'export PATH=$MAVEN_HOME/bin:$PATH'
  epilogue:
    always:
      commands:
        - cd $ORIGINAL_PWD
        - mvn clean
        - ls -al ~/.m2/cargo-installs
        - ls -al ~/.m2/semaphore-ci-binaries
        - pushd ~/
        - cache restore "codehaus-cargo-cache-tgz"
        - cache delete "codehaus-cargo-cache-tgz"
        - cache store "codehaus-cargo-cache-tgz" .m2
        - cache list
        - ls -al ~/.m2/cargo-installs
        - ls -al ~/.m2/semaphore-ci-binaries
        - popd
blocks:
  - name: Perform initial build on Java 11
    dependencies: []
    task:
      jobs:
        - name: Perform initial build on Java 11
          commands:
            - rm -rf ~/.m2/repository/org/codehaus/cargo
            - sem-version java 11
            - mvn -version
            - mvn clean install -e || mvn clean install -e
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
            - mvn clean
  - name: Test Javadoc generation and deploy using Java 11
    dependencies:
      - Perform initial build on Java 11
    task:
      jobs:
        - name: Test Javadoc generation and deploy using Java 11
          commands:
            - sem-version java 11
            - 'mvn javadoc:aggregate'
            - mvn clean deploy -e || mvn clean deploy -e
            - 'find core/documentation/target -iname "*.log" -type f -exec artifact push job {} \;'
      secrets:
        - name: Snapshot deployment configuration
  - name: GlassFish 6.x
    dependencies:
      - Perform initial build on Java 11
    task:
      jobs:
        - name: GlassFish 6.x
          commands:
            - sem-version java 11
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pglassfish6x -Dsurefire.rerunFailingTestsCount=2
            - cd target
            - zip -r glassfish6x glassfish6x -i "*.log"
            - artifact push job glassfish6x.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: GlassFish 7.x
    dependencies:
      - Perform initial build on Java 11
    task:
      jobs:
        - name: GlassFish 7.x
          commands:
            - sem-version java 11
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pglassfish7x -Dsurefire.rerunFailingTestsCount=2
            - cd target
            - zip -r glassfish7x glassfish7x -i "*.log"
            - artifact push job glassfish7x.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: Jetty 10.x
    dependencies:
      - Perform initial build on Java 11
    task:
      jobs:
        - name: Jetty 10.x
          commands:
            - sem-version java 11
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pjetty10x -Dsurefire.rerunFailingTestsCount=2
            - cd target
            - zip -r jetty10x jetty10x -i "*.log"
            - artifact push job jetty10x.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: Jetty 11.x
    dependencies:
      - Perform initial build on Java 11
    task:
      jobs:
        - name: Jetty 11.x
          commands:
            - sem-version java 11
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pjetty11x -Dsurefire.rerunFailingTestsCount=2
            - cd target
            - zip -r jetty11x jetty11x -i "*.log"
            - artifact push job jetty11x.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: Payara
    dependencies:
      - Perform initial build on Java 11
    task:
      jobs:
        - name: Payara
          commands:
            - sem-version java 11
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Ppayarax -Dsurefire.rerunFailingTestsCount=2
            - cd target
            - zip -r payara payara -i "*.log"
            - artifact push job payara.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: Tomcat 10.x
    dependencies:
      - Perform initial build on Java 11
    task:
      jobs:
        - name: Tomcat 10.x
          commands:
            - sem-version java 11
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Ptomcat10x -Dsurefire.rerunFailingTestsCount=2
            - cd target
            - zip -r tomcat10x tomcat10x -i "*.log"
            - artifact push job tomcat10x.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: TomEE 9.x
    dependencies:
      - Perform initial build on Java 11
    task:
      jobs:
        - name: TomEE 9.x
          commands:
            - sem-version java 11
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Ptomee9x -Dsurefire.rerunFailingTestsCount=2
            - cd target
            - zip -r tomee9x tomee9x -i "*.log"
            - artifact push job tomee9x.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: WildFly 27.x
    dependencies:
      - Perform initial build on Java 11
    task:
      jobs:
        - name: WildFly 27.x
          commands:
            - sem-version java 11
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pwildfly27x -Dsurefire.rerunFailingTestsCount=2
            - cd target
            - zip -r wildfly27x wildfly27x -i "*.log"
            - artifact push job wildfly27x.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: WildFly 28.x
    dependencies:
      - Perform initial build on Java 11
    task:
      jobs:
        - name: WildFly 28.x
          commands:
            - sem-version java 11
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pwildfly28x -Dsurefire.rerunFailingTestsCount=2
            - cd target
            - zip -r wildfly28x wildfly28x -i "*.log"
            - artifact push job wildfly28x.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: WildFly 29.x
    dependencies:
      - Perform initial build on Java 11
    task:
      jobs:
        - name: WildFly 29.x
          commands:
            - sem-version java 11
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pwildfly29x -Dsurefire.rerunFailingTestsCount=2
            - cd target
            - zip -r wildfly29x wildfly29x -i "*.log"
            - artifact push job wildfly29x.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: WildFly 30.x
    dependencies:
      - Perform initial build on Java 11
    task:
      jobs:
        - name: WildFly 30.x
          commands:
            - sem-version java 11
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pwildfly30x -Dsurefire.rerunFailingTestsCount=2
            - cd target
            - zip -r wildfly30x wildfly30x -i "*.log"
            - artifact push job wildfly30x.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: Build on Java 8
    dependencies:
      - Perform initial build on Java 11
    task:
      jobs:
        - name: Build on Java 8
          commands:
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-8u202-linux-i586.tar.gz -size -150M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/8u202-b08/jdk-8u202-linux-i586.tar.gz ; RM=0'
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - cd $ORIGINAL_PWD
            - mvn -version
            - mvn clean install -e || mvn clean install -e
  - name: GlassFish 4.x
    dependencies:
      - Build on Java 8
    task:
      jobs:
        - name: GlassFish 4.x
          commands:
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-8u202-linux-i586.tar.gz -size -150M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/8u202-b08/jdk-8u202-linux-i586.tar.gz ; RM=0'
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pglassfish4x -Dsurefire.rerunFailingTestsCount=2
            - cd target
            - zip -r glassfish4x glassfish4x -i "*.log"
            - artifact push job glassfish4x.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: GlassFish 5.x
    dependencies:
      - Build on Java 8
    task:
      jobs:
        - name: GlassFish 5.x
          commands:
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-8u202-linux-i586.tar.gz -size -150M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/8u202-b08/jdk-8u202-linux-i586.tar.gz ; RM=0'
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pglassfish5x -Dsurefire.rerunFailingTestsCount=2
            - cd target
            - zip -r glassfish5x glassfish5x -i "*.log"
            - artifact push job glassfish5x.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: Jetty 9.x
    dependencies:
      - Build on Java 8
    task:
      jobs:
        - name: Jetty 9.x
          commands:
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-8u202-linux-i586.tar.gz -size -150M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/8u202-b08/jdk-8u202-linux-i586.tar.gz ; RM=0'
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pjetty9x -Dsurefire.rerunFailingTestsCount=2
            - cd target
            - zip -r jetty9x jetty9x -i "*.log"
            - artifact push job jetty9x.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: Resin 4.x
    dependencies:
      - Build on Java 8
    task:
      jobs:
        - name: Resin 4.x
          commands:
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-8u202-linux-i586.tar.gz -size -150M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/8u202-b08/jdk-8u202-linux-i586.tar.gz ; RM=0'
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Presin4x -Dsurefire.rerunFailingTestsCount=2
            - cd target
            - zip -r resin4x resin4x -i "*.log"
            - artifact push job resin4x.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: Tomcat 8.x
    dependencies:
      - Build on Java 8
    task:
      jobs:
        - name: Tomcat 8.x
          commands:
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-8u202-linux-i586.tar.gz -size -150M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/8u202-b08/jdk-8u202-linux-i586.tar.gz ; RM=0'
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Ptomcat8x -Dsurefire.rerunFailingTestsCount=2
            - cd target
            - zip -r tomcat8x tomcat8x -i "*.log"
            - artifact push job tomcat8x.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: Tomcat 9.x
    dependencies:
      - Build on Java 8
    task:
      jobs:
        - name: Tomcat 9.x
          commands:
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-8u202-linux-i586.tar.gz -size -150M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/8u202-b08/jdk-8u202-linux-i586.tar.gz ; RM=0'
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Ptomcat9x -Dsurefire.rerunFailingTestsCount=2
            - cd target
            - zip -r tomcat9x tomcat9x -i "*.log"
            - artifact push job tomcat9x.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: TomEE 7.x
    dependencies:
      - Build on Java 8
    task:
      jobs:
        - name: TomEE 7.x
          commands:
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-8u202-linux-i586.tar.gz -size -150M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/8u202-b08/jdk-8u202-linux-i586.tar.gz ; RM=0'
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Ptomee7x -Dsurefire.rerunFailingTestsCount=2
            - cd target
            - zip -r tomee7x tomee7x -i "*.log"
            - artifact push job tomee7x.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: TomEE 8.x
    dependencies:
      - Build on Java 8
    task:
      jobs:
        - name: TomEE 8.x
          commands:
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-8u202-linux-i586.tar.gz -size -150M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/8u202-b08/jdk-8u202-linux-i586.tar.gz ; RM=0'
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Ptomee8x -Dsurefire.rerunFailingTestsCount=2
            - cd target
            - zip -r tomee8x tomee8x -i "*.log"
            - artifact push job tomee8x.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: WebSphere Liberty
    dependencies:
      - Build on Java 8
    task:
      jobs:
        - name: WebSphere Liberty
          commands:
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-8u202-linux-i586.tar.gz -size -150M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/8u202-b08/jdk-8u202-linux-i586.tar.gz ; RM=0'
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pliberty -Dsurefire.rerunFailingTestsCount=2
            - cd target
            - zip -r liberty liberty -i "*.log"
            - artifact push job liberty.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: WildFly 8.x
    dependencies:
      - Build on Java 8
    task:
      jobs:
        - name: WildFly 8.x
          commands:
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-8u202-linux-i586.tar.gz -size -150M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/8u202-b08/jdk-8u202-linux-i586.tar.gz ; RM=0'
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pwildfly8x -Dsurefire.rerunFailingTestsCount=2
            - cd target
            - zip -r wildfly8x wildfly8x -i "*.log"
            - artifact push job wildfly8x.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: WildFly 9.x
    dependencies:
      - Build on Java 8
    task:
      jobs:
        - name: WildFly 9.x
          commands:
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-8u202-linux-i586.tar.gz -size -150M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/8u202-b08/jdk-8u202-linux-i586.tar.gz ; RM=0'
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pwildfly9x -Dsurefire.rerunFailingTestsCount=2
            - cd target
            - zip -r wildfly9x wildfly9x -i "*.log"
            - artifact push job wildfly9x.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: WildFly 10.x
    dependencies:
      - Build on Java 8
    task:
      jobs:
        - name: WildFly 10.x
          commands:
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-8u202-linux-i586.tar.gz -size -150M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/8u202-b08/jdk-8u202-linux-i586.tar.gz ; RM=0'
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pwildfly10x -Dsurefire.rerunFailingTestsCount=2
            - cd target
            - zip -r wildfly10x wildfly10x -i "*.log"
            - artifact push job wildfly10x.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: WildFly 11.x
    dependencies:
      - Build on Java 8
    task:
      jobs:
        - name: WildFly 11.x
          commands:
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-8u202-linux-i586.tar.gz -size -150M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/8u202-b08/jdk-8u202-linux-i586.tar.gz ; RM=0'
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pwildfly11x -Dsurefire.rerunFailingTestsCount=2
            - cd target
            - zip -r wildfly11x wildfly11x -i "*.log"
            - artifact push job wildfly11x.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: WildFly 12.x
    dependencies:
      - Build on Java 8
    task:
      jobs:
        - name: WildFly 12.x
          commands:
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-8u202-linux-i586.tar.gz -size -150M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/8u202-b08/jdk-8u202-linux-i586.tar.gz ; RM=0'
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pwildfly12x -Dsurefire.rerunFailingTestsCount=2
            - cd target
            - zip -r wildfly12x wildfly12x -i "*.log"
            - artifact push job wildfly12x.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: WildFly 13.x
    dependencies:
      - Build on Java 8
    task:
      jobs:
        - name: WildFly 13.x
          commands:
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-8u202-linux-i586.tar.gz -size -150M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/8u202-b08/jdk-8u202-linux-i586.tar.gz ; RM=0'
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pwildfly13x -Dsurefire.rerunFailingTestsCount=2
            - cd target
            - zip -r wildfly13x wildfly13x -i "*.log"
            - artifact push job wildfly13x.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: WildFly 14.x
    dependencies:
      - Build on Java 8
    task:
      jobs:
        - name: WildFly 14.x
          commands:
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-8u202-linux-i586.tar.gz -size -150M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/8u202-b08/jdk-8u202-linux-i586.tar.gz ; RM=0'
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pwildfly14x -Dsurefire.rerunFailingTestsCount=2
            - cd target
            - zip -r wildfly14x wildfly14x -i "*.log"
            - artifact push job wildfly14x.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: WildFly 15.x
    dependencies:
      - Build on Java 8
    task:
      jobs:
        - name: WildFly 15.x
          commands:
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-8u202-linux-i586.tar.gz -size -150M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/8u202-b08/jdk-8u202-linux-i586.tar.gz ; RM=0'
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pwildfly15x -Dsurefire.rerunFailingTestsCount=2
            - cd target
            - zip -r wildfly15x wildfly15x -i "*.log"
            - artifact push job wildfly15x.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: WildFly 16.x
    dependencies:
      - Build on Java 8
    task:
      jobs:
        - name: WildFly 16.x
          commands:
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-8u202-linux-i586.tar.gz -size -150M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/8u202-b08/jdk-8u202-linux-i586.tar.gz ; RM=0'
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pwildfly16x -Dsurefire.rerunFailingTestsCount=2
            - cd target
            - zip -r wildfly16x wildfly16x -i "*.log"
            - artifact push job wildfly16x.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: WildFly 17.x
    dependencies:
      - Build on Java 8
    task:
      jobs:
        - name: WildFly 17.x
          commands:
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-8u202-linux-i586.tar.gz -size -150M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/8u202-b08/jdk-8u202-linux-i586.tar.gz ; RM=0'
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pwildfly17x -Dsurefire.rerunFailingTestsCount=2
            - cd target
            - zip -r wildfly17x wildfly17x -i "*.log"
            - artifact push job wildfly17x.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: WildFly 18.x
    dependencies:
      - Build on Java 8
    task:
      jobs:
        - name: WildFly 18.x
          commands:
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-8u202-linux-i586.tar.gz -size -150M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/8u202-b08/jdk-8u202-linux-i586.tar.gz ; RM=0'
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pwildfly18x -Dsurefire.rerunFailingTestsCount=2
            - cd target
            - zip -r wildfly18x wildfly18x -i "*.log"
            - artifact push job wildfly18x.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: WildFly 19.x
    dependencies:
      - Build on Java 8
    task:
      jobs:
        - name: WildFly 19.x
          commands:
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-8u202-linux-i586.tar.gz -size -150M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/8u202-b08/jdk-8u202-linux-i586.tar.gz ; RM=0'
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pwildfly19x -Dsurefire.rerunFailingTestsCount=2
            - cd target
            - zip -r wildfly19x wildfly19x -i "*.log"
            - artifact push job wildfly19x.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: WildFly 20.x
    dependencies:
      - Build on Java 8
    task:
      jobs:
        - name: WildFly 20.x
          commands:
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-8u202-linux-i586.tar.gz -size -150M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/8u202-b08/jdk-8u202-linux-i586.tar.gz ; RM=0'
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pwildfly20x -Dsurefire.rerunFailingTestsCount=2
            - cd target
            - zip -r wildfly20x wildfly20x -i "*.log"
            - artifact push job wildfly20x.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: WildFly 21.x
    dependencies:
      - Build on Java 8
    task:
      jobs:
        - name: WildFly 21.x
          commands:
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-8u202-linux-i586.tar.gz -size -150M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/8u202-b08/jdk-8u202-linux-i586.tar.gz ; RM=0'
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pwildfly21x -Dsurefire.rerunFailingTestsCount=2
            - cd target
            - zip -r wildfly21x wildfly21x -i "*.log"
            - artifact push job wildfly21x.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: WildFly 22.x
    dependencies:
      - Build on Java 8
    task:
      jobs:
        - name: WildFly 22.x
          commands:
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-8u202-linux-i586.tar.gz -size -150M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/8u202-b08/jdk-8u202-linux-i586.tar.gz ; RM=0'
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pwildfly22x -Dsurefire.rerunFailingTestsCount=2
            - cd target
            - zip -r wildfly22x wildfly22x -i "*.log"
            - artifact push job wildfly22x.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: WildFly 23.x
    dependencies:
      - Build on Java 8
    task:
      jobs:
        - name: WildFly 23.x
          commands:
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-8u202-linux-i586.tar.gz -size -150M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/8u202-b08/jdk-8u202-linux-i586.tar.gz ; RM=0'
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pwildfly23x -Dsurefire.rerunFailingTestsCount=2
            - cd target
            - zip -r wildfly23x wildfly23x -i "*.log"
            - artifact push job wildfly23x.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: WildFly 24.x
    dependencies:
      - Build on Java 8
    task:
      jobs:
        - name: WildFly 24.x
          commands:
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-8u202-linux-i586.tar.gz -size -150M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/8u202-b08/jdk-8u202-linux-i586.tar.gz ; RM=0'
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pwildfly24x -Dsurefire.rerunFailingTestsCount=2
            - cd target
            - zip -r wildfly24x wildfly24x -i "*.log"
            - artifact push job wildfly24x.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: WildFly 25.x
    dependencies:
      - Build on Java 8
    task:
      jobs:
        - name: WildFly 25.x
          commands:
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-8u202-linux-i586.tar.gz -size -150M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/8u202-b08/jdk-8u202-linux-i586.tar.gz ; RM=0'
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pwildfly25x -Dsurefire.rerunFailingTestsCount=2
            - cd target
            - zip -r wildfly25x wildfly25x -i "*.log"
            - artifact push job wildfly25x.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: WildFly 26.x
    dependencies:
      - Build on Java 8
    task:
      jobs:
        - name: WildFly 26.x
          commands:
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-8u202-linux-i586.tar.gz -size -150M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/8u202-b08/jdk-8u202-linux-i586.tar.gz ; RM=0'
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pwildfly26x -Dsurefire.rerunFailingTestsCount=2
            - cd target
            - zip -r wildfly26x wildfly26x -i "*.log"
            - artifact push job wildfly26x.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: Prepare for containers running on Java 6
    dependencies:
      - Build on Java 8
    task:
      jobs:
        - name: Prepare for containers running on Java 6
          commands:
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-6u45-linux-x64.bin -size -50M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/6u45-b06/jdk-6u45-linux-x64.bin ; RM=0'
            - cp ~/.m2/semaphore-ci-binaries/jdk-6u45-linux-x64.bin /tmp/cargo
            - cd /tmp/cargo
            - chmod +x jdk-6u45-linux-x64.bin
            - ./jdk-6u45-linux-x64.bin < <(echo y)
  - name: Geronimo 1.x
    dependencies:
      - Prepare for containers running on Java 6
    task:
      jobs:
        - name: Geronimo 1.x
          commands:
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-8u202-linux-i586.tar.gz -size -150M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/8u202-b08/jdk-8u202-linux-i586.tar.gz ; RM=0'
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-6u45-linux-x64.bin -size -50M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/6u45-b06/jdk-6u45-linux-x64.bin ; RM=0'
            - cp ~/.m2/semaphore-ci-binaries/jdk-6u45-linux-x64.bin /tmp/cargo
            - cd /tmp/cargo
            - chmod +x jdk-6u45-linux-x64.bin
            - ./jdk-6u45-linux-x64.bin < <(echo y)
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pgeronimo1x -Dsurefire.rerunFailingTestsCount=2 -Dcargo.java.home.1_4=/tmp/cargo/jdk1.6.0_45
            - cd target
            - zip -r geronimo1x geronimo1x -i "*.log"
            - artifact push job geronimo1x.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: Geronimo 3.x
    dependencies:
      - Prepare for containers running on Java 6
    task:
      jobs:
        - name: Geronimo 3.x
          commands:
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-8u202-linux-i586.tar.gz -size -150M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/8u202-b08/jdk-8u202-linux-i586.tar.gz ; RM=0'
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-6u45-linux-x64.bin -size -50M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/6u45-b06/jdk-6u45-linux-x64.bin ; RM=0'
            - cp ~/.m2/semaphore-ci-binaries/jdk-6u45-linux-x64.bin /tmp/cargo
            - cd /tmp/cargo
            - chmod +x jdk-6u45-linux-x64.bin
            - ./jdk-6u45-linux-x64.bin < <(echo y)
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pgeronimo3x -Dsurefire.rerunFailingTestsCount=2 -Dcargo.java.home.1_6=/tmp/cargo/jdk1.6.0_45
            - cd target
            - zip -r geronimo3x geronimo3x -i "*.log"
            - artifact push job geronimo3x.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: GlassFish 3.x
    dependencies:
      - Prepare for containers running on Java 6
    task:
      jobs:
        - name: GlassFish 3.x
          commands:
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-8u202-linux-i586.tar.gz -size -150M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/8u202-b08/jdk-8u202-linux-i586.tar.gz ; RM=0'
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-6u45-linux-x64.bin -size -50M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/6u45-b06/jdk-6u45-linux-x64.bin ; RM=0'
            - cp ~/.m2/semaphore-ci-binaries/jdk-6u45-linux-x64.bin /tmp/cargo
            - cd /tmp/cargo
            - chmod +x jdk-6u45-linux-x64.bin
            - ./jdk-6u45-linux-x64.bin < <(echo y)
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pglassfish3x -Dsurefire.rerunFailingTestsCount=2 -Dcargo.java.home.1_6=/tmp/cargo/jdk1.6.0_45
            - cd target
            - zip -r glassfish3x glassfish3x -i "*.log"
            - artifact push job glassfish3x.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: JBoss 3.x
    dependencies:
      - Prepare for containers running on Java 6
    task:
      jobs:
        - name: JBoss 3.x
          commands:
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-8u202-linux-i586.tar.gz -size -150M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/8u202-b08/jdk-8u202-linux-i586.tar.gz ; RM=0'
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-6u45-linux-x64.bin -size -50M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/6u45-b06/jdk-6u45-linux-x64.bin ; RM=0'
            - cp ~/.m2/semaphore-ci-binaries/jdk-6u45-linux-x64.bin /tmp/cargo
            - cd /tmp/cargo
            - chmod +x jdk-6u45-linux-x64.bin
            - ./jdk-6u45-linux-x64.bin < <(echo y)
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pjboss3x -Dsurefire.rerunFailingTestsCount=2 -Dcargo.java.home.1_4=/tmp/cargo/jdk1.6.0_45
            - cd target
            - zip -r jboss3x jboss3x -i "*.log"
            - artifact push job jboss3x.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: JBoss 4.x
    dependencies:
      - Prepare for containers running on Java 6
    task:
      jobs:
        - name: JBoss 4.x
          commands:
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-8u202-linux-i586.tar.gz -size -150M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/8u202-b08/jdk-8u202-linux-i586.tar.gz ; RM=0'
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-6u45-linux-x64.bin -size -50M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/6u45-b06/jdk-6u45-linux-x64.bin ; RM=0'
            - cp ~/.m2/semaphore-ci-binaries/jdk-6u45-linux-x64.bin /tmp/cargo
            - cd /tmp/cargo
            - chmod +x jdk-6u45-linux-x64.bin
            - ./jdk-6u45-linux-x64.bin < <(echo y)
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pjboss4x -Dsurefire.rerunFailingTestsCount=2 -Dcargo.java.home.1_4=/tmp/cargo/jdk1.6.0_45
            - cd target
            - zip -r jboss4x jboss4x -i "*.log"
            - artifact push job jboss4x.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: JBoss 4.2.x
    dependencies:
      - Prepare for containers running on Java 6
    task:
      jobs:
        - name: JBoss 4.2.x
          commands:
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-8u202-linux-i586.tar.gz -size -150M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/8u202-b08/jdk-8u202-linux-i586.tar.gz ; RM=0'
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-6u45-linux-x64.bin -size -50M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/6u45-b06/jdk-6u45-linux-x64.bin ; RM=0'
            - cp ~/.m2/semaphore-ci-binaries/jdk-6u45-linux-x64.bin /tmp/cargo
            - cd /tmp/cargo
            - chmod +x jdk-6u45-linux-x64.bin
            - ./jdk-6u45-linux-x64.bin < <(echo y)
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pjboss42x -Dsurefire.rerunFailingTestsCount=2 -Dcargo.java.home.1_5=/tmp/cargo/jdk1.6.0_45
            - cd target
            - zip -r jboss42x jboss42x -i "*.log"
            - artifact push job jboss42x.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: JBoss 5.x
    dependencies:
      - Prepare for containers running on Java 6
    task:
      jobs:
        - name: JBoss 5.x
          commands:
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-8u202-linux-i586.tar.gz -size -150M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/8u202-b08/jdk-8u202-linux-i586.tar.gz ; RM=0'
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-6u45-linux-x64.bin -size -50M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/6u45-b06/jdk-6u45-linux-x64.bin ; RM=0'
            - cp ~/.m2/semaphore-ci-binaries/jdk-6u45-linux-x64.bin /tmp/cargo
            - cd /tmp/cargo
            - chmod +x jdk-6u45-linux-x64.bin
            - ./jdk-6u45-linux-x64.bin < <(echo y)
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pjboss5x -Dsurefire.rerunFailingTestsCount=2 -Dcargo.java.home.1_5=/tmp/cargo/jdk1.6.0_45
            - cd target
            - zip -r jboss5x jboss5x -i "*.log"
            - artifact push job jboss5x.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: JBoss 5.1.x
    dependencies:
      - Prepare for containers running on Java 6
    task:
      jobs:
        - name: JBoss 5.1.x
          commands:
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-8u202-linux-i586.tar.gz -size -150M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/8u202-b08/jdk-8u202-linux-i586.tar.gz ; RM=0'
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-6u45-linux-x64.bin -size -50M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/6u45-b06/jdk-6u45-linux-x64.bin ; RM=0'
            - cp ~/.m2/semaphore-ci-binaries/jdk-6u45-linux-x64.bin /tmp/cargo
            - cd /tmp/cargo
            - chmod +x jdk-6u45-linux-x64.bin
            - ./jdk-6u45-linux-x64.bin < <(echo y)
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pjboss51x -Dsurefire.rerunFailingTestsCount=2 -Dcargo.java.home.1_5=/tmp/cargo/jdk1.6.0_45
            - cd target
            - zip -r jboss51x jboss51x -i "*.log"
            - artifact push job jboss51x.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: JBoss 6.x
    dependencies:
      - Prepare for containers running on Java 6
    task:
      jobs:
        - name: JBoss 6.x
          commands:
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-8u202-linux-i586.tar.gz -size -150M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/8u202-b08/jdk-8u202-linux-i586.tar.gz ; RM=0'
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-6u45-linux-x64.bin -size -50M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/6u45-b06/jdk-6u45-linux-x64.bin ; RM=0'
            - cp ~/.m2/semaphore-ci-binaries/jdk-6u45-linux-x64.bin /tmp/cargo
            - cd /tmp/cargo
            - chmod +x jdk-6u45-linux-x64.bin
            - ./jdk-6u45-linux-x64.bin < <(echo y)
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pjboss6x -Dsurefire.rerunFailingTestsCount=2 -Dcargo.java.home.1_6=/tmp/cargo/jdk1.6.0_45
            - cd target
            - zip -r jboss6x jboss6x -i "*.log"
            - artifact push job jboss6x.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: JBoss 6.1.x
    dependencies:
      - Prepare for containers running on Java 6
    task:
      jobs:
        - name: JBoss 6.1.x
          commands:
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-8u202-linux-i586.tar.gz -size -150M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/8u202-b08/jdk-8u202-linux-i586.tar.gz ; RM=0'
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-6u45-linux-x64.bin -size -50M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/6u45-b06/jdk-6u45-linux-x64.bin ; RM=0'
            - cp ~/.m2/semaphore-ci-binaries/jdk-6u45-linux-x64.bin /tmp/cargo
            - cd /tmp/cargo
            - chmod +x jdk-6u45-linux-x64.bin
            - ./jdk-6u45-linux-x64.bin < <(echo y)
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pjboss61x -Dsurefire.rerunFailingTestsCount=2 -Dcargo.java.home.1_6=/tmp/cargo/jdk1.6.0_45
            - cd target
            - zip -r jboss61x jboss61x -i "*.log"
            - artifact push job jboss61x.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: JBoss 7.x
    dependencies:
      - Prepare for containers running on Java 6
    task:
      jobs:
        - name: JBoss 7.x
          commands:
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-8u202-linux-i586.tar.gz -size -150M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/8u202-b08/jdk-8u202-linux-i586.tar.gz ; RM=0'
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-6u45-linux-x64.bin -size -50M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/6u45-b06/jdk-6u45-linux-x64.bin ; RM=0'
            - cp ~/.m2/semaphore-ci-binaries/jdk-6u45-linux-x64.bin /tmp/cargo
            - cd /tmp/cargo
            - chmod +x jdk-6u45-linux-x64.bin
            - ./jdk-6u45-linux-x64.bin < <(echo y)
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pjboss7x -Dsurefire.rerunFailingTestsCount=2 -Dcargo.java.home.1_6=/tmp/cargo/jdk1.6.0_45
            - cd target
            - zip -r jboss7x jboss7x -i "*.log"
            - artifact push job jboss7x.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: JBoss 7.1.x
    dependencies:
      - Prepare for containers running on Java 6
    task:
      jobs:
        - name: JBoss 7.1.x
          commands:
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-8u202-linux-i586.tar.gz -size -150M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/8u202-b08/jdk-8u202-linux-i586.tar.gz ; RM=0'
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-6u45-linux-x64.bin -size -50M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/6u45-b06/jdk-6u45-linux-x64.bin ; RM=0'
            - cp ~/.m2/semaphore-ci-binaries/jdk-6u45-linux-x64.bin /tmp/cargo
            - cd /tmp/cargo
            - chmod +x jdk-6u45-linux-x64.bin
            - ./jdk-6u45-linux-x64.bin < <(echo y)
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pjboss71x -Dsurefire.rerunFailingTestsCount=2 -Dcargo.java.home.1_6=/tmp/cargo/jdk1.6.0_45
            - cd target
            - zip -r jboss71x jboss71x -i "*.log"
            - artifact push job jboss71x.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: Jetty 5.x
    dependencies:
      - Prepare for containers running on Java 6
    task:
      jobs:
        - name: Jetty 5.x
          commands:
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-8u202-linux-i586.tar.gz -size -150M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/8u202-b08/jdk-8u202-linux-i586.tar.gz ; RM=0'
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-6u45-linux-x64.bin -size -50M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/6u45-b06/jdk-6u45-linux-x64.bin ; RM=0'
            - cp ~/.m2/semaphore-ci-binaries/jdk-6u45-linux-x64.bin /tmp/cargo
            - cd /tmp/cargo
            - chmod +x jdk-6u45-linux-x64.bin
            - ./jdk-6u45-linux-x64.bin < <(echo y)
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pjetty5x -Dsurefire.rerunFailingTestsCount=2 -Dcargo.java.home.1_4=/tmp/cargo/jdk1.6.0_45
            - cd target
            - zip -r jetty5x jetty5x -i "*.log"
            - artifact push job jetty5x.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: Jetty 6.x
    dependencies:
      - Prepare for containers running on Java 6
    task:
      jobs:
        - name: Jetty 6.x
          commands:
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-8u202-linux-i586.tar.gz -size -150M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/8u202-b08/jdk-8u202-linux-i586.tar.gz ; RM=0'
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-6u45-linux-x64.bin -size -50M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/6u45-b06/jdk-6u45-linux-x64.bin ; RM=0'
            - cp ~/.m2/semaphore-ci-binaries/jdk-6u45-linux-x64.bin /tmp/cargo
            - cd /tmp/cargo
            - chmod +x jdk-6u45-linux-x64.bin
            - ./jdk-6u45-linux-x64.bin < <(echo y)
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pjetty6x -Dsurefire.rerunFailingTestsCount=2 -Dcargo.java.home.1_5=/tmp/cargo/jdk1.6.0_45
            - cd target
            - zip -r jetty6x jetty6x -i "*.log"
            - artifact push job jetty6x.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: Jetty 7.x
    dependencies:
      - Prepare for containers running on Java 6
    task:
      jobs:
        - name: Jetty 7.x
          commands:
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-8u202-linux-i586.tar.gz -size -150M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/8u202-b08/jdk-8u202-linux-i586.tar.gz ; RM=0'
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-6u45-linux-x64.bin -size -50M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/6u45-b06/jdk-6u45-linux-x64.bin ; RM=0'
            - cp ~/.m2/semaphore-ci-binaries/jdk-6u45-linux-x64.bin /tmp/cargo
            - cd /tmp/cargo
            - chmod +x jdk-6u45-linux-x64.bin
            - ./jdk-6u45-linux-x64.bin < <(echo y)
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pjetty7x -Dsurefire.rerunFailingTestsCount=2 -Dcargo.java.home.1_5=/tmp/cargo/jdk1.6.0_45
            - cd target
            - zip -r jetty7x jetty7x -i "*.log"
            - artifact push job jetty7x.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: Jetty 8.x
    dependencies:
      - Prepare for containers running on Java 6
    task:
      jobs:
        - name: Jetty 8.x
          commands:
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-8u202-linux-i586.tar.gz -size -150M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/8u202-b08/jdk-8u202-linux-i586.tar.gz ; RM=0'
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-6u45-linux-x64.bin -size -50M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/6u45-b06/jdk-6u45-linux-x64.bin ; RM=0'
            - cp ~/.m2/semaphore-ci-binaries/jdk-6u45-linux-x64.bin /tmp/cargo
            - cd /tmp/cargo
            - chmod +x jdk-6u45-linux-x64.bin
            - ./jdk-6u45-linux-x64.bin < <(echo y)
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pjetty8x -Dsurefire.rerunFailingTestsCount=2 -Dcargo.java.home.1_6=/tmp/cargo/jdk1.6.0_45
            - cd target
            - zip -r jetty8x jetty8x -i "*.log"
            - artifact push job jetty8x.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: Jo 1.x
    dependencies:
      - Prepare for containers running on Java 6
    task:
      jobs:
        - name: Jo 1.x
          commands:
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-8u202-linux-i586.tar.gz -size -150M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/8u202-b08/jdk-8u202-linux-i586.tar.gz ; RM=0'
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-6u45-linux-x64.bin -size -50M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/6u45-b06/jdk-6u45-linux-x64.bin ; RM=0'
            - cp ~/.m2/semaphore-ci-binaries/jdk-6u45-linux-x64.bin /tmp/cargo
            - cd /tmp/cargo
            - chmod +x jdk-6u45-linux-x64.bin
            - ./jdk-6u45-linux-x64.bin < <(echo y)
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pjo1x -Dsurefire.rerunFailingTestsCount=2 -Dcargo.java.home.1_4=/tmp/cargo/jdk1.6.0_45
            - cd target
            - zip -r jo1x jo1x -i "*.log"
            - artifact push job jo1x.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: JOnAS 4.x
    dependencies:
      - Prepare for containers running on Java 6
    task:
      jobs:
        - name: JOnAS 4.x
          commands:
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-8u202-linux-i586.tar.gz -size -150M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/8u202-b08/jdk-8u202-linux-i586.tar.gz ; RM=0'
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-6u45-linux-x64.bin -size -50M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/6u45-b06/jdk-6u45-linux-x64.bin ; RM=0'
            - cp ~/.m2/semaphore-ci-binaries/jdk-6u45-linux-x64.bin /tmp/cargo
            - cd /tmp/cargo
            - chmod +x jdk-6u45-linux-x64.bin
            - ./jdk-6u45-linux-x64.bin < <(echo y)
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pjonas4x -Dsurefire.rerunFailingTestsCount=2 -Dcargo.java.home.1_4=/tmp/cargo/jdk1.6.0_45
            - cd target
            - zip -r jonas4x jonas4x -i "*.log"
            - artifact push job jonas4x.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: JOnAS 5.x
    dependencies:
      - Prepare for containers running on Java 6
    task:
      jobs:
        - name: JOnAS 5.x
          commands:
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-8u202-linux-i586.tar.gz -size -150M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/8u202-b08/jdk-8u202-linux-i586.tar.gz ; RM=0'
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-6u45-linux-x64.bin -size -50M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/6u45-b06/jdk-6u45-linux-x64.bin ; RM=0'
            - cp ~/.m2/semaphore-ci-binaries/jdk-6u45-linux-x64.bin /tmp/cargo
            - cd /tmp/cargo
            - chmod +x jdk-6u45-linux-x64.bin
            - ./jdk-6u45-linux-x64.bin < <(echo y)
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pjonas5x -Dsurefire.rerunFailingTestsCount=2 -Dcargo.java.home.1_6=/tmp/cargo/jdk1.6.0_45
            - cd target
            - zip -r jonas5x jonas5x -i "*.log"
            - artifact push job jonas5x.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: Resin 3.x
    dependencies:
      - Prepare for containers running on Java 6
    task:
      jobs:
        - name: Resin 3.x
          commands:
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-8u202-linux-i586.tar.gz -size -150M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/8u202-b08/jdk-8u202-linux-i586.tar.gz ; RM=0'
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-6u45-linux-x64.bin -size -50M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/6u45-b06/jdk-6u45-linux-x64.bin ; RM=0'
            - cp ~/.m2/semaphore-ci-binaries/jdk-6u45-linux-x64.bin /tmp/cargo
            - cd /tmp/cargo
            - chmod +x jdk-6u45-linux-x64.bin
            - ./jdk-6u45-linux-x64.bin < <(echo y)
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Presin3x -Dsurefire.rerunFailingTestsCount=2 -Dcargo.java.home.1_5=/tmp/cargo/jdk1.6.0_45
            - cd target
            - zip -r resin3x resin3x -i "*.log"
            - artifact push job resin3x.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: Resin 3.1.x
    dependencies:
      - Prepare for containers running on Java 6
    task:
      jobs:
        - name: Resin 3.1.x
          commands:
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-8u202-linux-i586.tar.gz -size -150M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/8u202-b08/jdk-8u202-linux-i586.tar.gz ; RM=0'
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-6u45-linux-x64.bin -size -50M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/6u45-b06/jdk-6u45-linux-x64.bin ; RM=0'
            - cp ~/.m2/semaphore-ci-binaries/jdk-6u45-linux-x64.bin /tmp/cargo
            - cd /tmp/cargo
            - chmod +x jdk-6u45-linux-x64.bin
            - ./jdk-6u45-linux-x64.bin < <(echo y)
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Presin31x -Dsurefire.rerunFailingTestsCount=2 -Dcargo.java.home.1_5=/tmp/cargo/jdk1.6.0_45
            - cd target
            - zip -r resin31x resin31x -i "*.log"
            - artifact push job resin31x.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: Tomcat 4.x
    dependencies:
      - Prepare for containers running on Java 6
    task:
      jobs:
        - name: Tomcat 4.x
          commands:
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-8u202-linux-i586.tar.gz -size -150M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/8u202-b08/jdk-8u202-linux-i586.tar.gz ; RM=0'
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-6u45-linux-x64.bin -size -50M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/6u45-b06/jdk-6u45-linux-x64.bin ; RM=0'
            - cp ~/.m2/semaphore-ci-binaries/jdk-6u45-linux-x64.bin /tmp/cargo
            - cd /tmp/cargo
            - chmod +x jdk-6u45-linux-x64.bin
            - ./jdk-6u45-linux-x64.bin < <(echo y)
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Ptomcat4x -Dsurefire.rerunFailingTestsCount=2 -Dcargo.java.home.1_4=/tmp/cargo/jdk1.6.0_45
            - cd target
            - zip -r tomcat4x tomcat4x -i "*.log"
            - artifact push job tomcat4x.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: Tomcat 5.x
    dependencies:
      - Prepare for containers running on Java 6
    task:
      jobs:
        - name: Tomcat 5.x
          commands:
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-8u202-linux-i586.tar.gz -size -150M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/8u202-b08/jdk-8u202-linux-i586.tar.gz ; RM=0'
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-6u45-linux-x64.bin -size -50M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/6u45-b06/jdk-6u45-linux-x64.bin ; RM=0'
            - cp ~/.m2/semaphore-ci-binaries/jdk-6u45-linux-x64.bin /tmp/cargo
            - cd /tmp/cargo
            - chmod +x jdk-6u45-linux-x64.bin
            - ./jdk-6u45-linux-x64.bin < <(echo y)
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Ptomcat5x -Dsurefire.rerunFailingTestsCount=2 -Dcargo.java.home.1_4=/tmp/cargo/jdk1.6.0_45
            - cd target
            - zip -r tomcat5x tomcat5x -i "*.log"
            - artifact push job tomcat5x.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: Tomcat 6.x
    dependencies:
      - Prepare for containers running on Java 6
    task:
      jobs:
        - name: Tomcat 6.x
          commands:
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-8u202-linux-i586.tar.gz -size -150M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/8u202-b08/jdk-8u202-linux-i586.tar.gz ; RM=0'
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-6u45-linux-x64.bin -size -50M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/6u45-b06/jdk-6u45-linux-x64.bin ; RM=0'
            - cp ~/.m2/semaphore-ci-binaries/jdk-6u45-linux-x64.bin /tmp/cargo
            - cd /tmp/cargo
            - chmod +x jdk-6u45-linux-x64.bin
            - ./jdk-6u45-linux-x64.bin < <(echo y)
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Ptomcat6x -Dsurefire.rerunFailingTestsCount=2 -Dcargo.java.home.1_5=/tmp/cargo/jdk1.6.0_45
            - cd target
            - zip -r tomcat6x tomcat6x -i "*.log"
            - artifact push job tomcat6x.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: Tomcat 7.x
    dependencies:
      - Prepare for containers running on Java 6
    task:
      jobs:
        - name: Tomcat 7.x
          commands:
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-8u202-linux-i586.tar.gz -size -150M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/8u202-b08/jdk-8u202-linux-i586.tar.gz ; RM=0'
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-6u45-linux-x64.bin -size -50M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/6u45-b06/jdk-6u45-linux-x64.bin ; RM=0'
            - cp ~/.m2/semaphore-ci-binaries/jdk-6u45-linux-x64.bin /tmp/cargo
            - cd /tmp/cargo
            - chmod +x jdk-6u45-linux-x64.bin
            - ./jdk-6u45-linux-x64.bin < <(echo y)
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Ptomcat7x -Dsurefire.rerunFailingTestsCount=2 -Dcargo.java.home.1_6=/tmp/cargo/jdk1.6.0_45
            - cd target
            - zip -r tomcat7x tomcat7x -i "*.log"
            - artifact push job tomcat7x.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: TomEE 1.x
    dependencies:
      - Prepare for containers running on Java 6
    task:
      jobs:
        - name: TomEE 1.x
          commands:
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-8u202-linux-i586.tar.gz -size -150M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/8u202-b08/jdk-8u202-linux-i586.tar.gz ; RM=0'
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-6u45-linux-x64.bin -size -50M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/6u45-b06/jdk-6u45-linux-x64.bin ; RM=0'
            - cp ~/.m2/semaphore-ci-binaries/jdk-6u45-linux-x64.bin /tmp/cargo
            - cd /tmp/cargo
            - chmod +x jdk-6u45-linux-x64.bin
            - ./jdk-6u45-linux-x64.bin < <(echo y)
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Ptomee1x -Dsurefire.rerunFailingTestsCount=2 -Dcargo.java.home.1_6=/tmp/cargo/jdk1.6.0_45
            - cd target
            - zip -r tomee1x tomee1x -i "*.log"
            - artifact push job tomee1x.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: Build on Java 17
    dependencies:
      - Perform initial build on Java 11
    task:
      jobs:
        - name: Build on Java 17
          commands:
            - sem-version java 17
            - cd $ORIGINAL_PWD
            - mvn -version
            - mvn clean install
  - name: Jetty 12.x
    dependencies:
      - Build on Java 17
    task:
      jobs:
        - name: Jetty 12.x
          commands:
            - sem-version java 17
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pjetty12x -Dsurefire.rerunFailingTestsCount=2
            - cd target
            - zip -r jetty12x jetty12x -i "*.log"
            - artifact push job jetty12x.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: Build on Java 21
    dependencies:
      - Perform initial build on Java 11
    task:
      jobs:
        - name: Build on Java 21
          commands:
            - 'find ~/.m2/semaphore-ci-binaries -type f -name openjdk-21_linux-x64_bin.tar.gz -size -150M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://download.java.net/java/GA/jdk21/fd2272bbf8e04c3dbaee13770090416c/35/GPL/openjdk-21_linux-x64_bin.tar.gz ; RM=0'
            - tar -xvzf openjdk-21_linux-x64_bin.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk-21
            - cd $ORIGINAL_PWD
            - mvn -version
            - mvn clean install -e || mvn clean install -e
  - name: Tomcat 11.x
    dependencies:
      - Build on Java 21
    task:
      jobs:
        - name: Tomcat 11.x
          commands:
            - 'find ~/.m2/semaphore-ci-binaries -type f -name openjdk-21_linux-x64_bin.tar.gz -size -150M -print -exec rm {} +'
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://download.java.net/java/GA/jdk21/fd2272bbf8e04c3dbaee13770090416c/35/GPL/openjdk-21_linux-x64_bin.tar.gz ; RM=0'
            - tar -xvzf openjdk-21_linux-x64_bin.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk-21
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Ptomcat11x -Dsurefire.rerunFailingTestsCount=2
            - cd target
            - zip -r tomcat11x tomcat11x -i "*.log"
            - artifact push job tomcat11x.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
after_pipeline:
  task:
    jobs:
      - name: Publish test report
        commands:
          - test-results gen-pipeline-report
