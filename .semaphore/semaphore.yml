# -------------------------------------------------------------------
# Codehaus Cargo, copyright 2004-2011 Vincent Massol, 2012-2024 Ali Tokmen.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# -------------------------------------------------------------------

version: v1.0
name: Codehaus Cargo Java build on Ubuntu
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu2004
execution_time_limit:
  # Allow up to 5 to 6 Dependabot-triggered parallel branches
  hours: 18
global_job_config:
  prologue:
    commands:
      - echo 'echo "127.0.0.1 codehaus-cargo-ci" >> /etc/hosts' | sudo bash
      - sudo hostname codehaus-cargo-ci
      - CARGO_BRANCH_ID="$(echo "$SEMAPHORE_JOB_NAME" | tr '[:upper:]' '[:lower:]' | tr ' .' '--')"
      - checkout
      - export ORIGINAL_PWD=$PWD
      - cd ~/
      - cache list
      - cache restore "codehaus-cargo-cache-initial-build"
      - cache restore "codehaus-cargo-cache-containers-$CARGO_BRANCH_ID"
      - cd $ORIGINAL_PWD
      - mkdir -p /tmp/cargo
      - mkdir -p ~/.m2
      - mkdir -p ~/.m2/cargo-installs
      - mkdir -p ~/.m2/semaphore-ci-binaries
      - 'find ~/.m2/semaphore-ci-binaries -type f -name apache-maven-3.6.3-bin.tar.gz -size -5M -print -exec rm {} +'
      - du -sh ~/.m2/*
      - ls -al ~/.m2/cargo-installs
      - ln -s ~/.m2/cargo-installs $ORIGINAL_PWD/core/samples/java/installs
      - ls -al ~/.m2/semaphore-ci-binaries
      - cd ~/.m2/semaphore-ci-binaries
      - 'wget -N --continue https://archive.apache.org/dist/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.tar.gz ; RM=0'
      - tar -xvzf apache-maven-3.6.3-bin.tar.gz -C /tmp/cargo
      - cd $ORIGINAL_PWD
      - export MAVEN_HOME=/tmp/cargo/apache-maven-3.6.3
      - export MAVEN_OPTS="-Xmx768m"
      - 'export PATH=$MAVEN_HOME/bin:$PATH'
      - 'test ! -d ~/.m2/repository/org/codehaus/cargo/cargo-core-uberjar/ && sem-version java 11 && mvn -version && ( mvn clean install -pl :cargo-sample-java -am -T 1C || mvn clean install -e ) ; mvn clean -T 1C'
  epilogue:
    always:
      commands:
        - cd $ORIGINAL_PWD
        - zip -r "$SEMAPHORE_JOB_NAME logs.zip" . -i "*.log"
        - artifact push job "$SEMAPHORE_JOB_NAME logs.zip"
        - mvn clean -T 1C
        - du -sh ~/.m2/*
        - ls -al ~/.m2/cargo-installs
        - rm -f ~/.m2/cargo-installs/tomcat-9.*.zip
        - ls -al ~/.m2/semaphore-ci-binaries
        - cd ~/
        - cache delete "codehaus-cargo-cache-containers-$CARGO_BRANCH_ID"
        - '[ "$(ls -A ~/.m2/cargo-installs)" ] && cache store "codehaus-cargo-cache-containers-$CARGO_BRANCH_ID" .m2/cargo-installs --cleanup-by ACCESS_TIME || RM=0'
        - cache list
blocks:
  - name: Perform initial build and aggregate Javadoc on Java 11
    dependencies: []
    task:
      jobs:
        - name: Perform initial build and aggregate Javadoc on Java 11
          commands:
            - rm -rf ~/.m2/repository/org/codehaus/cargo
            - sem-version java 11
            - mvn -version
            - 'cp ~/.m2/repository/org/apache/tomcat/tomcat/9.*/tomcat-*.zip $ORIGINAL_PWD/core/samples/java/installs ; RM=0'
            - mvn clean install -T 1C || mvn clean install -e
            - rm -f $ORIGINAL_PWD/core/samples/java/installs/tomcat-9.*.zip
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
            - 'find core/documentation/target -iname "*.log" -type f -exec artifact push job {} \;'
            - 'mvn javadoc:aggregate -DdetectLinks=true -T 1C || mvn javadoc:aggregate -DdetectLinks=true -e'
            - cd ~/
            - cache delete "codehaus-cargo-cache-initial-build"
            - cache store "codehaus-cargo-cache-initial-build" .m2 --cleanup-by ACCESS_TIME
  - name: GlassFish 6.x
    dependencies:
      - Perform initial build and aggregate Javadoc on Java 11
    task:
      jobs:
        - name: GlassFish 6.x
          commands:
            - sem-version java 11
            - mvn -version
            - 'test ! -d ~/.m2/repository/org/codehaus/cargo/cargo-maven3-plugin/ && ( mvn clean install -pl :cargo-maven3-plugin -am -T 1C || mvn clean install -e ) ; mvn clean -T 1C'
            - cd $ORIGINAL_PWD/extensions/maven3/samples/glassfish6x-remoteDeploy-test
            - mvn clean install -Pglassfish6x || mvn clean install -e -Pglassfish6x
            - cd $ORIGINAL_PWD/core/samples/java
            - cp ~/.m2/repository/org/glassfish/main/distributions/glassfish/*/glassfish-*.zip installs
            - mvn clean install -e -Pglassfish6x -Dsurefire.rerunFailingTestsCount=3
            - rm -f installs/glassfish-*.zip
            - cd $ORIGINAL_PWD
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
            - cd ~/
            - cache delete "codehaus-cargo-cache-initial-build"
            - cache store "codehaus-cargo-cache-initial-build" .m2 --cleanup-by ACCESS_TIME
  - name: GlassFish 7.x
    dependencies:
      - Perform initial build and aggregate Javadoc on Java 11
    task:
      jobs:
        - name: GlassFish 7.x
          commands:
            - sem-version java 11
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pglassfish7x -Dsurefire.rerunFailingTestsCount=2
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: Jetty 10.x
    dependencies:
      - Perform initial build and aggregate Javadoc on Java 11
    task:
      jobs:
        - name: Jetty 10.x
          commands:
            - sem-version java 11
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pjetty10x -Dsurefire.rerunFailingTestsCount=2
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: Jetty 11.x
    dependencies:
      - Perform initial build and aggregate Javadoc on Java 11
    task:
      jobs:
        - name: Jetty 11.x
          commands:
            - sem-version java 11
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pjetty11x -Dsurefire.rerunFailingTestsCount=2
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: Payara
    dependencies:
      - Perform initial build and aggregate Javadoc on Java 11
    task:
      jobs:
        - name: Payara
          commands:
            - sem-version java 11
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Ppayara -Dsurefire.rerunFailingTestsCount=2
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: Tomcat 10.x
    dependencies:
      - Perform initial build and aggregate Javadoc on Java 11
    task:
      jobs:
        - name: Tomcat 10.x
          commands:
            - sem-version java 11
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Ptomcat10x -Dsurefire.rerunFailingTestsCount=2
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: TomEE 9.x
    dependencies:
      - Perform initial build and aggregate Javadoc on Java 11
    task:
      jobs:
        - name: TomEE 9.x
          commands:
            - sem-version java 11
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Ptomee9x -Dsurefire.rerunFailingTestsCount=2
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: WildFly 27.x
    dependencies:
      - Perform initial build and aggregate Javadoc on Java 11
    task:
      jobs:
        - name: WildFly 27.x
          commands:
            - sem-version java 11
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pwildfly27x -Dsurefire.rerunFailingTestsCount=2
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: WildFly 28.x
    dependencies:
      - Perform initial build and aggregate Javadoc on Java 11
    task:
      jobs:
        - name: WildFly 28.x
          commands:
            - sem-version java 11
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pwildfly28x -Dsurefire.rerunFailingTestsCount=2
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: WildFly 29.x
    dependencies:
      - Perform initial build and aggregate Javadoc on Java 11
    task:
      jobs:
        - name: WildFly 29.x
          commands:
            - sem-version java 11
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pwildfly29x -Dsurefire.rerunFailingTestsCount=2
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: WildFly 30.x
    dependencies:
      - Perform initial build and aggregate Javadoc on Java 11
    task:
      jobs:
        - name: WildFly 30.x
          commands:
            - sem-version java 11
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pwildfly30x -Dsurefire.rerunFailingTestsCount=2
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: WildFly 31.x
    dependencies:
      - Perform initial build and aggregate Javadoc on Java 11
    task:
      jobs:
        - name: WildFly 31.x
          commands:
            - sem-version java 11
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pwildfly31x -Dsurefire.rerunFailingTestsCount=2
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: WildFly 32.x
    dependencies:
      - Perform initial build and aggregate Javadoc on Java 11
    task:
      jobs:
        - name: WildFly 32.x
          commands:
            - sem-version java 11
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pwildfly32x -Dsurefire.rerunFailingTestsCount=2
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: WildFly 33.x
    dependencies:
      - Perform initial build and aggregate Javadoc on Java 11
    task:
      jobs:
        - name: WildFly 33.x
          commands:
            - sem-version java 11
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pwildfly33x -Dsurefire.rerunFailingTestsCount=2
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: WildFly 34.x
    dependencies:
      - Perform initial build and aggregate Javadoc on Java 11
    task:
      jobs:
        - name: WildFly 34.x
          commands:
            - sem-version java 11
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pwildfly34x -Dsurefire.rerunFailingTestsCount=2
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: Build on Java 8
    dependencies:
      - Perform initial build and aggregate Javadoc on Java 11
    task:
      jobs:
        - name: Build on Java 8
          commands:
            - cd ~/.m2/semaphore-ci-binaries
            - cache restore "codehaus-cargo-cache-java-8"
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-8u202-linux-i586.tar.gz -size -150M -print -exec rm {} +'
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/8u202-b08/jdk-8u202-linux-i586.tar.gz ; RM=0'
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - cache delete "codehaus-cargo-cache-java-8"
            - cache store "codehaus-cargo-cache-java-8" jdk-8u202-linux-i586.tar.gz --cleanup-by ACCESS_TIME
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - cd $ORIGINAL_PWD
            - mvn -version
            - 'cp ~/.m2/repository/org/apache/tomcat/tomcat/9.*/tomcat-*.zip $ORIGINAL_PWD/core/samples/java/installs ; RM=0'
            - mvn clean install -T 1C || mvn clean install -e
            - rm -f $ORIGINAL_PWD/core/samples/java/installs/tomcat-9.*.zip
            - cd ~/
            - cache delete "codehaus-cargo-cache-initial-build"
            - cache store "codehaus-cargo-cache-initial-build" .m2 --cleanup-by ACCESS_TIME
  - name: GlassFish 4.x
    dependencies:
      - Build on Java 8
    task:
      jobs:
        - name: GlassFish 4.x
          commands:
            - cd ~/.m2/semaphore-ci-binaries
            - cache restore "codehaus-cargo-cache-java-8"
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pglassfish4x -Dsurefire.rerunFailingTestsCount=2
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: GlassFish 5.x
    dependencies:
      - Build on Java 8
    task:
      jobs:
        - name: GlassFish 5.x
          commands:
            - cd ~/.m2/semaphore-ci-binaries
            - cache restore "codehaus-cargo-cache-java-8"
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pglassfish5x -Dsurefire.rerunFailingTestsCount=2
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: Jetty 9.x
    dependencies:
      - Build on Java 8
    task:
      jobs:
        - name: Jetty 9.x
          commands:
            - cd ~/.m2/semaphore-ci-binaries
            - cache restore "codehaus-cargo-cache-java-8"
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pjetty9x -Dsurefire.rerunFailingTestsCount=2
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: Resin 4.x
    dependencies:
      - Build on Java 8
    task:
      jobs:
        - name: Resin 4.x
          commands:
            - cd ~/.m2/semaphore-ci-binaries
            - cache restore "codehaus-cargo-cache-java-8"
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Presin4x -Dsurefire.rerunFailingTestsCount=2
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: Tomcat 8.x
    dependencies:
      - Build on Java 8
    task:
      jobs:
        - name: Tomcat 8.x
          commands:
            - cd ~/.m2/semaphore-ci-binaries
            - cache restore "codehaus-cargo-cache-java-8"
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Ptomcat8x -Dsurefire.rerunFailingTestsCount=2
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: Tomcat 9.x
    dependencies:
      - Build on Java 8
    task:
      jobs:
        - name: Tomcat 9.x
          commands:
            - cd ~/.m2/semaphore-ci-binaries
            - cache restore "codehaus-cargo-cache-java-8"
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Ptomcat9x -Dsurefire.rerunFailingTestsCount=2
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: TomEE 7.x
    dependencies:
      - Build on Java 8
    task:
      jobs:
        - name: TomEE 7.x
          commands:
            - cd ~/.m2/semaphore-ci-binaries
            - cache restore "codehaus-cargo-cache-java-8"
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Ptomee7x -Dsurefire.rerunFailingTestsCount=2
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: TomEE 8.x
    dependencies:
      - Build on Java 8
    task:
      jobs:
        - name: TomEE 8.x
          commands:
            - cd ~/.m2/semaphore-ci-binaries
            - cache restore "codehaus-cargo-cache-java-8"
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Ptomee8x -Dsurefire.rerunFailingTestsCount=2
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: WebSphere Liberty
    dependencies:
      - Build on Java 8
    task:
      jobs:
        - name: WebSphere Liberty
          commands:
            - cd ~/.m2/semaphore-ci-binaries
            - cache restore "codehaus-cargo-cache-java-8"
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pliberty -Dsurefire.rerunFailingTestsCount=2
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: WildFly 8.x
    dependencies:
      - Build on Java 8
    task:
      jobs:
        - name: WildFly 8.x
          commands:
            - cd ~/.m2/semaphore-ci-binaries
            - cache restore "codehaus-cargo-cache-java-8"
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pwildfly8x -Dsurefire.rerunFailingTestsCount=2
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: WildFly 9.x
    dependencies:
      - Build on Java 8
    task:
      jobs:
        - name: WildFly 9.x
          commands:
            - cd ~/.m2/semaphore-ci-binaries
            - cache restore "codehaus-cargo-cache-java-8"
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pwildfly9x -Dsurefire.rerunFailingTestsCount=2
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: WildFly 10.x
    dependencies:
      - Build on Java 8
    task:
      jobs:
        - name: WildFly 10.x
          commands:
            - cd ~/.m2/semaphore-ci-binaries
            - cache restore "codehaus-cargo-cache-java-8"
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pwildfly10x -Dsurefire.rerunFailingTestsCount=2
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: WildFly 11.x
    dependencies:
      - Build on Java 8
    task:
      jobs:
        - name: WildFly 11.x
          commands:
            - cd ~/.m2/semaphore-ci-binaries
            - cache restore "codehaus-cargo-cache-java-8"
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pwildfly11x -Dsurefire.rerunFailingTestsCount=2
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: WildFly 12.x
    dependencies:
      - Build on Java 8
    task:
      jobs:
        - name: WildFly 12.x
          commands:
            - cd ~/.m2/semaphore-ci-binaries
            - cache restore "codehaus-cargo-cache-java-8"
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pwildfly12x -Dsurefire.rerunFailingTestsCount=2
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: WildFly 13.x
    dependencies:
      - Build on Java 8
    task:
      jobs:
        - name: WildFly 13.x
          commands:
            - cd ~/.m2/semaphore-ci-binaries
            - cache restore "codehaus-cargo-cache-java-8"
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pwildfly13x -Dsurefire.rerunFailingTestsCount=2
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: WildFly 14.x
    dependencies:
      - Build on Java 8
    task:
      jobs:
        - name: WildFly 14.x
          commands:
            - cd ~/.m2/semaphore-ci-binaries
            - cache restore "codehaus-cargo-cache-java-8"
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pwildfly14x -Dsurefire.rerunFailingTestsCount=2
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: WildFly 15.x
    dependencies:
      - Build on Java 8
    task:
      jobs:
        - name: WildFly 15.x
          commands:
            - cd ~/.m2/semaphore-ci-binaries
            - cache restore "codehaus-cargo-cache-java-8"
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pwildfly15x -Dsurefire.rerunFailingTestsCount=2
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: WildFly 16.x
    dependencies:
      - Build on Java 8
    task:
      jobs:
        - name: WildFly 16.x
          commands:
            - cd ~/.m2/semaphore-ci-binaries
            - cache restore "codehaus-cargo-cache-java-8"
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pwildfly16x -Dsurefire.rerunFailingTestsCount=2
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: WildFly 17.x
    dependencies:
      - Build on Java 8
    task:
      jobs:
        - name: WildFly 17.x
          commands:
            - cd ~/.m2/semaphore-ci-binaries
            - cache restore "codehaus-cargo-cache-java-8"
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pwildfly17x -Dsurefire.rerunFailingTestsCount=2
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: WildFly 18.x
    dependencies:
      - Build on Java 8
    task:
      jobs:
        - name: WildFly 18.x
          commands:
            - cd ~/.m2/semaphore-ci-binaries
            - cache restore "codehaus-cargo-cache-java-8"
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pwildfly18x -Dsurefire.rerunFailingTestsCount=2
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: WildFly 19.x
    dependencies:
      - Build on Java 8
    task:
      jobs:
        - name: WildFly 19.x
          commands:
            - cd ~/.m2/semaphore-ci-binaries
            - cache restore "codehaus-cargo-cache-java-8"
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pwildfly19x -Dsurefire.rerunFailingTestsCount=2
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: WildFly 20.x
    dependencies:
      - Build on Java 8
    task:
      jobs:
        - name: WildFly 20.x
          commands:
            - cd ~/.m2/semaphore-ci-binaries
            - cache restore "codehaus-cargo-cache-java-8"
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pwildfly20x -Dsurefire.rerunFailingTestsCount=2
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: WildFly 21.x
    dependencies:
      - Build on Java 8
    task:
      jobs:
        - name: WildFly 21.x
          commands:
            - cd ~/.m2/semaphore-ci-binaries
            - cache restore "codehaus-cargo-cache-java-8"
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pwildfly21x -Dsurefire.rerunFailingTestsCount=2
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: WildFly 22.x
    dependencies:
      - Build on Java 8
    task:
      jobs:
        - name: WildFly 22.x
          commands:
            - cd ~/.m2/semaphore-ci-binaries
            - cache restore "codehaus-cargo-cache-java-8"
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pwildfly22x -Dsurefire.rerunFailingTestsCount=2
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: WildFly 23.x
    dependencies:
      - Build on Java 8
    task:
      jobs:
        - name: WildFly 23.x
          commands:
            - cd ~/.m2/semaphore-ci-binaries
            - cache restore "codehaus-cargo-cache-java-8"
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pwildfly23x -Dsurefire.rerunFailingTestsCount=2
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: WildFly 24.x
    dependencies:
      - Build on Java 8
    task:
      jobs:
        - name: WildFly 24.x
          commands:
            - cd ~/.m2/semaphore-ci-binaries
            - cache restore "codehaus-cargo-cache-java-8"
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pwildfly24x -Dsurefire.rerunFailingTestsCount=2
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: WildFly 25.x
    dependencies:
      - Build on Java 8
    task:
      jobs:
        - name: WildFly 25.x
          commands:
            - cd ~/.m2/semaphore-ci-binaries
            - cache restore "codehaus-cargo-cache-java-8"
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pwildfly25x -Dsurefire.rerunFailingTestsCount=2
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: WildFly 26.x
    dependencies:
      - Build on Java 8
    task:
      jobs:
        - name: WildFly 26.x
          commands:
            - cd ~/.m2/semaphore-ci-binaries
            - cache restore "codehaus-cargo-cache-java-8"
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pwildfly26x -Dsurefire.rerunFailingTestsCount=2
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: WildFly Swarm
    dependencies:
      - Build on Java 8
    task:
      jobs:
        - name: WildFly Swarm
          commands:
            - cd ~/.m2/semaphore-ci-binaries
            - cache restore "codehaus-cargo-cache-java-8"
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pwildfly-swarm2017x -Dsurefire.rerunFailingTestsCount=2
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
            - cd ~/
            - cache delete "codehaus-cargo-cache-initial-build"
            - cache store "codehaus-cargo-cache-initial-build" .m2 --cleanup-by ACCESS_TIME
  - name: Prepare for containers running on Java 6
    dependencies:
      - Build on Java 8
    task:
      jobs:
        - name: Prepare for containers running on Java 6
          commands:
            - cd ~/.m2/semaphore-ci-binaries
            - cache restore "codehaus-cargo-cache-java-6"
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-6u45-linux-x64.bin -size -50M -print -exec rm {} +'
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/6u45-b06/jdk-6u45-linux-x64.bin ; RM=0'
            - cp ~/.m2/semaphore-ci-binaries/jdk-6u45-linux-x64.bin /tmp/cargo
            - cd /tmp/cargo
            - chmod +x jdk-6u45-linux-x64.bin
            - ./jdk-6u45-linux-x64.bin < <(echo y)
            - cd ~/.m2/semaphore-ci-binaries
            - cache delete "codehaus-cargo-cache-java-6"
            - cache store "codehaus-cargo-cache-java-6" jdk-6u45-linux-x64.bin --cleanup-by ACCESS_TIME
  - name: Geronimo 1.x
    dependencies:
      - Prepare for containers running on Java 6
    task:
      jobs:
        - name: Geronimo 1.x
          commands:
            - cd ~/.m2/semaphore-ci-binaries
            - cache restore "codehaus-cargo-cache-java-8"
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - cache restore "codehaus-cargo-cache-java-6"
            - cp ~/.m2/semaphore-ci-binaries/jdk-6u45-linux-x64.bin /tmp/cargo
            - cd /tmp/cargo
            - chmod +x jdk-6u45-linux-x64.bin
            - ./jdk-6u45-linux-x64.bin < <(echo y)
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pgeronimo1x -Dsurefire.rerunFailingTestsCount=2 -Dcargo.java.home.1_4=/tmp/cargo/jdk1.6.0_45
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: Geronimo 3.x
    dependencies:
      - Prepare for containers running on Java 6
    task:
      jobs:
        - name: Geronimo 3.x
          commands:
            - cd ~/.m2/semaphore-ci-binaries
            - cache restore "codehaus-cargo-cache-java-8"
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - cache restore "codehaus-cargo-cache-java-6"
            - cp ~/.m2/semaphore-ci-binaries/jdk-6u45-linux-x64.bin /tmp/cargo
            - cd /tmp/cargo
            - chmod +x jdk-6u45-linux-x64.bin
            - ./jdk-6u45-linux-x64.bin < <(echo y)
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pgeronimo3x -Dsurefire.rerunFailingTestsCount=2 -Dcargo.java.home.1_6=/tmp/cargo/jdk1.6.0_45
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: GlassFish 3.x
    dependencies:
      - Prepare for containers running on Java 6
    task:
      jobs:
        - name: GlassFish 3.x
          commands:
            - cd ~/.m2/semaphore-ci-binaries
            - cache restore "codehaus-cargo-cache-java-8"
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - cache restore "codehaus-cargo-cache-java-6"
            - cp ~/.m2/semaphore-ci-binaries/jdk-6u45-linux-x64.bin /tmp/cargo
            - cd /tmp/cargo
            - chmod +x jdk-6u45-linux-x64.bin
            - ./jdk-6u45-linux-x64.bin < <(echo y)
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pglassfish3x -Dsurefire.rerunFailingTestsCount=2 -Dcargo.java.home.1_6=/tmp/cargo/jdk1.6.0_45
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: JBoss 3.x
    dependencies:
      - Prepare for containers running on Java 6
    task:
      jobs:
        - name: JBoss 3.x
          commands:
            - cd ~/.m2/semaphore-ci-binaries
            - cache restore "codehaus-cargo-cache-java-8"
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - cache restore "codehaus-cargo-cache-java-6"
            - cp ~/.m2/semaphore-ci-binaries/jdk-6u45-linux-x64.bin /tmp/cargo
            - cd /tmp/cargo
            - chmod +x jdk-6u45-linux-x64.bin
            - ./jdk-6u45-linux-x64.bin < <(echo y)
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pjboss3x -Dsurefire.rerunFailingTestsCount=2 -Dcargo.java.home.1_4=/tmp/cargo/jdk1.6.0_45
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: JBoss 4.x
    dependencies:
      - Prepare for containers running on Java 6
    task:
      jobs:
        - name: JBoss 4.x
          commands:
            - cd ~/.m2/semaphore-ci-binaries
            - cache restore "codehaus-cargo-cache-java-8"
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - cache restore "codehaus-cargo-cache-java-6"
            - cp ~/.m2/semaphore-ci-binaries/jdk-6u45-linux-x64.bin /tmp/cargo
            - cd /tmp/cargo
            - chmod +x jdk-6u45-linux-x64.bin
            - ./jdk-6u45-linux-x64.bin < <(echo y)
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pjboss4x -Dsurefire.rerunFailingTestsCount=2 -Dcargo.java.home.1_4=/tmp/cargo/jdk1.6.0_45
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: JBoss 4.2.x
    dependencies:
      - Prepare for containers running on Java 6
    task:
      jobs:
        - name: JBoss 4.2.x
          commands:
            - cd ~/.m2/semaphore-ci-binaries
            - cache restore "codehaus-cargo-cache-java-8"
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - cache restore "codehaus-cargo-cache-java-6"
            - cp ~/.m2/semaphore-ci-binaries/jdk-6u45-linux-x64.bin /tmp/cargo
            - cd /tmp/cargo
            - chmod +x jdk-6u45-linux-x64.bin
            - ./jdk-6u45-linux-x64.bin < <(echo y)
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pjboss42x -Dsurefire.rerunFailingTestsCount=2 -Dcargo.java.home.1_5=/tmp/cargo/jdk1.6.0_45
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: JBoss 5.x
    dependencies:
      - Prepare for containers running on Java 6
    task:
      jobs:
        - name: JBoss 5.x
          commands:
            - cd ~/.m2/semaphore-ci-binaries
            - cache restore "codehaus-cargo-cache-java-8"
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - cache restore "codehaus-cargo-cache-java-6"
            - cp ~/.m2/semaphore-ci-binaries/jdk-6u45-linux-x64.bin /tmp/cargo
            - cd /tmp/cargo
            - chmod +x jdk-6u45-linux-x64.bin
            - ./jdk-6u45-linux-x64.bin < <(echo y)
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pjboss5x -Dsurefire.rerunFailingTestsCount=2 -Dcargo.java.home.1_5=/tmp/cargo/jdk1.6.0_45
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: JBoss 5.1.x
    dependencies:
      - Prepare for containers running on Java 6
    task:
      jobs:
        - name: JBoss 5.1.x
          commands:
            - cd ~/.m2/semaphore-ci-binaries
            - cache restore "codehaus-cargo-cache-java-8"
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - cache restore "codehaus-cargo-cache-java-6"
            - cp ~/.m2/semaphore-ci-binaries/jdk-6u45-linux-x64.bin /tmp/cargo
            - cd /tmp/cargo
            - chmod +x jdk-6u45-linux-x64.bin
            - ./jdk-6u45-linux-x64.bin < <(echo y)
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pjboss51x -Dsurefire.rerunFailingTestsCount=2 -Dcargo.java.home.1_5=/tmp/cargo/jdk1.6.0_45
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: JBoss 6.x
    dependencies:
      - Prepare for containers running on Java 6
    task:
      jobs:
        - name: JBoss 6.x
          commands:
            - cd ~/.m2/semaphore-ci-binaries
            - cache restore "codehaus-cargo-cache-java-8"
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - cache restore "codehaus-cargo-cache-java-6"
            - cp ~/.m2/semaphore-ci-binaries/jdk-6u45-linux-x64.bin /tmp/cargo
            - cd /tmp/cargo
            - chmod +x jdk-6u45-linux-x64.bin
            - ./jdk-6u45-linux-x64.bin < <(echo y)
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pjboss6x -Dsurefire.rerunFailingTestsCount=2 -Dcargo.java.home.1_6=/tmp/cargo/jdk1.6.0_45
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: JBoss 6.1.x
    dependencies:
      - Prepare for containers running on Java 6
    task:
      jobs:
        - name: JBoss 6.1.x
          commands:
            - cd ~/.m2/semaphore-ci-binaries
            - cache restore "codehaus-cargo-cache-java-8"
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - cache restore "codehaus-cargo-cache-java-6"
            - cp ~/.m2/semaphore-ci-binaries/jdk-6u45-linux-x64.bin /tmp/cargo
            - cd /tmp/cargo
            - chmod +x jdk-6u45-linux-x64.bin
            - ./jdk-6u45-linux-x64.bin < <(echo y)
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pjboss61x -Dsurefire.rerunFailingTestsCount=2 -Dcargo.java.home.1_6=/tmp/cargo/jdk1.6.0_45
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: JBoss 7.x
    dependencies:
      - Prepare for containers running on Java 6
    task:
      jobs:
        - name: JBoss 7.x
          commands:
            - cd ~/.m2/semaphore-ci-binaries
            - cache restore "codehaus-cargo-cache-java-8"
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - cache restore "codehaus-cargo-cache-java-6"
            - cp ~/.m2/semaphore-ci-binaries/jdk-6u45-linux-x64.bin /tmp/cargo
            - cd /tmp/cargo
            - chmod +x jdk-6u45-linux-x64.bin
            - ./jdk-6u45-linux-x64.bin < <(echo y)
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pjboss7x -Dsurefire.rerunFailingTestsCount=2 -Dcargo.java.home.1_6=/tmp/cargo/jdk1.6.0_45
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: JBoss 7.1.x
    dependencies:
      - Prepare for containers running on Java 6
    task:
      jobs:
        - name: JBoss 7.1.x
          commands:
            - cd ~/.m2/semaphore-ci-binaries
            - cache restore "codehaus-cargo-cache-java-8"
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - cache restore "codehaus-cargo-cache-java-6"
            - cp ~/.m2/semaphore-ci-binaries/jdk-6u45-linux-x64.bin /tmp/cargo
            - cd /tmp/cargo
            - chmod +x jdk-6u45-linux-x64.bin
            - ./jdk-6u45-linux-x64.bin < <(echo y)
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pjboss71x -Dsurefire.rerunFailingTestsCount=2 -Dcargo.java.home.1_6=/tmp/cargo/jdk1.6.0_45
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: Jetty 5.x
    dependencies:
      - Prepare for containers running on Java 6
    task:
      jobs:
        - name: Jetty 5.x
          commands:
            - cd ~/.m2/semaphore-ci-binaries
            - cache restore "codehaus-cargo-cache-java-8"
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - cache restore "codehaus-cargo-cache-java-6"
            - cp ~/.m2/semaphore-ci-binaries/jdk-6u45-linux-x64.bin /tmp/cargo
            - cd /tmp/cargo
            - chmod +x jdk-6u45-linux-x64.bin
            - ./jdk-6u45-linux-x64.bin < <(echo y)
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pjetty5x -Dsurefire.rerunFailingTestsCount=2 -Dcargo.java.home.1_4=/tmp/cargo/jdk1.6.0_45
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: Jetty 6.x
    dependencies:
      - Prepare for containers running on Java 6
    task:
      jobs:
        - name: Jetty 6.x
          commands:
            - cd ~/.m2/semaphore-ci-binaries
            - cache restore "codehaus-cargo-cache-java-8"
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - cache restore "codehaus-cargo-cache-java-6"
            - cp ~/.m2/semaphore-ci-binaries/jdk-6u45-linux-x64.bin /tmp/cargo
            - cd /tmp/cargo
            - chmod +x jdk-6u45-linux-x64.bin
            - ./jdk-6u45-linux-x64.bin < <(echo y)
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pjetty6x -Dsurefire.rerunFailingTestsCount=2 -Dcargo.java.home.1_5=/tmp/cargo/jdk1.6.0_45
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: Jetty 7.x
    dependencies:
      - Prepare for containers running on Java 6
    task:
      jobs:
        - name: Jetty 7.x
          commands:
            - cd ~/.m2/semaphore-ci-binaries
            - cache restore "codehaus-cargo-cache-java-8"
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - cache restore "codehaus-cargo-cache-java-6"
            - cp ~/.m2/semaphore-ci-binaries/jdk-6u45-linux-x64.bin /tmp/cargo
            - cd /tmp/cargo
            - chmod +x jdk-6u45-linux-x64.bin
            - ./jdk-6u45-linux-x64.bin < <(echo y)
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pjetty7x -Dsurefire.rerunFailingTestsCount=2 -Dcargo.java.home.1_5=/tmp/cargo/jdk1.6.0_45
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: Jetty 8.x
    dependencies:
      - Prepare for containers running on Java 6
    task:
      jobs:
        - name: Jetty 8.x
          commands:
            - cd ~/.m2/semaphore-ci-binaries
            - cache restore "codehaus-cargo-cache-java-8"
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - cache restore "codehaus-cargo-cache-java-6"
            - cp ~/.m2/semaphore-ci-binaries/jdk-6u45-linux-x64.bin /tmp/cargo
            - cd /tmp/cargo
            - chmod +x jdk-6u45-linux-x64.bin
            - ./jdk-6u45-linux-x64.bin < <(echo y)
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pjetty8x -Dsurefire.rerunFailingTestsCount=2 -Dcargo.java.home.1_6=/tmp/cargo/jdk1.6.0_45
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: Jo 1.x
    dependencies:
      - Prepare for containers running on Java 6
    task:
      jobs:
        - name: Jo 1.x
          commands:
            - cd ~/.m2/semaphore-ci-binaries
            - cache restore "codehaus-cargo-cache-java-8"
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - cache restore "codehaus-cargo-cache-java-6"
            - cp ~/.m2/semaphore-ci-binaries/jdk-6u45-linux-x64.bin /tmp/cargo
            - cd /tmp/cargo
            - chmod +x jdk-6u45-linux-x64.bin
            - ./jdk-6u45-linux-x64.bin < <(echo y)
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pjo1x -Dsurefire.rerunFailingTestsCount=2 -Dcargo.java.home.1_4=/tmp/cargo/jdk1.6.0_45
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: JOnAS 4.x
    dependencies:
      - Prepare for containers running on Java 6
    task:
      jobs:
        - name: JOnAS 4.x
          commands:
            - cd ~/.m2/semaphore-ci-binaries
            - cache restore "codehaus-cargo-cache-java-8"
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - cache restore "codehaus-cargo-cache-java-6"
            - cp ~/.m2/semaphore-ci-binaries/jdk-6u45-linux-x64.bin /tmp/cargo
            - cd /tmp/cargo
            - chmod +x jdk-6u45-linux-x64.bin
            - ./jdk-6u45-linux-x64.bin < <(echo y)
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pjonas4x -Dsurefire.rerunFailingTestsCount=2 -Dcargo.java.home.1_4=/tmp/cargo/jdk1.6.0_45
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: JOnAS 5.x
    dependencies:
      - Prepare for containers running on Java 6
    task:
      jobs:
        - name: JOnAS 5.x
          commands:
            - cd ~/.m2/semaphore-ci-binaries
            - cache restore "codehaus-cargo-cache-java-8"
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - cache restore "codehaus-cargo-cache-java-6"
            - cp ~/.m2/semaphore-ci-binaries/jdk-6u45-linux-x64.bin /tmp/cargo
            - cd /tmp/cargo
            - chmod +x jdk-6u45-linux-x64.bin
            - ./jdk-6u45-linux-x64.bin < <(echo y)
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pjonas5x -Dsurefire.rerunFailingTestsCount=2 -Dcargo.java.home.1_6=/tmp/cargo/jdk1.6.0_45
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: Resin 3.x
    dependencies:
      - Prepare for containers running on Java 6
    task:
      jobs:
        - name: Resin 3.x
          commands:
            - cd ~/.m2/semaphore-ci-binaries
            - cache restore "codehaus-cargo-cache-java-8"
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - cache restore "codehaus-cargo-cache-java-6"
            - cp ~/.m2/semaphore-ci-binaries/jdk-6u45-linux-x64.bin /tmp/cargo
            - cd /tmp/cargo
            - chmod +x jdk-6u45-linux-x64.bin
            - ./jdk-6u45-linux-x64.bin < <(echo y)
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Presin3x -Dsurefire.rerunFailingTestsCount=2 -Dcargo.java.home.1_5=/tmp/cargo/jdk1.6.0_45
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: Resin 3.1.x
    dependencies:
      - Prepare for containers running on Java 6
    task:
      jobs:
        - name: Resin 3.1.x
          commands:
            - cd ~/.m2/semaphore-ci-binaries
            - cache restore "codehaus-cargo-cache-java-8"
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - cache restore "codehaus-cargo-cache-java-6"
            - cp ~/.m2/semaphore-ci-binaries/jdk-6u45-linux-x64.bin /tmp/cargo
            - cd /tmp/cargo
            - chmod +x jdk-6u45-linux-x64.bin
            - ./jdk-6u45-linux-x64.bin < <(echo y)
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Presin31x -Dsurefire.rerunFailingTestsCount=2 -Dcargo.java.home.1_5=/tmp/cargo/jdk1.6.0_45
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: Tomcat 4.x
    dependencies:
      - Prepare for containers running on Java 6
    task:
      jobs:
        - name: Tomcat 4.x
          commands:
            - cd ~/.m2/semaphore-ci-binaries
            - cache restore "codehaus-cargo-cache-java-8"
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - cache restore "codehaus-cargo-cache-java-6"
            - cp ~/.m2/semaphore-ci-binaries/jdk-6u45-linux-x64.bin /tmp/cargo
            - cd /tmp/cargo
            - chmod +x jdk-6u45-linux-x64.bin
            - ./jdk-6u45-linux-x64.bin < <(echo y)
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Ptomcat4x -Dsurefire.rerunFailingTestsCount=2 -Dcargo.java.home.1_4=/tmp/cargo/jdk1.6.0_45
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: Tomcat 5.x
    dependencies:
      - Prepare for containers running on Java 6
    task:
      jobs:
        - name: Tomcat 5.x
          commands:
            - cd ~/.m2/semaphore-ci-binaries
            - cache restore "codehaus-cargo-cache-java-8"
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - cache restore "codehaus-cargo-cache-java-6"
            - cp ~/.m2/semaphore-ci-binaries/jdk-6u45-linux-x64.bin /tmp/cargo
            - cd /tmp/cargo
            - chmod +x jdk-6u45-linux-x64.bin
            - ./jdk-6u45-linux-x64.bin < <(echo y)
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Ptomcat5x -Dsurefire.rerunFailingTestsCount=2 -Dcargo.java.home.1_4=/tmp/cargo/jdk1.6.0_45
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: Tomcat 6.x
    dependencies:
      - Prepare for containers running on Java 6
    task:
      jobs:
        - name: Tomcat 6.x
          commands:
            - cd ~/.m2/semaphore-ci-binaries
            - cache restore "codehaus-cargo-cache-java-8"
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - cache restore "codehaus-cargo-cache-java-6"
            - cp ~/.m2/semaphore-ci-binaries/jdk-6u45-linux-x64.bin /tmp/cargo
            - cd /tmp/cargo
            - chmod +x jdk-6u45-linux-x64.bin
            - ./jdk-6u45-linux-x64.bin < <(echo y)
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Ptomcat6x -Dsurefire.rerunFailingTestsCount=2 -Dcargo.java.home.1_5=/tmp/cargo/jdk1.6.0_45
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: Tomcat 7.x
    dependencies:
      - Prepare for containers running on Java 6
    task:
      jobs:
        - name: Tomcat 7.x
          commands:
            - cd ~/.m2/semaphore-ci-binaries
            - cache restore "codehaus-cargo-cache-java-8"
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - cache restore "codehaus-cargo-cache-java-6"
            - cp ~/.m2/semaphore-ci-binaries/jdk-6u45-linux-x64.bin /tmp/cargo
            - cd /tmp/cargo
            - chmod +x jdk-6u45-linux-x64.bin
            - ./jdk-6u45-linux-x64.bin < <(echo y)
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Ptomcat7x -Dsurefire.rerunFailingTestsCount=2 -Dcargo.java.home.1_6=/tmp/cargo/jdk1.6.0_45
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: TomEE 1.x
    dependencies:
      - Prepare for containers running on Java 6
    task:
      jobs:
        - name: TomEE 1.x
          commands:
            - cd ~/.m2/semaphore-ci-binaries
            - cache restore "codehaus-cargo-cache-java-8"
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - cache restore "codehaus-cargo-cache-java-6"
            - cp ~/.m2/semaphore-ci-binaries/jdk-6u45-linux-x64.bin /tmp/cargo
            - cd /tmp/cargo
            - chmod +x jdk-6u45-linux-x64.bin
            - ./jdk-6u45-linux-x64.bin < <(echo y)
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Ptomee1x -Dsurefire.rerunFailingTestsCount=2 -Dcargo.java.home.1_6=/tmp/cargo/jdk1.6.0_45
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: Build on Java 17
    dependencies:
      - Perform initial build and aggregate Javadoc on Java 11
    task:
      jobs:
        - name: Build on Java 17
          commands:
            - sem-version java 17
            - cd $ORIGINAL_PWD
            - mvn -version
            - 'cp ~/.m2/repository/org/apache/tomcat/tomcat/9.*/tomcat-*.zip $ORIGINAL_PWD/core/samples/java/installs ; RM=0'
            - mvn clean install -T 1C || mvn clean install -e
            - rm -f $ORIGINAL_PWD/core/samples/java/installs/tomcat-9.*.zip
            - cd ~/
            - cache delete "codehaus-cargo-cache-initial-build"
            - cache store "codehaus-cargo-cache-initial-build" .m2 --cleanup-by ACCESS_TIME
  - name: Jetty 12.x
    dependencies:
      - Build on Java 17
    task:
      jobs:
        - name: Jetty 12.x
          commands:
            - sem-version java 17
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pjetty12x -Dsurefire.rerunFailingTestsCount=2
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: TomEE 10.x
    dependencies:
      - Build on Java 17
    task:
      jobs:
        - name: TomEE 10.x
          commands:
            - sem-version java 17
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Ptomee10x -Dsurefire.rerunFailingTestsCount=2
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: WildFly 35.x
    dependencies:
      - Build on Java 17
    task:
      jobs:
        - name: WildFly 35.x
          commands:
            - sem-version java 17
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pwildfly35x -Dsurefire.rerunFailingTestsCount=2
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: Build on Java 21
    dependencies:
      - Perform initial build and aggregate Javadoc on Java 11
    task:
      jobs:
        - name: Build on Java 21
          commands:
            - cd ~/.m2/semaphore-ci-binaries
            - cache restore "codehaus-cargo-cache-java-21"
            - 'find ~/.m2/semaphore-ci-binaries -type f -name openjdk-21_linux-x64_bin.tar.gz -size -150M -print -exec rm {} +'
            - 'wget -N --continue https://download.java.net/java/GA/jdk21/fd2272bbf8e04c3dbaee13770090416c/35/GPL/openjdk-21_linux-x64_bin.tar.gz ; RM=0'
            - tar -xvzf openjdk-21_linux-x64_bin.tar.gz -C /tmp/cargo
            - cache delete "codehaus-cargo-cache-java-21"
            - cache store "codehaus-cargo-cache-java-21" openjdk-21_linux-x64_bin.tar.gz --cleanup-by ACCESS_TIME
            - export JAVA_HOME=/tmp/cargo/jdk-21
            - cd $ORIGINAL_PWD
            - mvn -version
            - 'cp ~/.m2/repository/org/apache/tomcat/tomcat/9.*/tomcat-*.zip $ORIGINAL_PWD/core/samples/java/installs ; RM=0'
            - mvn clean install -T 1C || mvn clean install -e
            - rm -f $ORIGINAL_PWD/core/samples/java/installs/tomcat-9.*.zip
            - cd ~/
            - cache delete "codehaus-cargo-cache-initial-build"
            - cache store "codehaus-cargo-cache-initial-build" .m2 --cleanup-by ACCESS_TIME
  - name: GlassFish 8.x
    dependencies:
      - Build on Java 21
    task:
      jobs:
        - name: GlassFish 8.x
          commands:
            - cd ~/.m2/semaphore-ci-binaries
            - cache restore "codehaus-cargo-cache-java-21"
            - tar -xvzf openjdk-21_linux-x64_bin.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk-21
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Pglassfish8x -Dsurefire.rerunFailingTestsCount=2
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: Tomcat 11.x
    dependencies:
      - Build on Java 21
    task:
      jobs:
        - name: Tomcat 11.x
          commands:
            - cd ~/.m2/semaphore-ci-binaries
            - cache restore "codehaus-cargo-cache-java-21"
            - tar -xvzf openjdk-21_linux-x64_bin.tar.gz -C /tmp/cargo
            - export JAVA_HOME=/tmp/cargo/jdk-21
            - mvn -version
            - cd $ORIGINAL_PWD/core/samples/java
            - mvn clean install -e -Ptomcat11x -Dsurefire.rerunFailingTestsCount=2
            - find . -iname "TEST-*.xml" -type f | xargs test-results publish
  - name: Deploy using Java 11
    dependencies:
      - Geronimo 1.x
      - Geronimo 3.x
      - GlassFish 3.x
      - GlassFish 4.x
      - GlassFish 5.x
      - GlassFish 6.x
      - GlassFish 7.x
      - GlassFish 8.x
      - JBoss 3.x
      - JBoss 4.2.x
      - JBoss 4.x
      - JBoss 5.1.x
      - JBoss 5.x
      - JBoss 6.1.x
      - JBoss 6.x
      - JBoss 7.1.x
      - JBoss 7.x
      - Jetty 5.x
      - Jetty 6.x
      - Jetty 7.x
      - Jetty 8.x
      - Jetty 9.x
      - Jetty 10.x
      - Jetty 11.x
      - Jetty 12.x
      - Jo 1.x
      - JOnAS 4.x
      - JOnAS 5.x
      - Payara
      - Resin 3.1.x
      - Resin 3.x
      - Resin 4.x
      - Tomcat 4.x
      - Tomcat 5.x
      - Tomcat 6.x
      - Tomcat 7.x
      - Tomcat 8.x
      - Tomcat 9.x
      - Tomcat 10.x
      - Tomcat 11.x
      - TomEE 1.x
      - TomEE 7.x
      - TomEE 8.x
      - TomEE 9.x
      - TomEE 10.x
      - WebSphere Liberty
      - WildFly 8.x
      - WildFly 9.x
      - WildFly 10.x
      - WildFly 11.x
      - WildFly 12.x
      - WildFly 13.x
      - WildFly 14.x
      - WildFly 15.x
      - WildFly 16.x
      - WildFly 17.x
      - WildFly 18.x
      - WildFly 19.x
      - WildFly 20.x
      - WildFly 21.x
      - WildFly 22.x
      - WildFly 23.x
      - WildFly 24.x
      - WildFly 25.x
      - WildFly 26.x
      - WildFly 27.x
      - WildFly 28.x
      - WildFly 29.x
      - WildFly 30.x
      - WildFly 31.x
      - WildFly 32.x
      - WildFly 33.x
      - WildFly 34.x
      - WildFly 35.x
      - WildFly Swarm
    task:
      jobs:
        - name: Deploy using Java 11
          commands:
            - sem-version java 11
            - mvn clean deploy || mvn clean deploy -e
            - cd ~/
            - 'wget https://raw.githubusercontent.com/alitokmen/maven-repository-cleaner/main/maven-repository-cleaner.sh'
            - chmod +x maven-repository-cleaner.sh
            - ./maven-repository-cleaner.sh
            - cache delete "codehaus-cargo-cache-initial-build"
            - cache store "codehaus-cargo-cache-initial-build" .m2 --cleanup-by ACCESS_TIME
      secrets:
        - name: Snapshot deployment configuration
after_pipeline:
  task:
    jobs:
      - name: Publish test report
        commands:
          - test-results gen-pipeline-report
