version: v1.0
name: Java
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu2004
execution_time_limit:
  hours: 2
blocks:
  - name: Maven
    task:
      jobs:
        - name: 'Build on various JDKs and deploy'
          commands:
            - echo 'echo "127.0.0.1 codehaus-cargo-ci" >> /etc/hosts' | sudo bash
            - sudo hostname codehaus-cargo-ci
            - checkout
            - export ORIGINAL_PWD=$PWD
            - mkdir -p /tmp/cargo
            - mkdir -p ~/.m2
            - mkdir -p ~/.m2/cargo-installs
            - mkdir -p ~/.m2/semaphore-ci-binaries
            - 'find ~/.m2/semaphore-ci-binaries -type f -name apache-maven-3.5.4-bin.tar.gz -size -5M -print -exec rm {} +'
            - 'find ~/.m2/semaphore-ci-binaries -type f -name jdk-8u202-linux-i586.tar.gz -size -150M -print -exec rm {} +'
            - ls -al ~/.m2/cargo-installs
            - ln -s ~/.m2/cargo-installs $ORIGINAL_PWD/core/samples/java/installs
            - ls -al ~/.m2/semaphore-ci-binaries
            - cd ~/.m2/semaphore-ci-binaries
            - 'wget -N --continue https://archive.apache.org/dist/maven/maven-3/3.5.4/binaries/apache-maven-3.5.4-bin.tar.gz ; RM=0'
            - tar -xvzf apache-maven-3.5.4-bin.tar.gz -C /tmp/cargo
            - 'wget -N --continue https://repo.huaweicloud.com/java/jdk/8u202-b08/jdk-8u202-linux-i586.tar.gz ; RM=0'
            - tar -xvzf jdk-8u202-linux-i586.tar.gz -C /tmp/cargo
            - cd $ORIGINAL_PWD
            - export MAVEN_HOME=/tmp/cargo/apache-maven-3.5.4
            - export MAVEN_OPTS="-Xmx768m"
            - 'export PATH=$MAVEN_HOME/bin:$PATH'

            - sem-version java 11
            - mvn -version
            - (mvn clean install -e && echo "Build on Java 11 OK on first attempt" > $ORIGINAL_PWD/core/samples/java/containers.log) || (echo "First build on Java 11 failed, retrying" > $ORIGINAL_PWD/core/samples/java/containers.log ; mvn clean install -e)
            - mvn clean
            - export JAVA_HOME=/tmp/cargo/jdk1.8.0_202
            - mvn -version
            - '(mvn clean install -e && echo "Build on Java 8 OK on first attempt" >> $ORIGINAL_PWD/core/samples/java/containers.log) || (echo "First build on Java 8 failed, retrying" >> $ORIGINAL_PWD/core/samples/java/containers.log && mvn clean install -e)'
            - unset JAVA_HOME
            - sem-version java 17
            - mvn -version
            - '(mvn clean install -e && echo "Build on Java 17 OK on first attempt" >> $ORIGINAL_PWD/core/samples/java/containers.log) || (echo "First build on Java 17 failed, retrying" >> $ORIGINAL_PWD/core/samples/java/containers.log && mvn clean install -e)'
            - mvn clean
            - sem-version java 11
            - mvn -version
            - '(mvn clean deploy -e && echo "Deployment OK on first attempt" >> $ORIGINAL_PWD/core/samples/java/containers.log) || (echo "First deployment failed, retrying" >> $ORIGINAL_PWD/core/samples/java/containers.log && mvn clean deploy -e)'
            - mvn clean

            - cat $ORIGINAL_PWD/core/samples/java/containers.log
            - rm -rf ~/.m2/repository/org/codehaus/cargo
            - rm -rf ~/.cargo
            - ls -al ~/.m2/cargo-installs
            - ls -al ~/.m2/semaphore-ci-binaries
