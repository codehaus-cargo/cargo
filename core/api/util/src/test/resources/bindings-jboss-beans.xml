<?xml version="1.0" encoding="UTF-8"?>

<!--
  Codehaus CARGO, copyright 2004-2011 Vincent Massol, 2012-2021 Ali Tokmen.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  -->

<deployment xmlns="urn:jboss:bean-deployer:2.0">

   <!-- The actual SBM from which services obtain binding information -->
   <bean name="ServiceBindingManager" class="org.jboss.services.binding.ServiceBindingManager">

      <annotation>@org.jboss.aop.microcontainer.aspects.jmx.JMX(name="jboss.system:service=ServiceBindingManager", exposedInterface=org.jboss.services.binding.ServiceBindingManagerMBean.class, registerDirectly=true)</annotation>

      <!-- Here we use the ServiceBindingManagementObject as a factory to create the SBM -->
      <constructor factoryMethod="getServiceBindingManager">
         <factory bean="ServiceBindingManagementObject"/>
      </constructor>

   </bean>

   <!-- Provides management tools with a ProfileService ManagementView
        interface to the SBM and its components -->
   <bean name="ServiceBindingManagementObject"
         class="org.jboss.services.binding.managed.ServiceBindingManagementObject">

      <constructor>
         <!-- The name of the set of bindings to use for this server -->
         <parameter>${jboss.service.binding.set:ports-default}</parameter>

         <!--  The binding sets -->
         <parameter>
            <set>
               <inject bean="PortsDefaultBindings"/>
               <inject bean="Ports01Bindings"/>
               <inject bean="Ports02Bindings"/>
               <inject bean="Ports03Bindings"/>
            </set>
         </parameter>

         <!-- Base binding metadata that is used to create bindings for each set -->
         <parameter><inject bean="StandardBindings"/></parameter>

      </constructor>
   </bean>


   <!-- The ports-default bindings are obtained by taking the base bindings and adding 0 to each port value  -->
   <bean name="PortsDefaultBindings"  class="org.jboss.services.binding.impl.ServiceBindingSet">
      <constructor>
         <!--  The name of the set -->
         <parameter>ports-default</parameter>
         <!-- Default host name -->
         <parameter>${jboss.bind.address}</parameter>
         <!-- The port offset -->
         <parameter>0</parameter>
         <!-- Set of bindings to which the "offset by X" approach can't be applied -->
         <parameter><null/></parameter>
      </constructor>
   </bean>

   <!-- The ports-01 bindings are obtained by taking the base bindings and adding 100 to each port value -->
   <bean name="Ports01Bindings" class="org.jboss.services.binding.impl.ServiceBindingSet">
      <constructor>
         <!--  The name of the set -->
         <parameter>ports-01</parameter>
         <!-- Default host name -->
         <parameter>${jboss.bind.address}</parameter>
         <!-- The port offset -->
         <parameter>100</parameter>
         <!-- Set of bindings to which the "offset by X" approach can't be applied -->
         <parameter><null/></parameter>
      </constructor>
   </bean>

   <!-- The ports-02 bindings are obtained by taking ports-default and adding 200 to each port value -->
   <bean name="Ports02Bindings" class="org.jboss.services.binding.impl.ServiceBindingSet">
      <constructor>
         <!--  The name of the set -->
         <parameter>ports-02</parameter>
         <!-- Default host name -->
         <parameter>${jboss.bind.address}</parameter>
         <!-- The port offset -->
         <parameter>200</parameter>
         <!-- Set of bindings to which the "offset by X" approach can't be applied -->
         <parameter><null/></parameter>
      </constructor>
   </bean>

   <!-- The ports-03 bindings are obtained by taking ports-default and adding 300 to each port value -->
   <bean name="Ports03Bindings" class="org.jboss.services.binding.impl.ServiceBindingSet">
      <constructor>
         <!--  The name of the set -->
         <parameter>ports-03</parameter>
         <!-- Default host name -->
         <parameter>${jboss.bind.address}</parameter>
         <!-- The port offset -->
         <parameter>300</parameter>
         <!-- Set of bindings to which the "offset by X" approach can't be applied -->
         <parameter><null/></parameter>
      </constructor>
   </bean>

   <!-- Base binding metadata that ServiceBindingStore uses to create bindings for each set -->
   <bean name="StandardBindings" class="java.util.HashSet">
      <constructor>
         <parameter class="java.util.Collection">
            <set elementClass="org.jboss.services.binding.ServiceBindingMetadata">
            <!-- ********************* conf/jboss-service.xml ****************** -->

            <!-- Naming Service -->
            <bean class="org.jboss.services.binding.ServiceBindingMetadata">
               <property name="serviceName">jboss:service=Naming</property>
               <property name="bindingName">Port</property>
               <property name="port">@cargo.rmi.port@</property>
               <property name="description">The listening socket for the Naming service</property>
            </bean>

            <bean class="org.jboss.services.binding.ServiceBindingMetadata">
               <property name="serviceName">jboss:service=Naming</property>
               <property name="bindingName">RmiPort</property>
               <property name="port">@cargo.jboss.naming.port@</property>
               <property name="description">Socket Naming service uses to receive RMI requests from client proxies</property>
            </bean>

            <!-- Remote classloading service -->
            <bean class="org.jboss.services.binding.ServiceBindingMetadata">
               <property name="serviceName">jboss:service=WebService</property>
               <property name="port">@cargo.jboss.classloading.webservice.port@</property>
               <property name="description">Socket for dynamic class and resource loading</property>
            </bean>

            <!-- Remoting 2 Connector -->
            <bean class="org.jboss.services.binding.ServiceBindingMetadata">
               <property name="serviceName">UnifiedInvokerConnector</property>
               <property name="port">@cargo.jboss.remoting.transport.port@</property>
               <property name="description">Socket for JBoss Remoting Connector used by UnifiedInvoker</property>
            </bean>

            <!-- Used to create a multihome Remoting server.   See -->
            <!-- deploy/remoting-jboss-beans.xml for more details. -->
            <!--bean class="org.jboss.services.binding.ServiceBindingMetadata">
               <property name="serviceName">UnifiedInvokerConnector:bindingHome1</property>
               <parameter>192.168.2.2</property>
               <property name="port">7777</property>
               <property name="description">Socket for JBoss Remoting Connector used by UnifiedInvoker on a multihome server</property>
            </bean-->

            <!-- Used to create a multihome Remoting server.   See -->
            <!-- deploy/remoting-jboss-beans.xml for more details. -->
            <!--bean class="org.jboss.services.binding.ServiceBindingMetadata">
               <property name="serviceName">UnifiedInvokerConnector:bindingHome2</property>
               <parameter>10.11.12.238</property>
               <property name="port">8888</property>
               <property name="description">Socket for JBoss Remoting Connector used by UnifiedInvoker on a multihome server</property>
            </bean-->

            <!-- ********************* deploy/legacy-invokers-service.xml ****************** -->

            <!-- RMI/JRMP invoker -->
            <bean class="org.jboss.services.binding.ServiceBindingMetadata">
               <property name="serviceName">jboss:service=invoker,type=jrmp</property>
               <property name="port">@cargo.jboss.jrmp.invoker.port@</property>
               <property name="description">Socket for the legacy RMI/JRMP invoker</property>
            </bean>

            <!-- ********************* deploy/cluster/hajndi-service.xml ****************** -->

            <bean class="org.jboss.services.binding.ServiceBindingMetadata">
               <property name="serviceName">jboss:service=HAJNDI</property>
               <property name="bindingName">Port</property>
               <property name="port">1100</property>
               <property name="description">The listening socket for the HA-JNDI service</property>
            </bean>

            <bean class="org.jboss.services.binding.ServiceBindingMetadata">
               <property name="serviceName">jboss:service=HAJNDI</property>
               <property name="bindingName">RmiPort</property>
               <property name="port">1101</property>
               <property name="description">Socket HA-JNDI service uses to receive RMI requests from client proxies</property>
            </bean>

            <bean class="org.jboss.services.binding.ServiceBindingMetadata">
               <property name="serviceName">jboss:service=HAJNDI</property>
               <property name="bindingName">AutoDiscovery</property>
               <property name="hostName">${jboss.partition.udpGroup:230.0.0.4}</property>
               <property name="port">1102</property>
               <property name="description">Multicast socket on which HA-JNDI listens for auto-discovery requests from clients</property>
               <!-- This address should not be changed between different
                    binding sets; all nodes need to listen on the same
                    multicast address -->
               <property name="fixedHostName">true</property>
               <!-- This port should not be changed between different
                    binding sets; all nodes need to listen on the same port -->
               <property name="fixedPort">true</property>
            </bean>

            <bean class="org.jboss.services.binding.ServiceBindingMetadata">
               <property name="serviceName">jboss:service=HAJNDI</property>
               <property name="bindingName">AutoDiscoveryInterface</property>
               <property name="hostName">${jboss.bind.address}</property>
               <property name="description">Interface for multicast socket on which HA-JNDI listens for auto-discovery requests from clients</property>
            </bean>

            <!-- ********************* deploy/cluster/ha-legacy-service.xml ****************** -->

            <!-- HA RMI/JRMP invoker -->
            <bean class="org.jboss.services.binding.ServiceBindingMetadata">
               <property name="serviceName">jboss:service=invoker,type=jrmpha</property>
               <property name="port">4447</property>
               <property name="description">Socket for high availability version of the legacy RMI/JRMP invoker</property>
            </bean>

            <!-- HA Pooled invoker -->
            <bean class="org.jboss.services.binding.ServiceBindingMetadata">
               <property name="serviceName">jboss:service=invoker,type=pooledha</property>
               <property name="port">4448</property>
               <property name="description">Socket for high availability version of the legacy Pooled invoker</property>
            </bean>

            <!-- ********************* deploy/iiop-jboss-beans.xml ****************** -->

            <bean class="org.jboss.services.binding.ServiceBindingMetadata">
               <property name="serviceName">jboss:service=CorbaORB</property>
               <property name="port">3528</property>
               <property name="description">IIOP socket for the Corba ORB</property>
            </bean>

            <!-- ********************* deploy/snmp-adaptor.sar **************** -->

            <!-- Trap receiver that acts as an SNMP Manager -->
            <bean class="org.jboss.services.binding.ServiceBindingMetadata">
               <property name="serviceName">jboss.jmx:name=SnmpAgent,service=trapd,type=logger</property>
               <property name="port">1162</property>
               <property name="description">Socket for the SNMP trap receiver</property>
            </bean>

            <!-- The SNMP adaptor MBean -->
            <bean class="org.jboss.services.binding.ServiceBindingMetadata">
               <property name="serviceName">jboss.jmx:name=SnmpAgent,service=snmp,type=adaptor</property>
               <property name="port">1161</property>
               <property name="description">Socket for the SNMP adaptor MBean</property>
            </bean>

            <!-- ********************* deploy/jmx-jboss-beans.xml **************** -->

            <bean class="org.jboss.services.binding.ServiceBindingMetadata">
               <property name="serviceName">jboss.remoting:service=JMXConnectorServer,protocol=rmi</property>
               <property name="port">@cargo.jboss.jrmp.port@</property>
               <property name="description">RMI/JRMP socket for connecting to the JMX MBeanServer</property>
            </bean>

            <bean class="org.jboss.services.binding.ServiceBindingMetadata">
               <property name="serviceName">jboss.remoting:service=JMXConnectorServer,protocol=rmiServer</property>
               <property name="port">1091</property>
               <property name="description">RMI server socket</property>
            </bean>


            <!-- ********************* deploy/ejb3-connectors-service.xml **************** -->

            <!-- EJB3 wants to have the service create its own ServiceBinding object
                 dynamically.  See the value-factory usage in deploy/ejb3-connectors-service.xml -->


            <!-- ********************* deploy/jbossweb.sar **************** -->
            <!-- ********************* deploy/httpha-invoker.sar **************** -->

            <!--
                JBoss Web server.xml configuration.

                Same binding config can be used by the following services, or really
                anything else that needs to point to the JBoss Web HTTP connector

                jboss:service=invoker,type=http
                jboss:service=invoker,type=http,target=Naming
                jboss:service=invoker,type=http,target=Naming,readonly=true
                jboss:service=invoker,type=httpHA
                jboss:service=invoker,type=http,target=HAJNDI
                jboss.ws:service=ServiceEndpointManager
            -->
            <bean class="org.jboss.services.binding.ServiceBindingMetadata">
               <property name="serviceName">jboss.web:service=WebServer</property>
            </bean>

            <bean class="org.jboss.services.binding.ServiceBindingMetadata">
               <property name="serviceName">jboss.web:service=WebServer</property>
               <property name="bindingName">HttpConnector</property>
               <property name="port">@cargo.servlet.port@</property>
               <property name="description">JBoss Web HTTP connector socket; also drives the values for the HTTPS and AJP sockets</property>
            </bean>

            <!-- For services like those listed above that need to know the
                 port of the HTTPS connector -->
            <bean class="org.jboss.services.binding.ServiceBindingMetadata">
               <property name="serviceName">jboss.web:service=WebServer</property>
               <property name="bindingName">HttpsConnector</property>
               <property name="port">8443</property>
               <property name="description">JBoss Web HTTPS connector socket</property>
            </bean>

            <!-- For services like those listed above that need to know the
                 port of the AJP connector -->
            <bean class="org.jboss.services.binding.ServiceBindingMetadata">
               <property name="serviceName">jboss.web:service=WebServer</property>
               <property name="bindingName">AjpConnector</property>
               <property name="port">8009</property>
               <property name="description">JBoss Web AJP connector socket</property>
            </bean>

            <!-- ********************* deploy/messaging/remoting-bisocket-service.xml ********************** -->

            <!-- Standard JBM bisocket connector -->
            <bean class="org.jboss.services.binding.ServiceBindingMetadata">
               <property name="serviceName">jboss.messaging:service=Connector,transport=bisocket</property>
               <property name="port">4457</property>
               <property name="description">Socket for JBoss Messaging 1.x</property>
            </bean>

            <!-- ********************* HornetQ          **************** -->

            <bean class="org.jboss.services.binding.ServiceBindingMetadata">
                <property name="serviceName">HornetQ</property>
                <property name="bindingName">netty-port</property>
                <property name="port">5445</property>
                <property name="description">Socket for HornetQ</property>
            </bean>

            <bean class="org.jboss.services.binding.ServiceBindingMetadata">
                <property name="serviceName">HornetQ</property>
                <property name="bindingName">netty-ssl-port</property>
                <property name="port">5446</property>
                <property name="description">SSL socket for HornetQ</property>
            </bean>

            <bean class="org.jboss.services.binding.ServiceBindingMetadata">
                <property name="serviceName">HornetQ</property>
                <property name="bindingName">netty-batch-port</property>
                <property name="port">5455</property>
                <property name="description">Socket for throughput connection factory</property>
            </bean>

            <bean class="org.jboss.services.binding.ServiceBindingMetadata">
                <property name="serviceName">HornetQ</property>
                <property name="bindingName">netty-ssl-port</property>
                <property name="port">5446</property>
                <property name="description">SSL socket for HornetQ</property>
            </bean>

            <!-- ********************* deploy/transaction-jboss-beans.xml ********************** -->

            <!-- JBossTS Recovery Manager -->
            <bean class="org.jboss.services.binding.ServiceBindingMetadata">
                <property name="serviceName">TransactionManager</property>
                <property name="bindingName">recoveryManager</property>
                <property name="port">@cargo.jboss.transaction.recoveryManager.port@</property>
                <property name="description">Socket for JBossTS Recovery Manager</property>
            </bean>

            <!-- JBossTS Transaction Status Manager -->
            <bean class="org.jboss.services.binding.ServiceBindingMetadata">
                <property name="serviceName">TransactionManager</property>
                <property name="bindingName">transactionStatusManager</property>
                <property name="port">@cargo.jboss.transaction.statusManager.port@</property>
                <property name="description">Socket for JBossTS Transaction Status Manager</property>
            </bean>

            <!-- JBossTS SocketProcessId.  The address part is ignored,
                it will always use localhost/127.0.0.1. -->
            <bean class="org.jboss.services.binding.ServiceBindingMetadata">
                <property name="serviceName">TransactionManager</property>
                <property name="bindingName">socketProcessId</property>
                <property name="port">4714</property>
                <property name="description">Socket used to provide unique process id for JBossTS. The address configuration is ignored; will always use localhost/127.0.0.1</property>
            </bean>

            <!-- ********************* deploy/mod_cluster.sar/META-INF/mod_cluster-jboss-beans.xml **************** -->

            <bean class="org.jboss.services.binding.ServiceBindingMetadata">
                <property name="serviceName">ModClusterService</property>
                <property name="bindingName">AdvertiseGroup</property>
                <property name="hostName">${jboss.mod_cluster.advertise.address,jboss.partition.udpGroup:224.0.1.105}</property>
                <property name="port">${jboss.mod_cluster.advertise.port:23364}</property>
                <property name="description">Multicast address/port on which to listen for mod_cluster proxy advertisements</property>
                <!-- This address should not be changed between different
                     binding sets; all nodes need to listen on the same
                     multicast address -->
                <property name="fixedHostName">true</property>
                <!-- This port should not be changed between different
                     binding sets; all nodes need to listen on the same port -->
                <property name="fixedPort">true</property>
            </bean>

            <bean class="org.jboss.services.binding.ServiceBindingMetadata">
               <property name="serviceName">ModClusterService</property>
               <property name="bindingName">AdvertiseGroupInterface</property>
               <property name="hostName">${jboss.bind.address}</property>
               <property name="description">Interface for multicast socket on which to listen for mod_cluster proxy advertisements</property>
            </bean>

            <!-- ********************* deploy/hsqldb-ds.xml **************** -->

            <!-- Commented out as tcp/ip access to Hypersonic is not enabled by default -->
            <!--
            <bean class="org.jboss.services.binding.ServiceBindingMetadata">
               <property name="serviceName">jboss:service=Hypersonic</property>
               <property name="port">1701</property>
               <property name="description">TCP/IP socket for remote connection to Hypersonic database</property>
            </bean>
            -->

            <!-- *************** deploy/remoting3-jboss-beans.xml ********** -->

            <bean class="org.jboss.services.binding.ServiceBindingMetadata">
               <property name="serviceName">Remoting</property>
               <property name="bindingName">tcp</property>
               <property name="port">5500</property>
               <property name="hostName">${jboss.bind.address}</property>
               <property name="description">The port used for clear/non-SSL Remoting connections</property>
            </bean>

            <bean class="org.jboss.services.binding.ServiceBindingMetadata">
               <property name="serviceName">Remoting</property>
               <property name="bindingName">tcp+ssl</property>
               <property name="port">5501</property>
               <property name="hostName">${jboss.bind.address}</property>
               <property name="description">The port used for SSL (encrypted) Remoting connections</property>
            </bean>

            <!-- ******** deploy/cluster/jgroups-channelfactory.sar ******** -->

            <bean class="org.jboss.services.binding.ServiceBindingMetadata">
               <property name="serviceName">JGroups</property>
               <property name="bindingName">udp-bind_port</property>
               <property name="port">55200</property>
               <property name="hostName">${jboss.jgroups.bind.address,jboss.bind.address}</property>
               <property name="description">The port used for the JGroups 'udp' stack</property>
            </bean>

            <bean class="org.jboss.services.binding.ServiceBindingMetadata">
               <property name="serviceName">JGroups</property>
               <property name="bindingName">udp-mcast</property>
               <property name="hostName">${jboss.partition.udpGroup:230.0.0.4}</property>
               <property name="port">45688</property>
               <property name="description">Multicast socket on which JGroups 'udp' stack communicates</property>
               <!-- This address should not be changed between different
                    binding sets; all nodes need to listen on the same
                    multicast address -->
               <property name="fixedHostName">true</property>
               <!-- This port should not be changed between different
                    binding sets; all nodes need to listen on the same port -->
               <property name="fixedPort">true</property>
            </bean>

            <bean class="org.jboss.services.binding.ServiceBindingMetadata">
               <property name="serviceName">JGroups</property>
               <property name="bindingName">udp-fd_sock</property>
               <property name="port">54200</property>
               <property name="hostName">${jboss.jgroups.bind.address,jboss.bind.address}</property>
               <property name="description">The port used by the FD_SOCK protocol in the JGroups 'udp' stack</property>
            </bean>

            <bean class="org.jboss.services.binding.ServiceBindingMetadata">
               <property name="serviceName">JGroups</property>
               <property name="bindingName">tcp-bind_port</property>
               <property name="port">7600</property>
               <property name="hostName">${jboss.jgroups.bind.address,jboss.bind.address}</property>
               <property name="description">The port used for the JGroups 'tcp' stack</property>
            </bean>

            <bean class="org.jboss.services.binding.ServiceBindingMetadata">
               <property name="serviceName">JGroups</property>
               <property name="bindingName">tcp-mping</property>
               <property name="hostName">${jboss.partition.udpGroup:230.0.0.4}</property>
               <property name="port">45700</property>
               <property name="description">Multicast socket on which JGroups 'tcp' stack performs discovery</property>
               <!-- This address should not be changed between different
                    binding sets; all nodes need to listen on the same
                    multicast address -->
               <property name="fixedHostName">true</property>
               <!-- This port should not be changed between different
                    binding sets; all nodes need to listen on the same port -->
               <property name="fixedPort">true</property>
            </bean>

            <bean class="org.jboss.services.binding.ServiceBindingMetadata">
               <property name="serviceName">JGroups</property>
               <property name="bindingName">tcp-fd_sock</property>
               <property name="port">57600</property>
               <property name="hostName">${jboss.jgroups.bind.address,jboss.bind.address}</property>
               <property name="description">The port used by the FD_SOCK protocol in the JGroups 'udp' stack</property>
            </bean>

            <bean class="org.jboss.services.binding.ServiceBindingMetadata">
               <property name="serviceName">JGroups</property>
               <property name="bindingName">diagnostics</property>
               <property name="hostName">224.0.75.75</property>
               <property name="port">7500</property>
               <property name="description">Multicast socket on which JGroups listens for diagnostic requests from its Probe utility</property>
               <!-- This address should not be changed between different
                    binding sets; all nodes need to listen on the same
                    multicast address -->
               <property name="fixedHostName">true</property>
               <!-- This port should not be changed between different
                    binding sets; all nodes need to listen on the same port -->
               <property name="fixedPort">true</property>
            </bean>
<!--
            <bean class="org.jboss.services.binding.ServiceBindingMetadata">
               <property name="serviceName">JGroups</property>
               <property name="bindingName">udp_async-bind_port</property>
               <property name="port">55225</property>
               <property name="hostName">${jboss.jgroups.bind.address,jboss.bind.address}</property>
               <property name="description">The port used for the JGroups 'udp_async' stack</property>
            </bean>

            <bean class="org.jboss.services.binding.ServiceBindingMetadata">
               <property name="serviceName">JGroups</property>
               <property name="bindingName">udp_async-fd_sock</property>
               <property name="port">54225</property>
               <property name="hostName">${jboss.jgroups.bind.address,jboss.bind.address}</property>
               <property name="description">The port used by the FD_SOCK protocol in the JGroups 'udp-async' stack</property>
            </bean>

            <bean class="org.jboss.services.binding.ServiceBindingMetadata">
               <property name="serviceName">JGroups</property>
               <property name="bindingName">udp_sync-bind_port</property>
               <property name="port">55250</property>
               <property name="hostName">${jboss.jgroups.bind.address,jboss.bind.address}</property>
               <property name="description">The port used for the JGroups 'udp_sync' stack</property>
            </bean>

            <bean class="org.jboss.services.binding.ServiceBindingMetadata">
               <property name="serviceName">JGroups</property>
               <property name="bindingName">udp_sync-fd_sock</property>
               <property name="port">54250</property>
               <property name="hostName">${jboss.jgroups.bind.address,jboss.bind.address}</property>
               <property name="description">The port used by the FD_SOCK protocol in the JGroups 'udp-sync' stack</property>
            </bean>

            <bean class="org.jboss.services.binding.ServiceBindingMetadata">
               <property name="serviceName">JGroups</property>
               <property name="bindingName">tcp_sync-bind_port</property>
               <property name="port">7650</property>
               <property name="hostName">${jboss.jgroups.bind.address,jboss.bind.address}</property>
               <property name="description">The port used for the JGroups 'tcp_sync' stack</property>
            </bean>

            <bean class="org.jboss.services.binding.ServiceBindingMetadata">
               <property name="serviceName">JGroups</property>
               <property name="bindingName">tcp_sync-fd_sock</property>
               <property name="port">57650</property>
               <property name="hostName">${jboss.jgroups.bind.address,jboss.bind.address}</property>
               <property name="description">The port used by the FD_SOCK protocol in the JGroups 'tcp-sync' stack</property>
            </bean>

            <bean class="org.jboss.services.binding.ServiceBindingMetadata">
               <property name="serviceName">JGroups</property>
               <property name="bindingName">udp_async-mcast</property>
               <property name="hostName">${jboss.partition.udpGroup:230.0.0.4}</property>
               <property name="port">45689</property>
               <property name="description">Multicast socket on which JGroups 'udp-async' stack communicates</property>
               <property name="fixedHostName">true</property>
               <property name="fixedPort">true</property>
            </bean>

            <bean class="org.jboss.services.binding.ServiceBindingMetadata">
               <property name="serviceName">JGroups</property>
               <property name="bindingName">udp_sync-mcast</property>
               <property name="hostName">${jboss.partition.udpGroup:230.0.0.4}</property>
               <property name="port">45699</property>
               <property name="description">Multicast socket on which JGroups 'udp-sync' stack communicates</property>
               <property name="fixedHostName">true</property>
               <property name="fixedPort">true</property>
            </bean>

            <bean class="org.jboss.services.binding.ServiceBindingMetadata">
               <property name="serviceName">JGroups</property>
               <property name="bindingName">tcp_sync-mping</property>
               <property name="hostName">${jboss.partition.udpGroup:230.0.0.4}</property>
               <property name="port">45701</property>
               <property name="description">Multicast socket on which JGroups 'tcp-sync' stack performs discovery</property>
               <property name="fixedHostName">true</property>
               <property name="fixedPort">true</property>
            </bean>
-->
         </set>
         </parameter>
      </constructor>
   </bean>

   <!-- Conversion of selected bindings into system properties -->
   <bean name="SystemPropertyBinder" class="org.jboss.services.binding.SystemPropertyBinder">

      <constructor>
         <parameter>
            <set>
               <!-- JBM's remoting connector -->
               <bean class="org.jboss.services.binding.SystemPropertyBinding">
                  <constructor>
                     <parameter>jboss.messaging.connector.bisocket.port</parameter>
                     <parameter class="int">
                        <value-factory bean="ServiceBindingManager" method="getIntBinding"
                                       parameter="jboss.messaging:service=Connector,transport=bisocket"/>
                     </parameter>
                  </constructor>
               </bean>
               <!-- HornetQ netty connector -->
               <bean class="org.jboss.services.binding.SystemPropertyBinding">
                  <constructor>
                     <parameter>hornetq.remoting.netty.port</parameter>
                     <parameter class="int">
                        <value-factory bean="ServiceBindingManager" method="getIntBinding">
                             <parameter>HornetQ</parameter>
                             <parameter>netty-port</parameter>
                        </value-factory>
                     </parameter>
                  </constructor>
               </bean>
              <!-- HornetQ netty throughput connector -->
               <bean class="org.jboss.services.binding.SystemPropertyBinding">
                  <constructor>
                     <parameter>hornetq.remoting.netty.batch.port</parameter>
                     <parameter class="int">
                        <value-factory bean="ServiceBindingManager" method="getIntBinding">
                             <parameter>HornetQ</parameter>
                             <parameter>netty-batch-port</parameter>
                        </value-factory>
                     </parameter>
                  </constructor>
               </bean>
               <!-- HornetQ netty ssl connector  -->
               <bean class="org.jboss.services.binding.SystemPropertyBinding">
                  <constructor>
                     <parameter>hornetq.remoting.netty.ssl.port</parameter>
                     <parameter class="int">
                        <value-factory bean="ServiceBindingManager" method="getIntBinding">
                             <parameter>HornetQ</parameter>
                             <parameter>netty-ssl-port</parameter>
                        </value-factory>
                     </parameter>
                  </constructor>
               </bean>
               <!-- Web HTTP connector -->
               <bean class="org.jboss.services.binding.SystemPropertyBinding">
                  <constructor>
                     <parameter>jboss.web.http.port</parameter>
                     <parameter class="int">
                        <value-factory bean="ServiceBindingManager" method="getIntBinding">
                             <parameter>jboss.web:service=WebServer</parameter>
                             <parameter>HttpConnector</parameter>
                        </value-factory>
                     </parameter>
                  </constructor>
               </bean>
               <!-- Web HTTPS connector -->
               <bean class="org.jboss.services.binding.SystemPropertyBinding">
                  <constructor>
                     <parameter>jboss.web.https.port</parameter>
                     <parameter class="int">
                        <value-factory bean="ServiceBindingManager" method="getIntBinding">
                             <parameter>jboss.web:service=WebServer</parameter>
                             <parameter>HttpsConnector</parameter>
                        </value-factory>
                     </parameter>
                  </constructor>
               </bean>
               <!-- Web AJP connector -->
               <bean class="org.jboss.services.binding.SystemPropertyBinding">
                  <constructor>
                     <parameter>jboss.web.ajp.port</parameter>
                     <parameter class="int">
                        <value-factory bean="ServiceBindingManager" method="getIntBinding">
                             <parameter>jboss.web:service=WebServer</parameter>
                             <parameter>AjpConnector</parameter>
                        </value-factory>
                     </parameter>
                  </constructor>
               </bean>

               <!-- JGroups -->
               <bean class="org.jboss.services.binding.SystemPropertyBinding">
                  <constructor>
                     <parameter>jboss.jgroups.udp.bind_port</parameter>
                     <parameter class="int">
                        <value-factory bean="ServiceBindingManager" method="getIntBinding">
                             <parameter>JGroups</parameter>
                             <parameter>udp-bind_port</parameter>
                        </value-factory>
                     </parameter>
                  </constructor>
               </bean>
               <bean class="org.jboss.services.binding.SystemPropertyBinding">
                  <constructor>
                     <parameter>jboss.jgroups.udp.mcast_port</parameter>
                     <parameter class="int">
                        <value-factory bean="ServiceBindingManager" method="getIntBinding">
                             <parameter>JGroups</parameter>
                             <parameter>udp-mcast</parameter>
                        </value-factory>
                     </parameter>
                  </constructor>
               </bean>
               <bean class="org.jboss.services.binding.SystemPropertyBinding">
                  <constructor>
                     <parameter>jboss.jgroups.udp.mcast_addr</parameter>
                     <parameter class="java.lang.String">
                        <value-factory bean="ServiceBindingManager" method="getStringBinding">
                             <parameter>JGroups</parameter>
                             <parameter>udp-mcast</parameter>
                             <parameter><null/></parameter>
                        </value-factory>
                     </parameter>
                  </constructor>
               </bean>
               <bean class="org.jboss.services.binding.SystemPropertyBinding">
                  <constructor>
                     <parameter>jboss.jgroups.udp.fd_sock_port</parameter>
                     <parameter class="int">
                        <value-factory bean="ServiceBindingManager" method="getIntBinding">
                             <parameter>JGroups</parameter>
                             <parameter>udp-fd_sock</parameter>
                        </value-factory>
                     </parameter>
                  </constructor>
               </bean>
               <bean class="org.jboss.services.binding.SystemPropertyBinding">
                  <constructor>
                     <parameter>jboss.jgroups.tcp.tcp_port</parameter>
                     <parameter class="int">
                        <value-factory bean="ServiceBindingManager" method="getIntBinding">
                             <parameter>JGroups</parameter>
                             <parameter>tcp-bind_port</parameter>
                        </value-factory>
                     </parameter>
                  </constructor>
               </bean>
               <bean class="org.jboss.services.binding.SystemPropertyBinding">
                  <constructor>
                     <parameter>jboss.jgroups.tcp.mping_mcast_port</parameter>
                     <parameter class="int">
                        <value-factory bean="ServiceBindingManager" method="getIntBinding">
                             <parameter>JGroups</parameter>
                             <parameter>tcp-mping</parameter>
                        </value-factory>
                     </parameter>
                  </constructor>
               </bean>
               <bean class="org.jboss.services.binding.SystemPropertyBinding">
                  <constructor>
                     <parameter>jboss.jgroups.tcp.mping_mcast_addr</parameter>
                     <parameter class="java.lang.String">
                        <value-factory bean="ServiceBindingManager" method="getStringBinding">
                             <parameter>JGroups</parameter>
                             <parameter>tcp-mping</parameter>
                             <parameter><null/></parameter>
                        </value-factory>
                     </parameter>
                  </constructor>
               </bean>
               <bean class="org.jboss.services.binding.SystemPropertyBinding">
                  <constructor>
                     <parameter>jboss.jgroups.tcp.fd_sock_port</parameter>
                     <parameter class="int">
                        <value-factory bean="ServiceBindingManager" method="getIntBinding">
                             <parameter>JGroups</parameter>
                             <parameter>tcp-fd_sock</parameter>
                        </value-factory>
                     </parameter>
                  </constructor>
               </bean>
               <bean class="org.jboss.services.binding.SystemPropertyBinding">
                  <constructor>
                     <parameter>jboss.jgroups.diagnostics_port</parameter>
                     <parameter class="int">
                        <value-factory bean="ServiceBindingManager" method="getIntBinding">
                             <parameter>JGroups</parameter>
                             <parameter>diagnostics</parameter>
                        </value-factory>
                     </parameter>
                  </constructor>
               </bean>
               <bean class="org.jboss.services.binding.SystemPropertyBinding">
                  <constructor>
                     <parameter>jboss.jgroups.diagnostics_addr</parameter>
                     <parameter class="java.lang.String">
                        <value-factory bean="ServiceBindingManager" method="getStringBinding">
                             <parameter>JGroups</parameter>
                             <parameter>diagnostics</parameter>
                             <parameter><null/></parameter>
                        </value-factory>
                     </parameter>
                  </constructor>
               </bean>
<!--                <bean class="org.jboss.services.binding.SystemPropertyBinding">
                  <constructor>
                     <parameter>jboss.jgroups.udp_async.bind_port</parameter>
                     <parameter class="int">
                        <value-factory bean="ServiceBindingManager" method="getIntBinding">
                             <parameter>JGroups</parameter>
                             <parameter>udp_async-bind_port</parameter>
                        </value-factory>
                     </parameter>
                  </constructor>
               </bean>
               <bean class="org.jboss.services.binding.SystemPropertyBinding">
                  <constructor>
                     <parameter>jboss.jgroups.udp_sync.bind_port</parameter>
                     <parameter class="int">
                        <value-factory bean="ServiceBindingManager" method="getIntBinding">
                             <parameter>JGroups</parameter>
                             <parameter>udp_sync-bind_port</parameter>
                        </value-factory>
                     </parameter>
                  </constructor>
               </bean>
               <bean class="org.jboss.services.binding.SystemPropertyBinding">
                  <constructor>
                     <parameter>jboss.jgroups.tcp_sync.tcp_port</parameter>
                     <parameter class="int">
                        <value-factory bean="ServiceBindingManager" method="getIntBinding">
                             <parameter>JGroups</parameter>
                             <parameter>tcp_sync-bind_port</parameter>
                        </value-factory>
                     </parameter>
                  </constructor>
               </bean>
               <bean class="org.jboss.services.binding.SystemPropertyBinding">
                  <constructor>
                     <parameter>jboss.jgroups.udp_async.mcast_port</parameter>
                     <parameter class="int">
                        <value-factory bean="ServiceBindingManager" method="getIntBinding">
                             <parameter>JGroups</parameter>
                             <parameter>udp_async-mcast</parameter>
                        </value-factory>
                     </parameter>
                  </constructor>
               </bean>
               <bean class="org.jboss.services.binding.SystemPropertyBinding">
                  <constructor>
                     <parameter>jboss.jgroups.udp_async.mcast_addr</parameter>
                     <parameter class="java.lang.String">
                        <value-factory bean="ServiceBindingManager" method="getStringBinding">
                             <parameter>JGroups</parameter>
                             <parameter>udp_async-mcast</parameter>
                             <parameter><null/></parameter>
                        </value-factory>
                     </parameter>
                  </constructor>
               </bean>
               <bean class="org.jboss.services.binding.SystemPropertyBinding">
                  <constructor>
                     <parameter>jboss.jgroups.udp_async.fd_sock_port</parameter>
                     <parameter class="int">
                        <value-factory bean="ServiceBindingManager" method="getIntBinding">
                             <parameter>JGroups</parameter>
                             <parameter>udp_async-fd_sock</parameter>
                        </value-factory>
                     </parameter>
                  </constructor>
               </bean>
               <bean class="org.jboss.services.binding.SystemPropertyBinding">
                  <constructor>
                     <parameter>jboss.jgroups.udp_sync.mcast_port</parameter>
                     <parameter class="int">
                        <value-factory bean="ServiceBindingManager" method="getIntBinding">
                             <parameter>JGroups</parameter>
                             <parameter>udp_sync-mcast</parameter>
                        </value-factory>
                     </parameter>
                  </constructor>
               </bean>
               <bean class="org.jboss.services.binding.SystemPropertyBinding">
                  <constructor>
                     <parameter>jboss.jgroups.udp_sync.mcast_addr</parameter>
                     <parameter class="java.lang.String">
                        <value-factory bean="ServiceBindingManager" method="getStringBinding">
                             <parameter>JGroups</parameter>
                             <parameter>udp_sync-mcast</parameter>
                             <parameter><null/></parameter>
                        </value-factory>
                     </parameter>
                  </constructor>
               </bean>
               <bean class="org.jboss.services.binding.SystemPropertyBinding">
                  <constructor>
                     <parameter>jboss.jgroups.udp_sync.fd_sock_port</parameter>
                     <parameter class="int">
                        <value-factory bean="ServiceBindingManager" method="getIntBinding">
                             <parameter>JGroups</parameter>
                             <parameter>udp_sync-fd_sock</parameter>
                        </value-factory>
                     </parameter>
                  </constructor>
               </bean>
               <bean class="org.jboss.services.binding.SystemPropertyBinding">
                  <constructor>
                     <parameter>jboss.jgroups.tcp_sync.mping_mcast_port</parameter>
                     <parameter class="int">
                        <value-factory bean="ServiceBindingManager" method="getIntBinding">
                             <parameter>JGroups</parameter>
                             <parameter>tcp_sync-mping</parameter>
                        </value-factory>
                     </parameter>
                  </constructor>
               </bean>
               <bean class="org.jboss.services.binding.SystemPropertyBinding">
                  <constructor>
                     <parameter>jboss.jgroups.tcp_sync.mping_mcast_addr</parameter>
                     <parameter class="java.lang.String">
                        <value-factory bean="ServiceBindingManager" method="getStringBinding">
                             <parameter>JGroups</parameter>
                             <parameter>tcp_sync-mping</parameter>
                             <parameter><null/></parameter>
                        </value-factory>
                     </parameter>
                  </constructor>
               </bean>
               <bean class="org.jboss.services.binding.SystemPropertyBinding">
                  <constructor>
                     <parameter>jboss.jgroups.tcp_sync.fd_sock_port</parameter>
                     <parameter class="int">
                        <value-factory bean="ServiceBindingManager" method="getIntBinding">
                             <parameter>JGroups</parameter>
                             <parameter>tcp_sync-fd_sock</parameter>
                        </value-factory>
                     </parameter>
                  </constructor>
               </bean>
-->

            </set>
         </parameter>
      </constructor>

   </bean>

</deployment>
