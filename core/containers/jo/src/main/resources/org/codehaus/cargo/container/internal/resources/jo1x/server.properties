# -------------------------------------------------------------------
# Codehaus Cargo, copyright 2004-2011 Vincent Massol, 2012-2025 Ali Tokmen.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# -------------------------------------------------------------------

# defines the server properties

#
# Defines the properties of an instance of jo!
#

#
# The name of the service
##
jo.name=jo

#
# The location of the server logfile. This must be
# file or URL relative to this file or an absolute
# file or URL.
#
# You may use system property expansion.
# E.g.: jo.log=%user.home%/server.log
##
jo.log=../log/server.log

#
# The level messages should be logged with (lower number less messages)
##
jo.loglevel=@jo.loglevel@

#
# The number of messages that should be buffered
##
jo.logbuffer=1

#
# Where to write the standard out log
# Default is standard out
##
#jo.stdout=../log/stdout.log

#
# Where to write the standard error log
# Default is standard error
##
#jo.stderr=../log/stderr.log

#
# The maximum number of concurrently handled connections.
# A low number will speed up the execution of a single request,
# while a high number will allow a greater concurrency.
# This is something to play around with. Feedback is welcome!
# mailto: <feedback@tagtraum.com>
##
jo.maxhandlerthreads=100

#
# The minimum number of handler threads.
# Defines how many threads will be kept
# instantiated even if there haven't been requests
# for quite a while.
##
jo.minhandlerthreads=5

#
# The maximum number of requests handled
# by a single persistent connection.
##
jo.maxrequests=100

#
# Time in seconds a connection is kept
# open waiting for a request.
##
jo.keepalive=15

#
# Time in ms to wait before the handlerpool is reduced
# to smaller size, end eventually to the minimum
##
jo.so_timeout=5000

#
# The classname or alias of the handler to use.
##
jo.handlerclassname=Handler

#
# Version of jo! This number is displayed in the server
# header.
##
jo.majorversion=1

#
# Version of jo! This number is displayed in the server
# header.
##
jo.minorversion=1

#
# File in which aliases for the general factory are defined.
##
jo.factory=factory.properties

#
# Maximum size in bytes for cachable files.
# Set this to -1 of you don't want to limit the size
# of the cache entries.
##
jo.maxcacheentrysize=100000

#
# Maximum size in bytes of the file cache.
# Set this to -1, if you don't want to limit the cache.
# This is safe, because the cache is memory sensitive.
##
jo.cachecapacity=-1

#
# Specifies the number of cache entries that will be
# strongly referenced in a LRU fashion.
# Default is 10
##
jo.strongrefcapacity=10

#
# Registers an authentificator for HTTP Basic authentication
##
jo.authentificator.BASIC=HttpBasicAuthentificator

#
# Registers an authentificator for HTTP Digest authentication
##
jo.authentificator.DIGEST=HttpDigestAuthentificator

#
# Registers an authentificator for form based authentication
##
jo.authentificator.FORM=FormBasedAuthentificator

#
# Registers an authentificator for certificate based authentication
# NOTE: Not supported yet.
##
#jo.authentificator.CERT=CertBasedAuthentificator

#
# The following works only under linux, if the vm runs
# as a single process, i.e. with green threads. To enable
# green threads with JDK 1.3.1, set the -classic flag
# when you start the vm (rik)
##

#
# Group this server shall run under (Linux only)
##
#jo.group=nogroup

#
# User this server shall run under (Linux only)
##
#jo.user=wwwrun

#
# Example for a requestinterceptor
##
#jo.requestinterceptor.hostrewrite=com.tagtraum.jo.requestinterceptor.HostRewrite
#jo.requestinterceptor.hostrewrite.parameters=host1:8080=host2:80,host3:8082=host4:443
#jo.requestinterceptor.hostrewrite.order=1