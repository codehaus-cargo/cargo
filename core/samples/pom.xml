<?xml version="1.0" encoding="UTF-8"?>

<!--
  Codehaus Cargo, copyright 2004-2011 Vincent Massol, 2012-2022 Ali Tokmen.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.codehaus.cargo</groupId>
    <artifactId>cargo-core</artifactId>
    <version>1.9.14-SNAPSHOT</version>
  </parent>
  <artifactId>cargo-samples</artifactId>
  <packaging>pom</packaging>
  <name>Cargo Samples</name>
  <description>Samples that exercises the Cargo Java APIs</description>
  <dependencies>
    <dependency>
      <groupId>org.codehaus.cargo</groupId>
      <artifactId>cargo-core-uberjar</artifactId>
    </dependency>

    <dependency>
      <groupId>org.codehaus.cargo</groupId>
      <artifactId>cargo-core-api-container</artifactId>
      <type>test-jar</type>
    </dependency>

    <!-- The EJB includes its API -->
    <dependency>
      <groupId>org.codehaus.cargo</groupId>
      <artifactId>simple-ejb</artifactId>
      <type>ejb</type>
    </dependency>
  </dependencies>
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <configuration>
            <childDelegation>${surefire.childDelegation}</childDelegation>
            <useManifestOnlyJar>${surefire.useManifestOnlyJar}</useManifestOnlyJar>
            <useSystemClassLoader>${surefire.useSystemClassLoader}</useSystemClassLoader>

            <forkCount>1</forkCount>
            <reuseForks>false</reuseForks>
            <useFile>true</useFile>
            <reportFormat>plain</reportFormat>

            <!-- 30 minutes -->
            <forkedProcessTimeoutInSeconds>1800</forkedProcessTimeoutInSeconds>

            <systemProperties>
              <!--
                As we run the tests in their separately forked JVMs, the associated properties must
                be passed explicitly. If you're behind a proxy, set this here.

                Alternatively, you can set the cargo.proxy.* variables in your settings.xml.
                Scroll further down in this file to learn how!

              <property>
                <name>http.proxyHost</name>
                <value>proxy</value>
              </property>
                -->

              <!--
                Pass locations of java homes to the test classes so that they can look them up and
                determine if a container is running on jdk 1.4, 1.5, etc.
                -->
              <property>
                <name>cargo.java.home.1_4</name>
                <value>${cargo.java.home.1_4}</value>
              </property>
              <property>
                <name>cargo.java.home.1_5</name>
                <value>${cargo.java.home.1_5}</value>
              </property>
              <property>
                <name>cargo.java.home.1_6</name>
                <value>${cargo.java.home.1_6}</value>
              </property>
              <property>
                <name>cargo.java.home.1_7</name>
                <value>${cargo.java.home.1_7}</value>
              </property>
              <property>
                <name>cargo.java.home.1_8</name>
                <value>${cargo.java.home.1_8}</value>
              </property>
              <property>
                <name>cargo.java.home.1_11</name>
                <value>${cargo.java.home.1_11}</value>
              </property>

              <property>
                <name>cargo.rmi.port</name>
                <value>${cargo.samples.rmi.port}</value>
              </property>
              <property>
                <name>cargo.servlet.port</name>
                <value>${cargo.samples.servlet.port}</value>
              </property>

              <!-- Ports required for GlassFish domain to be created -->
              <property>
                <name>cargo.glassfish.admin.port</name>
                <value>${cargo.samples.glassfish.admin.port}</value>
              </property>
              <property>
                <name>cargo.glassfish.http.ssl.port</name>
                <value>${cargo.samples.glassfish.http.ssl.port}</value>
              </property>
              <property>
                <name>cargo.glassfish.java.debugger.port</name>
                <value>${cargo.samples.glassfish.java.debugger.port}</value>
              </property>
              <property>
                <name>cargo.glassfish.jms.port</name>
                <value>${cargo.samples.glassfish.jms.port}</value>
              </property>
              <property>
                <name>cargo.glassfish.orb.listener.port</name>
                <value>${cargo.samples.glassfish.orb.listener.port}</value>
              </property>
              <property>
                <name>cargo.glassfish.orb.mutualauth.port</name>
                <value>${cargo.samples.glassfish.orb.mutualauth.port}</value>
              </property>
              <property>
                <name>cargo.glassfish.orb.ssl.port</name>
                <value>${cargo.samples.glassfish.orb.ssl.port}</value>
              </property>
              <property>
                <name>cargo.glassfish.osgi.shell.telnet.port</name>
                <value>${cargo.samples.glassfish.osgi.shell.telnet.port}</value>
              </property>

              <!-- Ports required for JBoss tests to pass -->
              <property>
                <name>cargo.jboss.ajp.port</name>
                <value>${cargo.samples.jboss.ajp.port}</value>
              </property>
              <property>
                <name>cargo.jboss.https.port</name>
                <value>${cargo.samples.jboss.https.port}</value>
              </property>
              <property>
                <name>cargo.jboss.naming.port</name>
                <value>${cargo.samples.jboss.naming.port}</value>
              </property>
              <property>
                <name>cargo.jboss.classloading.webservice.port</name>
                <value>${cargo.samples.jboss.classloading.webservice.port}</value>
              </property>
              <property>
                <name>cargo.jboss.jmx.port</name>
                <value>${cargo.samples.jboss.jmx.port}</value>
              </property>
              <property>
                <name>cargo.jboss.jrmp.port</name>
                <value>${cargo.samples.jboss.jrmp.port}</value>
              </property>
              <property>
                <name>cargo.jboss.jrmp.invoker.port</name>
                <value>${cargo.samples.jboss.jrmp.invoker.port}</value>
              </property>
              <property>
                <name>cargo.jboss.invoker.pool.port</name>
                <value>${cargo.samples.jboss.invoker.pool.port}</value>
              </property>
              <property>
                <name>cargo.jboss.management-native.port</name>
                <value>${cargo.samples.jboss.management-native.port}</value>
              </property>
              <property>
                <name>cargo.jboss.management-http.port</name>
                <value>${cargo.samples.jboss.management-http.port}</value>
              </property>
              <property>
                <name>cargo.jboss.management-https.port</name>
                <value>${cargo.samples.jboss.management-https.port}</value>
              </property>
              <property>
                <name>cargo.jboss.osgi.http.port</name>
                <value>${cargo.samples.jboss.osgi.http.port}</value>
              </property>
              <property>
                <name>cargo.jboss.remoting.transport.port</name>
                <value>${cargo.samples.jboss.remoting.transport.port}</value>
              </property>
              <property>
                <name>cargo.jboss.ejb3.remoting.port</name>
                <value>${cargo.samples.jboss.ejb3.remoting.port}</value>
              </property>
              <property>
                <name>cargo.jboss.transaction.recoveryManager.port</name>
                <value>${cargo.samples.jboss.transaction.recoveryManager.port}</value>
              </property>
              <property>
                <name>cargo.jboss.transaction.statusManager.port</name>
                <value>${cargo.samples.jboss.transaction.statusManager.port}</value>
              </property>
              <property>
                <name>cargo.jboss.remotedeploy.port</name>
                <value>${cargo.samples.jboss.remotedeploy.port}</value>
              </property>

              <!-- Avoid port number clashes in Resin -->
              <property>
                <name>cargo.resin.socketwait.port</name>
                <value>${cargo.samples.resin.socketwait.port}</value>
              </property>

              <!-- Avoid port number clashes in Tomcat -->
              <property>
                <name>cargo.tomcat.ajp.port</name>
                <value>${cargo.samples.tomcat.ajp.port}</value>
              </property>

              <!-- Use common file name for the bundle tests -->
              <property>
                <name>cargo.samples.bundle.targetFile</name>
                <value>${project.build.directory}/bundle-test/output.log</value>
              </property>

              <!-- Set default parser -->
              <property>
                <name>javax.xml.parsers.SAXParserFactory</name>
                <value>${javax.xml.parsers.SAXParserFactory}</value>
              </property>

              <!--
                Default locations from where to get the container installation files.
                - If you wish to use a version already downloaded on your filesystem,
                  use the "file:///" prefix instead of "http://".
                  For example: file:///c:/apps/resin-3.0.19.zip
                - If you wish to use an already installed container, set the
                  "cargo.[container name].home" property in your settings.xml file.
                  For example: c:/apps/resin-3.0.19
                -->

              <property>
                <name>cargo.jboss3x.url</name>
                <value>https://repository.jboss.org/sourceforge/jboss-3.2.8.SP1.zip</value>
              </property>
              <property>
                <name>cargo.jboss3x.java.home</name>
                <value>${cargo.java.home.1_4}</value>
              </property>

              <property>
                <name>cargo.jboss4x.url</name>
                <value>https://repository.jboss.org/sourceforge/jboss-4.0.5.GA.zip</value>
              </property>
              <property>
                <name>cargo.jboss4x.java.home</name>
                <value>${cargo.java.home.1_4}</value>
              </property>

              <property>
                <name>cargo.jboss42x.url</name>
                <value>https://repository.jboss.org/sourceforge/jboss-4.2.3.GA.zip</value>
              </property>
              <property>
                <name>cargo.jboss42x.java.home</name>
                <value>${cargo.java.home.1_5}</value>
              </property>

              <property>
                <name>cargo.jboss5x.url</name>
                <value>https://repository.jboss.org/sourceforge/jboss-5.0.1.GA.zip</value>
              </property>
              <property>
                <name>cargo.jboss5x.java.home</name>
                <value>${cargo.java.home.1_5}</value>
              </property>

              <property>
                <name>cargo.jboss51x.url</name>
                <value>https://repository.jboss.org/sourceforge/jboss-5.1.0.GA.zip</value>
              </property>
              <property>
                <name>cargo.jboss51x.java.home</name>
                <value>${cargo.java.home.1_5}</value>
              </property>

              <property>
                <name>cargo.jboss6x.url</name>
                <value>https://repository.jboss.org/org/jboss/jbossas/jboss-as-distribution/6.0.0.Final/jboss-as-distribution-6.0.0.Final.zip</value>
              </property>
              <property>
                <name>cargo.jboss6x.java.home</name>
                <value>${cargo.java.home.1_6}</value>
              </property>

              <property>
                <name>cargo.jboss61x.url</name>
                <value>https://download.jboss.org/jbossas/6.1/jboss-as-distribution-6.1.0.Final.zip</value>
              </property>
              <property>
                <name>cargo.jboss61x.java.home</name>
                <value>${cargo.java.home.1_6}</value>
              </property>

              <property>
                <name>cargo.jboss7x.url</name>
                <value>https://download.jboss.org/jbossas/7.0/jboss-as-7.0.2.Final/jboss-as-7.0.2.Final.zip</value>
              </property>
              <property>
                <name>cargo.jboss7x.java.home</name>
                <value>${cargo.java.home.1_6}</value>
              </property>

              <property>
                <name>cargo.jboss71x.url</name>
                <value>https://download.jboss.org/jbossas/7.1/jboss-as-7.1.1.Final/jboss-as-7.1.1.Final.zip</value>
              </property>
              <property>
                <name>cargo.jboss71x.java.home</name>
                <value>${cargo.java.home.1_6}</value>
              </property>

              <!--
                JBoss 7.2 is actually called EAP 6.1.0

                To test JBoss EAP 6.1.0, please download it manually from
                https://developers.redhat.com/products/eap/download
                and set the cargo.jboss72x.home property accordingly.

                For example:

                  <property>
                    <name>cargo.jboss72x.home</name>
                    <value>C:/Program Files/JBoss/jboss-eap-6.1.0</value>
                  </property>
                -->
              <property>
                <name>cargo.jboss72x.home</name>
                <value>${cargo.jboss72x.home}</value>
              </property>
              <property>
                <name>cargo.jboss72x.java.home</name>
                <value>${cargo.java.home.1_6}</value>
              </property>

              <!--
                JBoss 7.3 is actually called EAP 6.2.0

                To test JBoss EAP 6.2.0, please download it manually from
                https://developers.redhat.com/products/eap/download
                and set the cargo.jboss73x.home property accordingly.

                For example:

                  <property>
                    <name>cargo.jboss73x.home</name>
                    <value>C:/Program Files/JBoss/jboss-eap-6.2.0</value>
                  </property>
                -->
              <property>
                <name>cargo.jboss73x.home</name>
                <value>${cargo.jboss73x.home}</value>
              </property>
              <property>
                <name>cargo.jboss73x.java.home</name>
                <value>${cargo.java.home.1_6}</value>
              </property>

              <!--
                JBoss 7.4 is actually called EAP 6.3.0

                To test JBoss EAP 6.3.0, please download it manually from
                https://developers.redhat.com/products/eap/download
                and set the cargo.jboss74x.home property accordingly.

                For example:

                  <property>
                    <name>cargo.jboss74x.home</name>
                    <value>C:/Program Files/JBoss/jboss-eap-6.3.0</value>
                  </property>
                -->
              <property>
                <name>cargo.jboss74x.home</name>
                <value>${cargo.jboss74x.home}</value>
              </property>
              <property>
                <name>cargo.jboss74x.java.home</name>
                <value>${cargo.java.home.1_7}</value>
              </property>

              <!--
                JBoss 7.5 is actually called EAP 6.4.0

                To test JBoss EAP 6.4.0, please download it manually from
                https://developers.redhat.com/products/eap/download
                and set the cargo.jboss75x.home property accordingly.

                For example:

                  <property>
                    <name>cargo.jboss75x.home</name>
                    <value>C:/Program Files/JBoss/jboss-eap-6.4.0</value>
                  </property>
                -->
              <property>
                <name>cargo.jboss75x.home</name>
                <value>${cargo.jboss75x.home}</value>
              </property>
              <property>
                <name>cargo.jboss75x.java.home</name>
                <value>${cargo.java.home.1_7}</value>
              </property>

              <property>
                <name>cargo.jetty5x.url</name>
                <value>http://web.archive.org/web/20150506142403if_/http://dist.codehaus.org/jetty/jetty-5.1.x/jetty-5.1.15.tgz</value>
              </property>
              <property>
                <name>cargo.jetty5x.java.home</name>
                <value>${cargo.java.home.1_4}</value>
              </property>

              <property>
                <name>cargo.jetty6x.url</name>
                <value>http://web.archive.org/web/20150506142907if_/http://dist.codehaus.org/jetty/jetty-6.1.26/jetty-6.1.26.zip</value>
              </property>
              <property>
                <name>cargo.jetty6x.java.home</name>
                <value>${cargo.java.home.1_5}</value>
              </property>

              <property>
                <name>cargo.jetty7x.url</name>
                <!--
                <value>https://repo.maven.apache.org/maven2/org/eclipse/jetty/jetty-distribution/7.1.6.v20100715/jetty-distribution-7.1.6.v20100715.tar.gz</value>
                  -->
                <!--
                <value>https://repo.maven.apache.org/maven2/org/eclipse/jetty/jetty-distribution/7.2.2.v20101205/jetty-distribution-7.2.2.v20101205.tar.gz</value>
                  -->
                <!--
                <value>https://repo.maven.apache.org/maven2/org/eclipse/jetty/jetty-distribution/7.3.1.v20110307/jetty-distribution-7.3.1.v20110307.tar.gz</value>
                  -->
                <!--
                <value>https://repo.maven.apache.org/maven2/org/eclipse/jetty/jetty-distribution/7.4.5.v20110725/jetty-distribution-7.4.5.v20110725.tar.gz</value>
                  -->
                <!--
                  Jetty 7.5.4.v20111024 cannot be used due to a NPE in SelectorManager.register
                  -->
                <!--
                <value>https://repo.maven.apache.org/maven2/org/eclipse/jetty/jetty-distribution/7.5.3.v20111011/jetty-distribution-7.5.3.v20111011.tar.gz</value>
                  -->
                <value>https://repo.maven.apache.org/maven2/org/eclipse/jetty/jetty-distribution/7.6.21.v20160908/jetty-distribution-7.6.21.v20160908.tar.gz</value>
              </property>
              <property>
                <name>cargo.jetty7x.java.home</name>
                <value>${cargo.java.home.1_5}</value>
              </property>

              <property>
                <name>cargo.jetty8x.url</name>
                <!--
                  Jetty 8.0.4.v20111024 cannot be used due to a NPE in SelectorManager.register
                  -->
                <!--
                <value>https://repo.maven.apache.org/maven2/org/eclipse/jetty/jetty-distribution/8.0.3.v20111011/jetty-distribution-8.0.3.v20111011.tar.gz</value>
                  -->
                <value>https://repo.maven.apache.org/maven2/org/eclipse/jetty/jetty-distribution/8.1.22.v20160922/jetty-distribution-8.1.22.v20160922.tar.gz</value>
              </property>
              <property>
                <name>cargo.jetty8x.java.home</name>
                <value>${cargo.java.home.1_6}</value>
              </property>

              <property>
                <name>cargo.jetty9x.url</name>
                <!--
                <value>https://repo.maven.apache.org/maven2/org/eclipse/jetty/jetty-distribution/9.0.7.v20131107/jetty-distribution-9.0.7.v20131107.tar.gz</value>
                  -->
                <!--
                <value>https://repo.maven.apache.org/maven2/org/eclipse/jetty/jetty-distribution/9.1.5.v20140505/jetty-distribution-9.1.5.v20140505.tar.gz</value>
                  -->
                <!--
                <value>https://repo.maven.apache.org/maven2/org/eclipse/jetty/jetty-distribution/9.2.29.v20191105/jetty-distribution-9.2.29.v20191105.tar.gz</value>
                  -->
                <!--
                <value>https://repo.maven.apache.org/maven2/org/eclipse/jetty/jetty-distribution/9.3.28.v20191105/jetty-distribution-9.3.28.v20191105.tar.gz</value>
                  -->
                <value>https://repo.maven.apache.org/maven2/org/eclipse/jetty/jetty-home/9.4.48.v20220622/jetty-home-9.4.48.v20220622.tar.gz</value>
              </property>
              <property>
                <name>cargo.jetty9x.java.home</name>
                <value>${cargo.java.home.1_7}</value>
              </property>

              <property>
                <name>cargo.jetty10x.url</name>
                <value>https://repo.maven.apache.org/maven2/org/eclipse/jetty/jetty-home/10.0.11/jetty-home-10.0.11.tar.gz</value>
              </property>
              <property>
                <name>cargo.jetty10x.java.home</name>
                <value>${cargo.java.home.1_11}</value>
              </property>

              <property>
                <name>cargo.jetty11x.url</name>
                <value>https://repo.maven.apache.org/maven2/org/eclipse/jetty/jetty-home/11.0.11/jetty-home-11.0.11.tar.gz</value>
              </property>
              <property>
                <name>cargo.jetty11x.java.home</name>
                <value>${cargo.java.home.1_11}</value>
              </property>

              <property>
                <name>cargo.jo1x.url</name>
                <value>https://www.tagtraum.com/download/jo1.1beta1.zip</value>
              </property>
              <property>
                <name>cargo.jo1x.java.home</name>
                <value>${cargo.java.home.1_4}</value>
              </property>

              <property>
                <name>cargo.jonas4x.url</name>
                <value>https://dllegacy.ow2.org/jonas/jonas4.10.9-tomcat5.5.28.tgz</value>
              </property>
              <property>
                <name>cargo.jonas4x.java.home</name>
                <value>${cargo.java.home.1_4}</value>
              </property>
              <property>
                <name>cargo.samples.jonas4x.jonas.services.list</name>
                <value>registry,jmx,security,jtm,resource,web,ear</value>
              </property>

              <property>
                <name>cargo.jonas5x.url</name>
                <value>https://repo.maven.apache.org/maven2/org/ow2/jonas/assemblies/profiles/legacy/jonas-full/5.3.0/jonas-full-5.3.0-bin.tar.gz</value>
              </property>
              <property>
                <name>cargo.jonas5x.java.home</name>
                <value>${cargo.java.home.1_6}</value>
              </property>
              <property>
                <name>cargo.samples.jonas5x.jonas.services.list</name>
                <value>resource,web,ear,depmonitor,datasource</value>
              </property>

              <!--
                Note: There is no direct download link for JRun 4.x as the download page
                requires free account registration and login:

                * http://www.adobe.com/products/jrun/download
                Once manually installed on your machine you must specify where it is
                installed using the cargo.jrun4x.home property.
                For example:

                <property>
                  <name>cargo.jrun4x.home</name>
                  <value>C:/JRun4</value>
                </property>
              -->
              <property>
                <name>cargo.jrun4x.home</name>
                <value>${cargo.jrun4x.home}</value>
              </property>
              <property>
                <name>cargo.jrun4x.java.home</name>
                <value>${cargo.java.home.1_5}</value>
              </property>

              <property>
                <name>cargo.geronimo1x.url</name>
                <!-- the default cargo.geronimo.servlet.containerId is tomcat, therefore use Tomcat -->
                <value>https://archive.apache.org/dist/geronimo/1.1.1/geronimo-tomcat-j2ee-1.1.1.zip</value>
              </property>
              <property>
                <name>cargo.geronimo1x.java.home</name>
                <value>${cargo.java.home.1_4}</value>
              </property>

              <property>
                <name>cargo.geronimo2x.url</name>
                <!--
                  DO NOT try to use version 2.2.1 because of Geronimo issue
                  https://issues.apache.org/jira/browse/GERONIMO-5723. This will be fixed in Geronimo 2.2.2.
                  -->
                <value>https://repo.maven.apache.org/maven2/org/apache/geronimo/assemblies/geronimo-tomcat6-javaee5/2.1.8/geronimo-tomcat6-javaee5-2.1.8-bin.zip</value>
              </property>
              <property>
                <name>cargo.geronimo2x.java.home</name>
                <value>${cargo.java.home.1_5}</value>
              </property>

              <property>
                <name>cargo.geronimo3x.url</name>
                <value>https://repo.maven.apache.org/maven2/org/apache/geronimo/assemblies/geronimo-tomcat7-javaee6/3.0.1/geronimo-tomcat7-javaee6-3.0.1-bin.zip</value>
              </property>
              <property>
                <name>cargo.geronimo3x.java.home</name>
                <value>${cargo.java.home.1_6}</value>
              </property>

              <!--
                GlassFish 2.x

                Notes:

                GlassFish 2.x needs to be installed manually.

                Once you install this, set the cargo.glassfish2x.home accordingly.

                For example:

                  <property>
                    <name>cargo.glassfish2x.home</name>
                    <value>/Users/alitokmen/Documents/CARGO/core/samples/java/installs/glassfish-2.1.1</value>
                  </property>
                -->

              <property>
                <name>cargo.glassfish2x.home</name>
                <value>${cargo.glassfish2x.home}</value>
              </property>
              <property>
                <name>cargo.glassfish2x.java.home</name>
                <value>${cargo.java.home.1_5}</value>
              </property>

              <property>
                <name>cargo.glassfish3x.url</name>
                <!--
                <value>https://repo.maven.apache.org/maven2/org/glassfish/distributions/glassfish/3.0.1/glassfish-3.0.1.zip</value>
                  -->
                <value>https://repo.maven.apache.org/maven2/org/glassfish/main/distributions/glassfish/3.1.2.2/glassfish-3.1.2.2.zip</value>
              </property>
              <property>
                <name>cargo.glassfish3x.java.home</name>
                <value>${cargo.java.home.1_6}</value>
              </property>

              <property>
                <name>cargo.glassfish4x.url</name>
                <!--
                <value>https://repo.maven.apache.org/maven2/org/glassfish/main/distributions/glassfish/4.0/glassfish-4.0.zip</value>
                  -->
                <value>https://repo.maven.apache.org/maven2/org/glassfish/main/distributions/glassfish/4.1.2/glassfish-4.1.2.zip</value>
              </property>
              <property>
                <name>cargo.glassfish4x.java.home</name>
                <value>${cargo.java.home.1_7}</value>
              </property>

              <property>
                <name>cargo.glassfish5x.url</name>
                <!--
                <value>https://repo.maven.apache.org/maven2/org/glassfish/main/distributions/glassfish/5.0.1/glassfish-5.0.1.zip</value>
                  -->
                <value>https://repo.maven.apache.org/maven2/org/glassfish/main/distributions/glassfish/5.1.0/glassfish-5.1.0.zip</value>
              </property>
              <property>
                <name>cargo.glassfish5x.java.home</name>
                <value>${cargo.java.home.1_8}</value>
              </property>

              <property>
                <name>cargo.glassfish6x.url</name>
                <!--
                <value>https://repo.maven.apache.org/maven2/org/glassfish/main/distributions/glassfish/6.0.0/glassfish-6.0.0.zip</value>
                  -->
                <!--
                <value>https://repo.maven.apache.org/maven2/org/glassfish/main/distributions/glassfish/6.1.0/glassfish-6.1.0.zip</value>
                  -->
                <value>https://repo.maven.apache.org/maven2/org/glassfish/main/distributions/glassfish/6.2.5/glassfish-6.2.5.zip</value>
              </property>
              <property>
                <name>cargo.glassfish6x.java.home</name>
                <value>${cargo.java.home.1_11}</value>
              </property>

              <property>
                <name>cargo.liberty.url</name>
                <value>https://repo.maven.apache.org/maven2/com/ibm/websphere/appserver/runtime/wlp-javaee8/22.0.0.6/wlp-javaee8-22.0.0.6.zip</value>
              </property>

              <!--
                OC4J 9.x

                Notes:

                OC4J 9.0.4 runs on JDK 1.3.1+

                There is no non-interactive download link for OC4J 9.x.  Here is a link that requires license agreement:
                   * http://www.oracle.com/technology/software/products/ias/htdocs/utilsoft.html

                Download the zip and extract it to a directory corresponding with the cargo.oc4j9x.home property.

                For example:

                  <property>
                    <name>cargo.oc4j9x.home</name>
                    <value>c:/oracle/oc4j_extended_904</value>
                  </property>
                -->
              <property>
                <name>cargo.oc4j9x.home</name>
                <value>${cargo.oc4j9x.home}</value>
              </property>
              <property>
                <name>cargo.oc4j9x.java.home</name>
                <value>${cargo.java.home.1_4}</value>
              </property>

              <!--
                OC4J 10.x

                Notes:

                OC4J 10.1.2.0.2 runs on JDK 1.4+
                     10.1.3.3.0 runs on JDK 1.4.2+
                     10.1.3.4.0 runs on JDK 1.4.2+

                We recommend setting this to a JDK 5.

                There is no non-interactive download link for OC4J 10.x.  Here is a link that requires license agreement:
                   * http://www.oracle.com/technology/software/products/ias/htdocs/utilsoft.html

                Download the zip and extract it to a directory corresponding with the cargo.oc4j10x.home property.

                For example:

                  <property>
                    <name>cargo.oc4j10x.home</name>
                    <value>c:/oracle/oc4j_extended_101340</value>
                  </property>
                -->
              <property>
                <name>cargo.oc4j10x.home</name>
                <value>${cargo.oc4j10x.home}</value>
              </property>
              <property>
                <name>cargo.oc4j10x.java.home</name>
                <value>${cargo.java.home.1_5}</value>
              </property>

              <property>
                <name>cargo.payara.url</name>
                <value>https://repo.maven.apache.org/maven2/fish/payara/distributions/payara/5.2022.2/payara-5.2022.2.zip</value>
              </property>
              <property>
                <name>cargo.payara.java.home</name>
                <value>${cargo.java.home.1_8}</value>
              </property>

              <property>
                <name>cargo.resin3x.url</name>
                <value>https://www.caucho.com/download/resin-3.0.27.zip</value>
              </property>
              <property>
                <name>cargo.resin3x.java.home</name>
                <value>${cargo.java.home.1_5}</value>
              </property>

              <property>
                <name>cargo.resin31x.url</name>
                <value>https://www.caucho.com/download/resin-3.1.15.zip</value>
              </property>
              <property>
                <name>cargo.resin31x.java.home</name>
                <value>${cargo.java.home.1_5}</value>
              </property>

              <property>
                <name>cargo.resin4x.url</name>
                <value>https://www.caucho.com/download/resin-4.0.66.zip</value>
              </property>
              <property>
                <name>cargo.resin4x.java.home</name>
                <value>${cargo.java.home.1_8}</value>
              </property>

              <property>
                <name>cargo.tomcat4x.url</name>
                <!--
                  Note that we want the larger download (not LE), as it contains dbcp needed for
                  database tests
                  -->
                <value>https://archive.apache.org/dist/tomcat/tomcat-4/v4.1.40/bin/apache-tomcat-4.1.40.zip</value>
              </property>
              <property>
                <name>cargo.tomcat4x.java.home</name>
                <value>${cargo.java.home.1_4}</value>
              </property>

              <property>
                <name>cargo.tomcat5x.url</name>
                <value>https://archive.apache.org/dist/tomcat/tomcat-5/v5.5.34/bin/apache-tomcat-5.5.34.zip</value>
              </property>
              <property>
                <name>cargo.tomcat5x.java.home</name>
                <value>${cargo.java.home.1_4}</value>
              </property>

              <property>
                <name>cargo.tomcat6x.url</name>
                <!--
                  Tomcat 6.0.53 cannot be used due to a ClassCastException:
                  org.apache.catalina.core.StandardContext cannot be cast to
                  org.apache.catalina.Context in the Embedded container
                  -->
                <!--
                <value>https://archive.apache.org/dist/tomcat/tomcat-6/v6.0.53/bin/apache-tomcat-6.0.53.zip</value>
                  -->
                <value>https://archive.apache.org/dist/tomcat/tomcat-6/v6.0.44/bin/apache-tomcat-6.0.44.zip</value>
              </property>
              <property>
                <name>cargo.tomcat6x.java.home</name>
                <value>${cargo.java.home.1_5}</value>
              </property>

              <property>
                <name>cargo.tomcat7x.url</name>
                <value>https://repo.maven.apache.org/maven2/org/apache/tomcat/tomcat/7.0.109/tomcat-7.0.109.zip</value>
              </property>
              <property>
                <name>cargo.tomcat7x.java.home</name>
                <value>${cargo.java.home.1_6}</value>
              </property>

              <property>
                <name>cargo.tomcat8x.url</name>
                <!--
                <value>https://repo.maven.apache.org/maven2/org/apache/tomcat/tomcat/8.0.53/tomcat-8.0.53.zip</value>
                  -->
                <value>https://repo.maven.apache.org/maven2/org/apache/tomcat/tomcat/8.5.81/tomcat-8.5.81.zip</value>
              </property>
              <property>
                <name>cargo.tomcat8x.java.home</name>
                <value>${cargo.java.home.1_7}</value>
              </property>

              <property>
                <name>cargo.tomcat9x.url</name>
                <value>https://repo.maven.apache.org/maven2/org/apache/tomcat/tomcat/9.0.64/tomcat-9.0.64.zip</value>
              </property>
              <property>
                <name>cargo.tomcat9x.java.home</name>
                <value>${cargo.java.home.1_8}</value>
              </property>

              <property>
                <name>cargo.tomcat10x.url</name>
                <value>https://repo.maven.apache.org/maven2/org/apache/tomcat/tomcat/10.0.22/tomcat-10.0.22.zip</value>
              </property>
              <property>
                <name>cargo.tomcat10x.java.home</name>
                <value>${cargo.java.home.1_8}</value>
              </property>

              <property>
                <name>cargo.tomee1x.url</name>
                <value>https://archive.apache.org/dist/tomee/tomee-1.7.5/apache-tomee-1.7.5-plus.zip</value>
              </property>
              <property>
                <name>cargo.tomee1x.java.home</name>
                <value>${cargo.java.home.1_6}</value>
              </property>

              <property>
                <name>cargo.tomee7x.url</name>
                <!--
                <value>https://repo.maven.apache.org/maven2/org/apache/tomee/apache-tomee/7.0.9/apache-tomee-7.0.9-plus.zip</value>
                  -->
                <value>https://repo.maven.apache.org/maven2/org/apache/tomee/apache-tomee/7.1.4/apache-tomee-7.1.4-plus.zip</value>
              </property>
              <property>
                <name>cargo.tomee7x.java.home</name>
                <value>${cargo.java.home.1_8}</value>
              </property>

              <property>
                <name>cargo.tomee8x.url</name>
                <value>https://repo.maven.apache.org/maven2/org/apache/tomee/apache-tomee/8.0.12/apache-tomee-8.0.12-plus.zip</value>
              </property>
              <property>
                <name>cargo.tomee8x.java.home</name>
                <value>${cargo.java.home.1_8}</value>
              </property>

              <property>
                <name>cargo.tomee9x.url</name>
                <value>https://repo.maven.apache.org/maven2/org/apache/tomee/apache-tomee/9.0.0-M7/apache-tomee-9.0.0-M7-plus.zip</value>
              </property>
              <property>
                <name>cargo.tomee9x.java.home</name>
                <value>${cargo.java.home.1_8}</value>
              </property>

              <!--
                WebLogic 8.x

                Notes:

                WebLogic 8.1 SP6 and below run on JDK 1.4

                There is no non-interactive download link for WL 8.x.  Here is a link that requires license agreement:
                   * http://commerce.bea.com/showproduct.jsp?family=WLS&major=8.1&minor=6

                Once you install this, set the cargo.weblogic8x.home property accordingly.

                For example:

                  <property>
                    <name>cargo.weblogic8x.home</name>
                    <value>c:/bea/weblogic81</value>
                  </property>
                -->
              <property>
                <name>cargo.weblogic8x.home</name>
                <value>${cargo.weblogic8x.home}</value>
              </property>
              <property>
                <name>cargo.weblogic8x.java.home</name>
                <value>${cargo.java.home.1_4}</value>
              </property>

              <!--
                WebLogic 9.x

                Notes:

                WebLogic 9.2 MP3 and below run on JDK 1.5

                There is no non-interactive download link for WL 9.x.  Here are links that require license agreement:
                   * http://commerce.bea.com/showproduct.jsp?family=WLS&major=9.2&minor=3
                   * http://www.oracle.com/technology/software/products/ias/htdocs/wls_main.html

                Once you install this, set the cargo.weblogic9x.home property accordingly.

                For example:

                  <property>
                    <name>cargo.weblogic9x.home</name>
                    <value>c:/bea/weblogic92</value>
                  </property>
                -->
              <property>
                <name>cargo.weblogic9x.home</name>
                <value>${cargo.weblogic9x.home}</value>
              </property>
              <property>
                <name>cargo.weblogic9x.java.home</name>
                <value>${cargo.java.home.1_5}</value>
              </property>

              <!--
                WebLogic 10.x

                Notes:

                WebLogic 10.0 MP1 and below run on JDK 1.5

                There is no non-interactive download link for WL 10.x.  Here are links that require license agreement:
                   * http://commerce.bea.com/showallversions.jsp?family=WLS
                   * http://www.oracle.com/technology/software/products/ias/htdocs/wls_main.html

                Once you install this, set the cargo.weblogic10x.home property accordingly.

                For example:

                  <property>
                    <name>cargo.weblogic10x.home</name>
                    <value>c:/bea/wlserver_10.0</value>
                  </property>
                -->
              <property>
                <name>cargo.weblogic10x.home</name>
                <value>${cargo.weblogic10x.home}</value>
              </property>
              <property>
                <name>cargo.weblogic10x.java.home</name>
                <value>${cargo.java.home.1_5}</value>
              </property>

              <!--
                WebLogic 10.3.x

                Notes:

                WebLogic 10.3 runs on JDK 1.6

                There is no non-interactive download link for WL 10.3x.  Here is is a link that requires license agreement:
                   * https://www.oracle.com/middleware/technologies/weblogic-server-installers-downloads.html

                Once you install this, set the cargo.weblogic103x.home property accordingly.

                For example:

                  <property>
                    <name>cargo.weblogic103x.home</name>
                    <value>c:/bea/wlserver_10.3</value>
                  </property>
                -->
              <property>
                <name>cargo.weblogic103x.home</name>
                <value>${cargo.weblogic103x.home}</value>
              </property>
              <property>
                <name>cargo.weblogic103x.java.home</name>
                <value>${cargo.java.home.1_6}</value>
              </property>

              <!--
                WebLogic 12.x

                Notes:

                Earlier versions of WebLogic 12 run on JDK 1.6, WebLogic 12.1.3 onwards require Java 7.

                There is no non-interactive download link for WL 12.x.  Here is is a link that requires license agreement:
                   * https://www.oracle.com/middleware/technologies/weblogic-server-installers-downloads.html

                Once you install this, set the cargo.weblogic12x.home property accordingly.

                For example:

                  <property>
                    <name>cargo.weblogic12x.home</name>
                    <value>C:/Oracle/wls_12.1.3.0.0/wlserver</value>
                  </property>
                -->
              <property>
                <name>cargo.weblogic12x.home</name>
                <value>${cargo.weblogic12x.home}</value>
              </property>
              <property>
                <name>cargo.weblogic12x.java.home</name>
                <value>${cargo.java.home.1_7}</value>
              </property>

              <!--
                WebLogic 12.1.x

                Notes:

                Earlier versions of WebLogic 12.1 run on JDK 1.6, WebLogic 12.1.3 onwards require Java 7.

                There is no non-interactive download link for WL 12.x.  Here is is a link that requires license agreement:
                   * https://www.oracle.com/middleware/technologies/weblogic-server-installers-downloads.html

                Once you install this, set the cargo.weblogic121x.home property accordingly.

                For example:

                  <property>
                    <name>cargo.weblogic121x.home</name>
                    <value>C:/Oracle/wls_12.1.3.0.0/wlserver</value>
                  </property>
                -->
              <property>
                <name>cargo.weblogic121x.home</name>
                <value>${cargo.weblogic121x.home}</value>
              </property>
              <property>
                <name>cargo.weblogic121x.java.home</name>
                <value>${cargo.java.home.1_7}</value>
              </property>

              <!--
                WebLogic 12.2.x

                Notes:

                WebLogic 12.2 runs on JDK 8

                There is no non-interactive download link for WL 12.x.  Here is is a link that requires license agreement:
                   * https://www.oracle.com/middleware/technologies/weblogic-server-installers-downloads.html

                Once you install this, set the cargo.weblogic122x.home property accordingly.

                For example:

                  <property>
                    <name>cargo.weblogic122x.home</name>
                    <value>C:/Oracle/wls12210/wlserver</value>
                  </property>
                -->
              <property>
                <name>cargo.weblogic122x.home</name>
                <value>${cargo.weblogic122x.home}</value>
              </property>
              <property>
                <name>cargo.weblogic122x.java.home</name>
                <value>${cargo.java.home.1_8}</value>
              </property>

              <!--
                WebLogic 14.x

                Notes:

                WebLogic 14 runs on JDK 8

                There is no non-interactive download link for WL 14.x.  Here is is a link that requires license agreement:
                   * https://www.oracle.com/middleware/technologies/weblogic-server-installers-downloads.html

                Once you install this, set the cargo.weblogic14x.home property accordingly.

                For example:

                  <property>
                    <name>cargo.weblogic14x.home</name>
                    <value>C:/Oracle/wls_14.1.1.0.0/wlserver</value>
                  </property>
                -->
              <property>
                <name>cargo.weblogic14x.home</name>
                <value>${cargo.weblogic14x.home}</value>
              </property>
              <property>
                <name>cargo.weblogic14x.java.home</name>
                <value>${cargo.java.home.1_8}</value>
              </property>

              <!--
                WebSphere 8.5.x

                Notes:

                WebSphere 8.5 runs on JDK 1.6

                There is no non-interactive download link for WebSphere 8.5.x.  Here is is a link that requires license agreement:
                   * https://www.ibm.com/cloud/websphere-application-server

                Once you install this, set the cargo.websphere85x.home property accordingly.

                For example:

                  <property>
                    <name>cargo.websphere85x.home</name>
                    <value>C:/Program Files/IBM/WebSphere/AppServer</value>
                  </property>
                -->
              <property>
                <name>cargo.websphere85x.home</name>
                <value>${cargo.websphere85x.home}</value>
              </property>
              <property>
                <name>cargo.websphere85x.java.home</name>
                <value>${cargo.java.home.1_6}</value>
              </property>

              <!--
                WebSphere 9.x

                Notes:

                WebSphere 9 runs on JDK 8

                There is no non-interactive download link for WebSphere 9.x.  Here is is a link that requires license agreement:
                   * https://www.ibm.com/cloud/websphere-application-server

                Once you install this, set the cargo.websphere9x.home property accordingly.

                For example:

                  <property>
                    <name>cargo.websphere9x.home</name>
                    <value>C:/Program Files/IBM/WebSphere/AppServer</value>
                  </property>
                -->
              <property>
                <name>cargo.websphere9x.home</name>
                <value>${cargo.websphere9x.home}</value>
              </property>
              <property>
                <name>cargo.websphere9x.java.home</name>
                <value>${cargo.java.home.1_8}</value>
              </property>

              <property>
                <name>cargo.wildfly8x.url</name>
                <!--
                <value>https://download.jboss.org/wildfly/8.0.0.Final/wildfly-8.0.0.Final.tar.gz</value>
                  -->
                <!--
                <value>https://download.jboss.org/wildfly/8.1.0.Final/wildfly-8.1.0.Final.tar.gz</value>
                  -->
                <value>https://download.jboss.org/wildfly/8.2.1.Final/wildfly-8.2.1.Final.tar.gz</value>
              </property>
              <property>
                <name>cargo.wildfly8x.java.home</name>
                <value>${cargo.java.home.1_7}</value>
              </property>

              <property>
                <name>cargo.wildfly9x.url</name>
                <value>https://download.jboss.org/wildfly/9.0.2.Final/wildfly-9.0.2.Final.tar.gz</value>
              </property>
              <property>
                <name>cargo.wildfly9x.java.home</name>
                <value>${cargo.java.home.1_7}</value>
              </property>

              <!--
                JBoss EAP 7 is based on WildFly 10.x, as a result the WildFly 10.x container
                should be used to run JBoss EAP 7.

                To test JBoss EAP 7, please download it manually from
                https://developers.redhat.com/products/eap/download
                and set the cargo.wildfly10x.home property accordingly.

                For example:

                  <property>
                    <name>cargo.wildfly10x.home</name>
                    <value>C:/Program Files/JBoss/jboss-eap-7.0.0</value>
                  </property>
                -->
              <property>
                <name>cargo.wildfly10x.url</name>
                <value>https://download.jboss.org/wildfly/10.1.0.Final/wildfly-10.1.0.Final.tar.gz</value>
              </property>
              <property>
                <name>cargo.wildfly10x.java.home</name>
                <value>${cargo.java.home.1_8}</value>
              </property>

              <!--
                JBoss EAP 7.1 is based on WildFly 11.x, as a result the WildFly 11.x container
                should be used to run JBoss EAP 7.1.

                To test JBoss EAP 7.1, please download it manually from
                https://developers.redhat.com/products/eap/download
                and set the cargo.wildfly11x.home property accordingly.

                For example:

                  <property>
                    <name>cargo.wildfly11x.home</name>
                    <value>C:/Program Files/JBoss/jboss-eap-7.1.0</value>
                  </property>
                -->
              <property>
                <name>cargo.wildfly11x.url</name>
                <value>https://download.jboss.org/wildfly/11.0.0.Final/wildfly-11.0.0.Final.zip</value>
              </property>
              <property>
                <name>cargo.wildfly11x.java.home</name>
                <value>${cargo.java.home.1_8}</value>
              </property>

              <property>
                <name>cargo.wildfly12x.url</name>
                <value>https://download.jboss.org/wildfly/12.0.0.Final/wildfly-12.0.0.Final.zip</value>
              </property>
              <property>
                <name>cargo.wildfly12x.java.home</name>
                <value>${cargo.java.home.1_8}</value>
              </property>

              <!--
                JBoss EAP 7.2 is based on WildFly 13.x, as a result the WildFly 13.x container
                should be used to run JBoss EAP 7.2.

                To test JBoss EAP 7.2, please download it manually from
                https://developers.redhat.com/products/eap/download
                and set the cargo.wildfly13x.home property accordingly.

                For example:

                  <property>
                    <name>cargo.wildfly13x.home</name>
                    <value>C:/Program Files/JBoss/jboss-eap-7.2.0</value>
                  </property>
                -->
              <property>
                <name>cargo.wildfly13x.url</name>
                <value>https://download.jboss.org/wildfly/13.0.0.Final/wildfly-13.0.0.Final.zip</value>
              </property>
              <property>
                <name>cargo.wildfly13x.java.home</name>
                <value>${cargo.java.home.1_8}</value>
              </property>

              <property>
                <name>cargo.wildfly14x.url</name>
                <value>https://download.jboss.org/wildfly/14.0.1.Final/wildfly-14.0.1.Final.zip</value>
              </property>
              <property>
                <name>cargo.wildfly14x.java.home</name>
                <value>${cargo.java.home.1_8}</value>
              </property>

              <property>
                <name>cargo.wildfly15x.url</name>
                <value>https://download.jboss.org/wildfly/15.0.1.Final/wildfly-15.0.1.Final.zip</value>
              </property>
              <property>
                <name>cargo.wildfly15x.java.home</name>
                <value>${cargo.java.home.1_8}</value>
              </property>

              <property>
                <name>cargo.wildfly16x.url</name>
                <value>https://download.jboss.org/wildfly/16.0.0.Final/wildfly-16.0.0.Final.zip</value>
              </property>
              <property>
                <name>cargo.wildfly16x.java.home</name>
                <value>${cargo.java.home.1_8}</value>
              </property>

              <property>
                <name>cargo.wildfly17x.url</name>
                <value>https://download.jboss.org/wildfly/17.0.1.Final/wildfly-17.0.1.Final.zip</value>
              </property>
              <property>
                <name>cargo.wildfly17x.java.home</name>
                <value>${cargo.java.home.1_8}</value>
              </property>

              <!--
                JBoss EAP 7.3 is based on WildFly 18.x, as a result the WildFly 18.x container
                should be used to run JBoss EAP 7.3.

                To test JBoss EAP 7.3, please download it manually from
                https://developers.redhat.com/products/eap/download
                and set the cargo.wildfly18x.home property accordingly.

                For example:

                  <property>
                    <name>cargo.wildfly18x.home</name>
                    <value>C:/Program Files/JBoss/jboss-eap-7.3.0</value>
                  </property>
                -->
              <property>
                <name>cargo.wildfly18x.url</name>
                <value>https://download.jboss.org/wildfly/18.0.1.Final/wildfly-18.0.1.Final.zip</value>
              </property>
              <property>
                <name>cargo.wildfly18x.java.home</name>
                <value>${cargo.java.home.1_8}</value>
              </property>

              <property>
                <name>cargo.wildfly19x.url</name>
                <value>https://download.jboss.org/wildfly/19.1.0.Final/wildfly-19.1.0.Final.zip</value>
              </property>
              <property>
                <name>cargo.wildfly19x.java.home</name>
                <value>${cargo.java.home.1_8}</value>
              </property>

              <property>
                <name>cargo.wildfly20x.url</name>
                <value>https://download.jboss.org/wildfly/20.0.1.Final/wildfly-20.0.1.Final.zip</value>
              </property>
              <property>
                <name>cargo.wildfly20x.java.home</name>
                <value>${cargo.java.home.1_8}</value>
              </property>

              <property>
                <name>cargo.wildfly21x.url</name>
                <value>https://download.jboss.org/wildfly/21.0.2.Final/wildfly-21.0.2.Final.zip</value>
              </property>
              <property>
                <name>cargo.wildfly21x.java.home</name>
                <value>${cargo.java.home.1_8}</value>
              </property>

              <!--
                JBoss EAP 7.4 is based on WildFly 22.x, as a result the WildFly 22.x container
                should be used to run JBoss EAP 7.4.

                To test JBoss EAP 7.4, please download it manually from
                https://developers.redhat.com/products/eap/download
                and set the cargo.wildfly22x.home property accordingly.

                For example:

                  <property>
                    <name>cargo.wildfly22x.home</name>
                    <value>C:/Program Files/JBoss/jboss-eap-7.4.0</value>
                  </property>
                -->
              <property>
                <name>cargo.wildfly22x.url</name>
                <value>https://download.jboss.org/wildfly/22.0.1.Final/wildfly-22.0.1.Final.zip</value>
              </property>
              <property>
                <name>cargo.wildfly22x.java.home</name>
                <value>${cargo.java.home.1_8}</value>
              </property>

              <property>
                <name>cargo.wildfly23x.url</name>
                <value>https://download.jboss.org/wildfly/23.0.2.Final/wildfly-23.0.2.Final.zip</value>
              </property>
              <property>
                <name>cargo.wildfly23x.java.home</name>
                <value>${cargo.java.home.1_8}</value>
              </property>

              <property>
                <name>cargo.wildfly24x.url</name>
                <value>https://download.jboss.org/wildfly/24.0.1.Final/wildfly-24.0.1.Final.zip</value>
              </property>
              <property>
                <name>cargo.wildfly24x.java.home</name>
                <value>${cargo.java.home.1_8}</value>
              </property>

              <property>
                <name>cargo.wildfly25x.url</name>
                <value>https://github.com/wildfly/wildfly/releases/download/25.0.1.Final/wildfly-25.0.1.Final.zip</value>
              </property>
              <property>
                <name>cargo.wildfly25x.java.home</name>
                <value>${cargo.java.home.1_8}</value>
              </property>

              <property>
                <name>cargo.wildfly26x.url</name>
                <value>https://github.com/wildfly/wildfly/releases/download/26.1.1.Final/wildfly-26.1.1.Final.zip</value>
              </property>
              <property>
                <name>cargo.wildfly26x.java.home</name>
                <value>${cargo.java.home.1_8}</value>
              </property>

              <property>
                <name>cargo.wildfly-swarm2017x.home</name>
                <value>${project.build.directory}/wildfly-swarm/wildfly-hollowswarm-${wildfly-swarm.version}.jar</value>
              </property>
              <property>
                <name>cargo.wildfly-swarm2017x.java.home</name>
                <value>${cargo.java.home.1_8}</value>
              </property>
              <property>
                <name>cargo.samples.wildfly-swarm2017x.swarm.ping.url</name>
                <value>http://localhost:${cargo.samples.servlet.port}/simple-war/</value>
              </property>

              <!--
                If you're behind a proxy, you can define the following properties in your
                settings.xml file:

                  <property>
                    <name>cargo.proxy.host</name>
                    <value>[proxy host]</value>
                  </property>
                  <property>
                    <name>cargo.proxy.servlet.port</name>
                    <value>[proxy port]</value>
                  </property>
                  <property>
                    <name>cargo.proxy.user</name>
                    <value>[proxy user (if any)]</value>
                  </property>
                  <property>
                    <name>cargo.proxy.password</name>
                    <value>[proxy password (if any)]</value>
                  </property>
                  <property>
                    <name>cargo.proxy.excludehosts</name>
                    <value>
                      [A list of hosts to bypass the proxy on (if any). These should be
                      separated with the vertical bar character '|'.
                      e.g. fozbot.corp.sun.com|*.eng.sun.com]
                    </value>
                  </property>
              -->

              <property>
                <name>cargo.target.dir</name>
                <value>${project.build.directory}</value>
              </property>

              <property>
                <name>cargo.containers.timeout</name>
                <value>${cargo.containers.timeout}</value>
              </property>

              <property>
                <name>cargo.testdata.mail-jars</name>
                <value>${project.build.directory}/mail-jars</value>
              </property>

              <property>
                <name>cargo.testdata.derby-jar</name>
                <value>${project.build.directory}/test-jars/derby.jar</value>
              </property>

              <property>
                <name>cargo.testdata.simple-jar</name>
                <value>${project.build.directory}/test-jars/simple.jar</value>
              </property>

              <property>
                <name>cargo.testdata.test-jars</name>
                <value>${project.build.directory}/test-jars</value>
              </property>

              <property>
                <name>cargo.testdata.deployables</name>
                <value>${project.build.directory}/deployables</value>
              </property>

              <!-- Location where to download the containers for the tests -->
              <property>
                <name>cargo.download.dir</name>
                <value>${cargo.download.dir}</value>
              </property>

              <!--
                Default list of containers to run on. If you want to shorten or change the
                execution of 'samples', simply specify a shorter list of containers on the command
                line or in your settings
                -->
              <property>
                <name>cargo.containers</name>
                <value>${cargo.containers}</value>
              </property>
            </systemProperties>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <phase>process-test-resources</phase>
            <configuration>
              <artifactItems>
                <!-- Jakarta EE migration tool -->
                <artifactItem>
                  <groupId>org.apache.tomcat</groupId>
                  <artifactId>jakartaee-migration</artifactId>
                  <classifier>shaded</classifier>
                  <outputDirectory>${project.build.directory}/test-jars</outputDirectory>
                  <destFileName>jakartaee-migration-tool.jar</destFileName>
                </artifactItem>
                <!--
                  Copy the designated jdbc driver to an area where the containers can reference it
                  -->
                <artifactItem>
                  <groupId>org.apache.derby</groupId>
                  <artifactId>derby</artifactId>
                  <outputDirectory>${project.build.directory}/test-jars</outputDirectory>
                  <destFileName>derby.jar</destFileName>
                </artifactItem>
                <artifactItem>
                  <groupId>org.codehaus.cargo</groupId>
                  <artifactId>simple-jar</artifactId>
                  <outputDirectory>${project.build.directory}/test-jars</outputDirectory>
                  <destFileName>simple.jar</destFileName>
                </artifactItem>
                <!-- To get Java EE / Jakarta EE JARs needed for Tomcat to work with mail sessions -->
                <artifactItem>
                  <groupId>com.sun.mail</groupId>
                  <artifactId>mailapi</artifactId>
                  <outputDirectory>${project.build.directory}/mail-jars/jakarta</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>jakarta.activation</groupId>
                  <artifactId>jakarta.activation-api</artifactId>
                  <outputDirectory>${project.build.directory}/mail-jars/jakarta</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>javax.activation</groupId>
                  <artifactId>activation</artifactId>
                  <outputDirectory>${project.build.directory}/mail-jars/javax</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>javax.mail</groupId>
                  <artifactId>mail</artifactId>
                  <outputDirectory>${project.build.directory}/mail-jars/javax</outputDirectory>
                </artifactItem>
                <!-- Deployables -->
                <artifactItem>
                  <groupId>org.codehaus.cargo</groupId>
                  <artifactId>empty-ear</artifactId>
                  <type>ear</type>
                  <outputDirectory>${project.build.directory}/deployables</outputDirectory>
                  <destFileName>empty-ear.ear</destFileName>
                </artifactItem>
                <artifactItem>
                  <groupId>org.codehaus.cargo</groupId>
                  <artifactId>authentication-war</artifactId>
                  <type>war</type>
                  <outputDirectory>${project.build.directory}/deployables</outputDirectory>
                  <destFileName>authentication-war.war</destFileName>
                </artifactItem>
                <artifactItem>
                  <groupId>org.codehaus.cargo</groupId>
                  <artifactId>expanded-war</artifactId>
                  <type>war</type>
                  <outputDirectory>${project.build.directory}/deployables</outputDirectory>
                  <destFileName>expanded-war.war</destFileName>
                </artifactItem>
                <artifactItem>
                  <groupId>org.codehaus.cargo</groupId>
                  <artifactId>simple-ear</artifactId>
                  <type>ear</type>
                  <outputDirectory>${project.build.directory}/deployables</outputDirectory>
                  <destFileName>simple-ear.ear</destFileName>
                </artifactItem>
                <artifactItem>
                  <groupId>org.codehaus.cargo</groupId>
                  <artifactId>simple-war</artifactId>
                  <type>war</type>
                  <outputDirectory>${project.build.directory}/deployables</outputDirectory>
                  <destFileName>simple-war.war</destFileName>
                </artifactItem>
                <artifactItem>
                  <groupId>org.codehaus.cargo</groupId>
                  <artifactId>datasource-war</artifactId>
                  <type>war</type>
                  <outputDirectory>${project.build.directory}/deployables</outputDirectory>
                  <destFileName>datasource-war.war</destFileName>
                </artifactItem>
                <artifactItem>
                  <groupId>org.codehaus.cargo</groupId>
                  <artifactId>two-datasources-war</artifactId>
                  <type>war</type>
                  <outputDirectory>${project.build.directory}/deployables</outputDirectory>
                  <destFileName>two-datasources-war.war</destFileName>
                </artifactItem>
                <artifactItem>
                  <groupId>org.codehaus.cargo</groupId>
                  <artifactId>xadatasource-war</artifactId>
                  <type>war</type>
                  <outputDirectory>${project.build.directory}/deployables</outputDirectory>
                  <destFileName>xadatasource-war.war</destFileName>
                </artifactItem>
                <artifactItem>
                  <groupId>org.codehaus.cargo</groupId>
                  <artifactId>mailsession-war</artifactId>
                  <type>war</type>
                  <outputDirectory>${project.build.directory}/deployables</outputDirectory>
                  <destFileName>mailsession-war.war</destFileName>
                </artifactItem>
                <artifactItem>
                  <groupId>org.codehaus.cargo</groupId>
                  <artifactId>datasource-cmt-local-war</artifactId>
                  <type>war</type>
                  <outputDirectory>${project.build.directory}/deployables</outputDirectory>
                  <destFileName>datasource-cmt-local-war.war</destFileName>
                </artifactItem>
                <artifactItem>
                  <groupId>org.codehaus.cargo</groupId>
                  <artifactId>jms-queue-war</artifactId>
                  <type>war</type>
                  <outputDirectory>${project.build.directory}/deployables</outputDirectory>
                  <destFileName>jms-queue-war.war</destFileName>
                </artifactItem>
                <artifactItem>
                  <groupId>org.codehaus.cargo</groupId>
                  <artifactId>jms-topic-war</artifactId>
                  <type>war</type>
                  <outputDirectory>${project.build.directory}/deployables</outputDirectory>
                  <destFileName>jms-topic-war.war</destFileName>
                </artifactItem>
                <artifactItem>
                  <groupId>org.codehaus.cargo</groupId>
                  <artifactId>classpath-war</artifactId>
                  <type>war</type>
                  <outputDirectory>${project.build.directory}/deployables</outputDirectory>
                  <destFileName>classpath-war.war</destFileName>
                </artifactItem>
                <artifactItem>
                  <groupId>org.codehaus.cargo</groupId>
                  <artifactId>simple-ejb</artifactId>
                  <type>jar</type>
                  <outputDirectory>${project.build.directory}/deployables</outputDirectory>
                  <destFileName>simple-ejb.jar</destFileName>
                </artifactItem>
                <artifactItem>
                  <groupId>org.codehaus.cargo</groupId>
                  <artifactId>tomcatcontext-war</artifactId>
                  <type>war</type>
                  <outputDirectory>${project.build.directory}/deployables</outputDirectory>
                  <destFileName>tomcatcontext-war.war</destFileName>
                </artifactItem>
                <artifactItem>
                  <groupId>org.codehaus.cargo</groupId>
                  <artifactId>tomcatcontext-war-link-simple-jar</artifactId>
                  <type>war</type>
                  <outputDirectory>${project.build.directory}/deployables</outputDirectory>
                  <destFileName>tomcatcontext-war-link-simple-jar.war</destFileName>
                </artifactItem>
                <artifactItem>
                  <groupId>org.codehaus.cargo</groupId>
                  <artifactId>simple-bundle</artifactId>
                  <type>jar</type>
                  <outputDirectory>${project.build.directory}/deployables</outputDirectory>
                  <destFileName>simple-bundle.jar</destFileName>
                </artifactItem>
                <artifactItem>
                  <groupId>org.codehaus.cargo</groupId>
                  <artifactId>cargo-jetty-6-and-earlier-deployer</artifactId>
                  <type>war</type>
                  <outputDirectory>${project.build.directory}/deployables</outputDirectory>
                  <destFileName>cargo-jetty-6-and-earlier-deployer.war</destFileName>
                </artifactItem>
                <artifactItem>
                  <groupId>org.codehaus.cargo</groupId>
                  <artifactId>cargo-jetty-7-to-jetty-9-deployer</artifactId>
                  <type>war</type>
                  <outputDirectory>${project.build.directory}/deployables</outputDirectory>
                  <destFileName>cargo-jetty-7-to-jetty-9-deployer.war</destFileName>
                </artifactItem>
                <artifactItem>
                  <groupId>org.codehaus.cargo</groupId>
                  <artifactId>cargo-jetty-10-deployer</artifactId>
                  <type>war</type>
                  <outputDirectory>${project.build.directory}/deployables</outputDirectory>
                  <destFileName>cargo-jetty-10-deployer.war</destFileName>
                </artifactItem>
                <artifactItem>
                  <groupId>org.codehaus.cargo</groupId>
                  <artifactId>cargo-jetty-11-onwards-deployer</artifactId>
                  <type>war</type>
                  <outputDirectory>${project.build.directory}/deployables</outputDirectory>
                  <destFileName>cargo-jetty-11-onwards-deployer.war</destFileName>
                </artifactItem>
                <artifactItem>
                  <groupId>org.codehaus.cargo</groupId>
                  <artifactId>simple-har</artifactId>
                  <type>har</type>
                  <outputDirectory>${project.build.directory}/deployables</outputDirectory>
                  <destFileName>simple-har.har</destFileName>
                </artifactItem>
                <artifactItem>
                  <groupId>org.codehaus.cargo</groupId>
                  <artifactId>simple-aop</artifactId>
                  <type>aop</type>
                  <outputDirectory>${project.build.directory}/deployables</outputDirectory>
                  <destFileName>simple-aop.aop</destFileName>
                </artifactItem>
                <artifactItem>
                  <groupId>org.codehaus.cargo</groupId>
                  <artifactId>systemproperty-war</artifactId>
                  <type>war</type>
                  <outputDirectory>${project.build.directory}/deployables</outputDirectory>
                  <destFileName>systemproperty-war.war</destFileName>
                </artifactItem>
              </artifactItems>
            </configuration>
            <goals>
              <goal>copy</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Make sure tests always use randomly assigned and available ports -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>generate-port-numbers</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>reserve-network-port</goal>
            </goals>
            <configuration>
              <portNames>
                <portName>cargo.samples.servlet.port</portName>
                <portName>cargo.samples.rmi.port</portName>
                <portName>cargo.samples.glassfish.admin.port</portName>
                <portName>cargo.samples.glassfish.http.ssl.port</portName>
                <portName>cargo.samples.glassfish.java.debugger.port</portName>
                <portName>cargo.samples.glassfish.jms.port</portName>
                <portName>cargo.samples.glassfish.orb.listener.port</portName>
                <portName>cargo.samples.glassfish.orb.mutualauth.port</portName>
                <portName>cargo.samples.glassfish.orb.ssl.port</portName>
                <portName>cargo.samples.glassfish.osgi.shell.telnet.port</portName>
                <portName>cargo.samples.jboss.ajp.port</portName>
                <portName>cargo.samples.jboss.https.port</portName>
                <portName>cargo.samples.jboss.naming.port</portName>
                <portName>cargo.samples.jboss.classloading.webservice.port</portName>
                <portName>cargo.samples.jboss.jrmp.port</portName>
                <portName>cargo.samples.jboss.jrmp.invoker.port</portName>
                <portName>cargo.samples.jboss.invoker.pool.port</portName>
                <portName>cargo.samples.jboss.remoting.transport.port</portName>
                <portName>cargo.samples.jboss.ejb3.remoting.port</portName>
                <portName>cargo.samples.jboss.transaction.recoveryManager.port</portName>
                <portName>cargo.samples.jboss.transaction.statusManager.port</portName>
                <portName>cargo.samples.jboss.remotedeploy.port</portName>
                <portName>cargo.samples.jboss.jmx.port</portName>
                <portName>cargo.samples.jboss.management-native.port</portName>
                <portName>cargo.samples.jboss.management-http.port</portName>
                <portName>cargo.samples.jboss.management-https.port</portName>
                <portName>cargo.samples.jboss.osgi.http.port</portName>
                <portName>cargo.samples.resin.socketwait.port</portName>
                <portName>cargo.samples.tomcat.ajp.port</portName>
              </portNames>
              <!-- Leave enough space for the port offset tests -->
              <minPortNumber>10000</minPortNumber>
              <maxPortNumber>64535</maxPortNumber>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <modules>
    <module>java</module>
  </modules>

  <properties>
    <!-- Default from surefire -->
    <surefire.childDelegation>false</surefire.childDelegation>
    <surefire.useManifestOnlyJar>true</surefire.useManifestOnlyJar>
    <surefire.useSystemClassLoader>true</surefire.useSystemClassLoader>
    <!--
      TODO: CARGO-449: Rather install all these container binaries into the Maven 3 repository.
            It would be lovely to install all containers to:
            ${settings.localRepository}/org/codehaus/cargo/installs
      -->
    <cargo.download.dir>${project.basedir}/installs</cargo.download.dir>
    <!-- Tomcat 5.x and Jetty 7.x require this setting for the embedded tests -->
    <javax.xml.parsers.SAXParserFactory>com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl</javax.xml.parsers.SAXParserFactory>
    <cargo.java.home.1_4>${java.home}</cargo.java.home.1_4>
    <cargo.java.home.1_5>${java.home}</cargo.java.home.1_5>
    <cargo.java.home.1_6>${java.home}</cargo.java.home.1_6>
    <!-- A timeout of up to three minutes is required for JBoss 5.1.x and 6.x -->
    <cargo.containers.timeout>180000</cargo.containers.timeout>
  </properties>
  <profiles>
    <profile>
      <id>no-container</id>
      <properties>
        <cargo.containers />
      </properties>
    </profile>

    <profile>
      <id>jboss3x</id>
      <properties>
        <cargo.containers>jboss3x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>jboss4x</id>
      <properties>
        <cargo.containers>jboss4x</cargo.containers>
      </properties>
    </profile>
    <profile>
       <id>jboss42x</id>
       <properties>
         <cargo.containers>jboss42x</cargo.containers>
       </properties>
    </profile>
    <profile>
       <id>jboss5x</id>
       <properties>
         <cargo.containers>jboss5x</cargo.containers>
       </properties>
    </profile>
    <profile>
       <id>jboss51x</id>
       <properties>
         <cargo.containers>jboss51x</cargo.containers>
       </properties>
    </profile>
    <profile>
       <id>jboss6x</id>
       <properties>
         <cargo.containers>jboss6x</cargo.containers>
       </properties>
    </profile>
    <profile>
       <id>jboss61x</id>
       <properties>
         <cargo.containers>jboss61x</cargo.containers>
       </properties>
    </profile>
    <profile>
       <id>jboss7x</id>
       <properties>
         <cargo.containers>jboss7x</cargo.containers>
       </properties>
    </profile>
    <profile>
       <id>jboss71x</id>
       <properties>
         <cargo.containers>jboss71x</cargo.containers>
       </properties>
    </profile>
    <profile>
       <id>jboss72x</id>
       <properties>
         <cargo.containers>jboss72x</cargo.containers>
       </properties>
    </profile>
    <profile>
       <id>jboss73x</id>
       <properties>
         <cargo.containers>jboss73x</cargo.containers>
       </properties>
    </profile>
    <profile>
       <id>jboss74x</id>
       <properties>
         <cargo.containers>jboss74x</cargo.containers>
       </properties>
    </profile>
    <profile>
       <id>jboss75x</id>
       <properties>
         <cargo.containers>jboss75x</cargo.containers>
       </properties>
    </profile>

    <profile>
      <id>jetty5x</id>
      <properties>
        <cargo.containers>jetty5x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>jetty6x</id>
      <properties>
        <cargo.containers>jetty6x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>jetty7x</id>
      <properties>
        <cargo.containers>jetty7x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>jetty8x</id>
      <properties>
        <cargo.containers>jetty8x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>jetty9x</id>
      <properties>
        <cargo.containers>jetty9x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>jetty10x</id>
      <properties>
        <cargo.containers>jetty10x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>jetty11x</id>
      <properties>
        <cargo.containers>jetty11x</cargo.containers>
      </properties>
    </profile>

    <profile>
      <id>jo1x</id>
      <properties>
        <cargo.containers>jo1x</cargo.containers>
      </properties>
    </profile>

    <profile>
      <id>jonas4x</id>
      <properties>
        <cargo.containers>jonas4x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>jonas5x</id>
      <properties>
        <cargo.containers>jonas5x</cargo.containers>
      </properties>
    </profile>

    <profile>
      <id>jrun4x</id>
      <properties>
        <cargo.containers>jrun4x</cargo.containers>
      </properties>
    </profile>

    <profile>
      <id>geronimo1x</id>
      <properties>
        <cargo.containers>geronimo1x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>geronimo2x</id>
      <properties>
        <cargo.containers>geronimo2x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>geronimo3x</id>
      <properties>
        <cargo.containers>geronimo3x</cargo.containers>
      </properties>
    </profile>

    <profile>
      <id>glassfish2x</id>
      <properties>
        <cargo.containers>glassfish2x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>glassfish3x</id>
      <properties>
        <cargo.containers>glassfish3x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>glassfish4x</id>
      <properties>
        <cargo.containers>glassfish4x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>glassfish5x</id>
      <properties>
        <cargo.containers>glassfish5x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>glassfish6x</id>
      <properties>
        <cargo.containers>glassfish6x</cargo.containers>
      </properties>
    </profile>

    <profile>
      <id>liberty</id>
      <properties>
        <cargo.containers>liberty</cargo.containers>
      </properties>
    </profile>

    <profile>
      <id>oc4j9x</id>
      <properties>
        <cargo.containers>oc4j9x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>oc4j10x</id>
      <properties>
        <cargo.containers>oc4j10x</cargo.containers>
      </properties>
    </profile>

    <profile>
      <id>payara</id>
      <properties>
        <cargo.containers>payara</cargo.containers>
      </properties>
    </profile>

    <profile>
      <id>resin3x</id>
      <properties>
        <cargo.containers>resin3x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>resin31x</id>
      <properties>
        <cargo.containers>resin31x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>resin4x</id>
      <properties>
        <cargo.containers>resin4x</cargo.containers>
      </properties>
    </profile>

    <profile>
      <id>tomcat4x</id>
      <properties>
        <cargo.containers>tomcat4x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>tomcat5x</id>
      <properties>
        <cargo.containers>tomcat5x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>tomcat6x</id>
      <properties>
        <cargo.containers>tomcat6x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>tomcat7x</id>
      <properties>
        <cargo.containers>tomcat7x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>tomcat8x</id>
      <properties>
        <cargo.containers>tomcat8x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>tomcat9x</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <cargo.containers>tomcat9x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>tomcat10x</id>
      <properties>
        <cargo.containers>tomcat10x</cargo.containers>
      </properties>
    </profile>

    <profile>
      <id>tomee1x</id>
      <properties>
        <cargo.containers>tomee1x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>tomee7x</id>
      <properties>
        <cargo.containers>tomee7x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>tomee8x</id>
      <properties>
        <cargo.containers>tomee8x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>tomee9x</id>
      <properties>
        <cargo.containers>tomee9x</cargo.containers>
      </properties>
    </profile>

    <profile>
      <id>weblogic8x</id>
      <properties>
        <cargo.containers>weblogic8x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>weblogic9x</id>
      <properties>
        <cargo.containers>weblogic9x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>weblogic10x</id>
      <properties>
        <cargo.containers>weblogic10x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>weblogic103x</id>
      <properties>
        <cargo.containers>weblogic103x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>weblogic12x</id>
      <properties>
        <cargo.containers>weblogic12x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>weblogic121x</id>
      <properties>
        <cargo.containers>weblogic121x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>weblogic122x</id>
      <properties>
        <cargo.containers>weblogic122x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>weblogic14x</id>
      <properties>
        <cargo.containers>weblogic14x</cargo.containers>
      </properties>
    </profile>

    <profile>
      <id>websphere85x</id>
      <properties>
        <cargo.containers>websphere85x</cargo.containers>
      </properties>
    </profile>

    <profile>
      <id>websphere9x</id>
      <properties>
        <cargo.containers>websphere9x</cargo.containers>
      </properties>
    </profile>

    <profile>
      <id>wildfly8x</id>
      <properties>
        <cargo.containers>wildfly8x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>wildfly9x</id>
      <properties>
        <cargo.containers>wildfly9x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>wildfly10x</id>
      <properties>
        <cargo.containers>wildfly10x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>wildfly11x</id>
      <properties>
        <cargo.containers>wildfly11x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>wildfly12x</id>
      <properties>
        <cargo.containers>wildfly12x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>wildfly13x</id>
      <properties>
        <cargo.containers>wildfly13x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>wildfly14x</id>
      <properties>
        <cargo.containers>wildfly14x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>wildfly15x</id>
      <properties>
        <cargo.containers>wildfly15x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>wildfly16x</id>
      <properties>
        <cargo.containers>wildfly16x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>wildfly17x</id>
      <properties>
        <cargo.containers>wildfly17x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>wildfly18x</id>
      <properties>
        <cargo.containers>wildfly18x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>wildfly19x</id>
      <properties>
        <cargo.containers>wildfly19x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>wildfly20x</id>
      <properties>
        <cargo.containers>wildfly20x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>wildfly21x</id>
      <properties>
        <cargo.containers>wildfly21x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>wildfly22x</id>
      <properties>
        <cargo.containers>wildfly22x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>wildfly23x</id>
      <properties>
        <cargo.containers>wildfly23x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>wildfly24x</id>
      <properties>
        <cargo.containers>wildfly24x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>wildfly25x</id>
      <properties>
        <cargo.containers>wildfly25x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>wildfly26x</id>
      <properties>
        <cargo.containers>wildfly26x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>wildfly-swarm2017x</id>
      <properties>
        <cargo.containers>wildfly-swarm2017x</cargo.containers>
      </properties>
      <dependencies>
        <dependency>
          <groupId>org.codehaus.cargo</groupId>
          <artifactId>cargo-core-container-wildfly-swarm</artifactId>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>copy-hollowswarm-jar</id>
                <phase>process-test-resources</phase>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.wildfly.swarm.servers</groupId>
                      <artifactId>microprofile</artifactId>
                      <classifier>hollowswarm</classifier>
                      <version>${wildfly-swarm.version}</version>
                      <outputDirectory>${project.build.directory}/wildfly-swarm</outputDirectory>
                      <destFileName>wildfly-hollowswarm-${wildfly-swarm.version}.jar</destFileName>
                    </artifactItem>
                  </artifactItems>
                </configuration>
                <goals>
                  <goal>copy</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
