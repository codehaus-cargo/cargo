<?xml version="1.0" encoding="UTF-8"?>

<!--
  Codehaus Cargo, copyright 2004-2011 Vincent Massol, 2012-2024 Ali Tokmen.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.codehaus.cargo</groupId>
    <artifactId>cargo-samples-testdata</artifactId>
    <version>1.10.15-SNAPSHOT</version>
  </parent>
  <artifactId>datasource-cmt-local-war</artifactId>
  <name>Cargo test data for samples - Local Transaction DataSource WAR</name>
  <packaging>war</packaging>

  <!--
    Spring is only used by datasource-cmt-local-war,
    keep the version information here to avoid confusions.

    Spring 4 makes use of javax.transaction.TransactionSynchronizationRegistry,
    which is not available in JBoss 3.x, 4.x nor 4.2.x.
    -->
  <properties>
    <spring.version>3.2.18.RELEASE</spring.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jdbc</artifactId>
      <version>${spring.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
      <version>${spring.version}</version>
      <scope>provided</scope>
    </dependency>
  </dependencies>

  <!--
    Copy the Spring dependencies using a separate pom.xml and Maven instance, so commons-logging
    or other components don't get their version will be overriden and use EXACTLY the same versions
    as the ones from the Spring dependency.
    -->
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-invoker-plugin</artifactId>
        <configuration>
          <showErrors>true</showErrors>
          <streamLogs>true</streamLogs>
          <pom>${project.build.directory}/test-classes/pom.xml</pom>
          <goals>
            <goal>clean</goal>
            <goal>package</goal>
          </goals>
          <properties>
            <interactiveMode>false</interactiveMode>
          </properties>
        </configuration>
        <executions>
           <execution>
            <phase>prepare-package</phase>
            <goals>
              <goal>verify</goal>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>true</filtering>
        <includes>
          <include>pom.xml</include>
        </includes>
      </testResource>
    </testResources>
  </build>
</project>
